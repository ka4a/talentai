# Generated by Django 2.2.17 on 2020-11-23 13:18

from django.db import migrations


# Note(ZOO-957): stage - status mapping
STAGE_STATUS_DEAL_STAGES_MAPPING = {
    'associated': [
        ('associated_to_job', 'Associated to Job', 'out_of'),
        ('applied_by_candidate', 'Applied by Candidate', 'out_of'),
        ('suitable', 'Suitable', 'out_of'),
    ],
    'screening': [
        ('contacted', 'Contacted', 'first_round',),
        ('qualified', 'Qualified', 'first_round',),
    ],
    'submissions': [
        ('submitted_to_hiring_manager', 'Submitted to Hiring Manager', 'first_round'),
    ],
    'interviewing': [
        ('to_be_scheduled', 'To Be Scheduled', 'first_round'),
        (
            'pending_candidate_confirmation',
            'Pending Candidate Confirmation',
            'first_round',
        ),
        (
            'confirmed_client_availability',
            'Confirmed Client Availability',
            'first_round',
        ),
        ('scheduled', 'Scheduled', 'first_round'),
        ('completed_pending_feedback', 'Completed - Pending Feedback', 'first_round',),
    ],
    'offering': [
        ('pending_hiring_decision', 'Pending Hiring Decision', 'offer'),
        ('offer_to_be_prepared', 'Offer To Be Prepared', 'offer'),
        ('pending_offer_acceptance', 'Pending Offer Acceptance', 'offer'),
    ],
    'hired': [
        ('pending_start', 'Pending Start', 'out_of'),
        ('started', 'Started', 'out_of'),
    ],
}


def add_proposal_statuses(apps, schema_editor):
    db_alias = schema_editor.connection.alias

    Proposal = apps.get_model('core', 'Proposal')
    Proposal.objects.using(db_alias).delete()

    ContentType = apps.get_model('contenttypes', 'ContentType')
    Client = apps.get_model('core', 'Client')
    Agency = apps.get_model('core', 'Agency')
    OrganizationProposalStatus = apps.get_model('core', 'OrganizationProposalStatus')
    OrganizationProposalStatus.objects.using(db_alias).delete()
    ProposalStatus = apps.get_model('core', 'ProposalStatus')
    ProposalStatus.objects.using(db_alias).delete()
    order = 100
    for stage, status_tuple_list in STAGE_STATUS_DEAL_STAGES_MAPPING.items():
        for group, status, deal_stage in status_tuple_list:
            proposal_status = ProposalStatus.objects.using(db_alias).create(
                stage=stage,
                group=group,
                status_en=status,
                deal_stage=deal_stage,
                default_order=order,
                default=True,
            )
            order += 100

    client_type = ContentType.objects.get_for_model(Client)
    agency_type = ContentType.objects.get_for_model(Agency)

    organizations = []
    organizations.extend([(client_type, client.pk) for client in Client.objects.all()])
    organizations.extend([(agency_type, agency.pk) for agency in Agency.objects.all()])
    statuses = list(ProposalStatus.objects.filter(default=True))

    for org_type, org_id in organizations:
        for status in statuses:
            OrganizationProposalStatus.objects.create(
                status=status,
                org_id=org_id,
                org_content_type=org_type,
                order=status.default_order,
            )


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0223_update_proposal_statuses'),
    ]

    operations = [
        migrations.RunPython(add_proposal_statuses, migrations.RunPython.noop)
    ]
