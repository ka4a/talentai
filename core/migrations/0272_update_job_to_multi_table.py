# Generated by Django 3.1.13 on 2021-07-28 09:26

import core.models
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import djmoney.models.fields


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0271_add_log_entry_model'),
    ]

    operations = [
        migrations.CreateModel(
            name='CareerSiteJobPosting',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('title', models.CharField(max_length=128)),
                (
                    'employment_type',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('permanent', 'Permanent Employee'),
                            ('parttime', 'Part Time Employee'),
                            ('fixedterm', 'Fixed Term Contract Employee'),
                            ('dispatch', 'Dispatch'),
                            ('freelance', 'Freelance'),
                        ],
                        max_length=9,
                    ),
                ),
                ('mission', models.TextField(blank=True)),
                ('responsibilities', models.TextField()),
                ('requirements', models.TextField()),
                (
                    'salary_currency',
                    djmoney.models.fields.CurrencyField(
                        choices=[
                            ('USD', '$'),
                            ('CAD', 'C$'),
                            ('HKD', 'HK$'),
                            ('BRL', 'R$'),
                            ('GBP', '£'),
                            ('CNY', '¥'),
                            ('JPY', '¥'),
                            ('KRW', '₩'),
                            ('EUR', '€'),
                            ('INR', '₹'),
                        ],
                        default='JPY',
                        editable=False,
                        max_length=3,
                    ),
                ),
                (
                    'salary_from',
                    core.models.MoneyField(
                        blank=True,
                        currency_field_name='salary_currency',
                        decimal_places=0,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    'salary_to',
                    core.models.MoneyField(
                        blank=True,
                        currency_field_name='salary_currency',
                        decimal_places=0,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    'salary_per',
                    models.CharField(
                        choices=[
                            ('year', 'Year'),
                            ('month', 'Month'),
                            ('week', 'Week'),
                            ('day', 'Day'),
                            ('hour', 'Hour'),
                        ],
                        default='year',
                        max_length=16,
                    ),
                ),
                ('bonus_system', models.TextField(blank=True)),
                (
                    'probation_period_months',
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ('work_location', models.CharField(blank=True, max_length=128)),
                ('working_hours', models.TextField(blank=True)),
                ('break_time_mins', models.PositiveIntegerField(blank=True, null=True)),
                (
                    'flexitime_eligibility',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('eligible', 'Eligible'),
                            ('not_eligible', 'Not Eligible'),
                        ],
                        max_length=12,
                    ),
                ),
                (
                    'telework_eligibility',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('onsite', 'On Site Only'),
                            ('possible', 'Remote Possible'),
                            ('remote', 'Remote Only'),
                        ],
                        default='onsite',
                        max_length=8,
                        null=True,
                    ),
                ),
                ('overtime_conditions', models.TextField(blank=True)),
                ('paid_leaves', models.PositiveIntegerField(blank=True, null=True)),
                ('additional_leaves', models.TextField(blank=True)),
                (
                    'social_insurances',
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[
                                ('health', 'Health Insurance'),
                                ('employment', 'Employment Insurance'),
                                ('welfare_pension', 'Welfare Pension Insurance'),
                                (
                                    'accident_compensation',
                                    'Workers Accident Compensation Insurance',
                                ),
                            ],
                            max_length=21,
                        ),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                ('commutation_allowance', models.TextField(blank=True)),
                (
                    'other_benefits',
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[
                                ('visa', 'Visa Sponsorship'),
                                ('relocation', 'Relocation Assistance'),
                                ('wellness', 'Gym / Wellness Membership'),
                                ('coffee', 'Free Coffee'),
                            ],
                            max_length=10,
                        ),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    'function',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='core.function',
                    ),
                ),
            ],
            options={'abstract': False,},
        ),
        migrations.CreateModel(
            name='PrivateJobPosting',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('title', models.CharField(max_length=128)),
                (
                    'employment_type',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('permanent', 'Permanent Employee'),
                            ('parttime', 'Part Time Employee'),
                            ('fixedterm', 'Fixed Term Contract Employee'),
                            ('dispatch', 'Dispatch'),
                            ('freelance', 'Freelance'),
                        ],
                        max_length=9,
                    ),
                ),
                ('mission', models.TextField(blank=True)),
                ('responsibilities', models.TextField()),
                ('requirements', models.TextField()),
                (
                    'salary_currency',
                    djmoney.models.fields.CurrencyField(
                        choices=[
                            ('USD', '$'),
                            ('CAD', 'C$'),
                            ('HKD', 'HK$'),
                            ('BRL', 'R$'),
                            ('GBP', '£'),
                            ('CNY', '¥'),
                            ('JPY', '¥'),
                            ('KRW', '₩'),
                            ('EUR', '€'),
                            ('INR', '₹'),
                        ],
                        default='JPY',
                        editable=False,
                        max_length=3,
                    ),
                ),
                (
                    'salary_from',
                    core.models.MoneyField(
                        blank=True,
                        currency_field_name='salary_currency',
                        decimal_places=0,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    'salary_to',
                    core.models.MoneyField(
                        blank=True,
                        currency_field_name='salary_currency',
                        decimal_places=0,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    'salary_per',
                    models.CharField(
                        choices=[
                            ('year', 'Year'),
                            ('month', 'Month'),
                            ('week', 'Week'),
                            ('day', 'Day'),
                            ('hour', 'Hour'),
                        ],
                        default='year',
                        max_length=16,
                    ),
                ),
                ('bonus_system', models.TextField(blank=True)),
                (
                    'probation_period_months',
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ('work_location', models.CharField(blank=True, max_length=128)),
                ('working_hours', models.TextField(blank=True)),
                ('break_time_mins', models.PositiveIntegerField(blank=True, null=True)),
                (
                    'flexitime_eligibility',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('eligible', 'Eligible'),
                            ('not_eligible', 'Not Eligible'),
                        ],
                        max_length=12,
                    ),
                ),
                (
                    'telework_eligibility',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('onsite', 'On Site Only'),
                            ('possible', 'Remote Possible'),
                            ('remote', 'Remote Only'),
                        ],
                        default='onsite',
                        max_length=8,
                        null=True,
                    ),
                ),
                ('overtime_conditions', models.TextField(blank=True)),
                ('paid_leaves', models.PositiveIntegerField(blank=True, null=True)),
                ('additional_leaves', models.TextField(blank=True)),
                (
                    'social_insurances',
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[
                                ('health', 'Health Insurance'),
                                ('employment', 'Employment Insurance'),
                                ('welfare_pension', 'Welfare Pension Insurance'),
                                (
                                    'accident_compensation',
                                    'Workers Accident Compensation Insurance',
                                ),
                            ],
                            max_length=21,
                        ),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                ('commutation_allowance', models.TextField(blank=True)),
                (
                    'other_benefits',
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[
                                ('visa', 'Visa Sponsorship'),
                                ('relocation', 'Relocation Assistance'),
                                ('wellness', 'Gym / Wellness Membership'),
                                ('coffee', 'Free Coffee'),
                            ],
                            max_length=10,
                        ),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    'function',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='core.function',
                    ),
                ),
            ],
            options={'abstract': False,},
        ),
        migrations.AlterField(
            model_name='job',
            name='skills',
            field=models.ManyToManyField(
                blank=True, through='core.JobSkill', to='core.Tag'
            ),
        ),
        migrations.AlterField(
            model_name='jobskill',
            name='attached_by',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='jobskill',
            name='tag',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to='core.tag'
            ),
        ),
        migrations.CreateModel(
            name='PrivateJobPostingSkill',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'attached_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'job',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='core.privatejobposting',
                    ),
                ),
                (
                    'tag',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='core.tag'
                    ),
                ),
            ],
            options={'abstract': False, 'unique_together': {('job', 'tag')},},
        ),
        migrations.CreateModel(
            name='PrivateJobPostingQuestion',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('text', models.CharField(max_length=1024)),
                (
                    'job',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='questions',
                        related_query_name='question',
                        to='core.privatejobposting',
                    ),
                ),
            ],
            options={'ordering': ('id',), 'abstract': False,},
        ),
        migrations.AddField(
            model_name='privatejobposting',
            name='job',
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to='core.job',
                related_name='private_posting',
            ),
        ),
        migrations.AddField(
            model_name='privatejobposting',
            name='required_languages',
            field=models.ManyToManyField(blank=True, to='core.Language'),
        ),
        migrations.AddField(
            model_name='privatejobposting',
            name='skills',
            field=models.ManyToManyField(
                blank=True, through='core.PrivateJobPostingSkill', to='core.Tag'
            ),
        ),
        migrations.CreateModel(
            name='CareerSiteJobPostingSkill',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'attached_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'job',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='core.careersitejobposting',
                    ),
                ),
                (
                    'tag',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='core.tag'
                    ),
                ),
            ],
            options={'abstract': False, 'unique_together': {('job', 'tag')},},
        ),
        migrations.CreateModel(
            name='CareerSiteJobPostingQuestion',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('text', models.CharField(max_length=1024)),
                (
                    'job',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='questions',
                        related_query_name='question',
                        to='core.careersitejobposting',
                    ),
                ),
            ],
            options={'ordering': ('id',), 'abstract': False,},
        ),
        migrations.AddField(
            model_name='careersitejobposting',
            name='job',
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to='core.job',
                related_name='career_site_posting',
            ),
        ),
        migrations.AddField(
            model_name='careersitejobposting',
            name='required_languages',
            field=models.ManyToManyField(blank=True, to='core.Language'),
        ),
        migrations.AddField(
            model_name='careersitejobposting',
            name='skills',
            field=models.ManyToManyField(
                blank=True, through='core.CareerSiteJobPostingSkill', to='core.Tag'
            ),
        ),
    ]
