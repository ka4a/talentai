# Generated by Django 2.2.9 on 2020-02-11 13:06

from django.db import migrations, models
import django.db.models.deletion
import gfklookupwidget.fields
from django.db.models import F

ORGANIZATION_CHOICES = models.Q(
    models.Q(('app_label', 'core'), ('model', 'agency')),
    models.Q(('app_label', 'core'), ('model', 'client')),
    _connector='OR',
)


def get_client_content_type(apps):
    ContentTypes = apps.get_model('contenttypes', 'ContentType')
    return ContentTypes.objects.filter(app_label='core', model='client',).first()


def assign_client_org(apps, schema_editor):
    Job = apps.get_model('core', 'Job')
    OrganizationProposalStatus = apps.get_model('core', 'OrganizationProposalStatus')

    update_kwargs = {
        'org_id': F('client_id'),
        'org_content_type': get_client_content_type(apps),
    }

    Job.objects.update(**update_kwargs)
    OrganizationProposalStatus.objects.update(**update_kwargs)


def revert_assign_client_org(apps, schema_editor):
    OrganizationProposalStatus = apps.get_model('core', 'OrganizationProposalStatus')

    OrganizationProposalStatus.objects.filter(
        org_content_type=get_client_content_type(apps)
    ).update(client_id=F('org_id'))


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('core', '0146_client_owner_agency'),
    ]

    operations = [
        migrations.RenameModel(
            old_name='ClientProposalStatus', new_name='OrganizationProposalStatus',
        ),
        migrations.AddField(
            model_name='organizationproposalstatus',
            name='org_content_type',
            field=models.ForeignKey(
                limit_choices_to=ORGANIZATION_CHOICES,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='contenttypes.ContentType',
            ),
        ),
        migrations.AddField(
            model_name='organizationproposalstatus',
            name='org_id',
            field=gfklookupwidget.fields.GfkLookupField(null=True),
        ),
        migrations.AddField(
            model_name='job',
            name='org_content_type',
            field=models.ForeignKey(
                limit_choices_to=ORGANIZATION_CHOICES,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='contenttypes.ContentType',
            ),
        ),
        migrations.AddField(
            model_name='job',
            name='org_id',
            field=gfklookupwidget.fields.GfkLookupField(null=True),
        ),
        migrations.RunPython(assign_client_org, migrations.RunPython.noop),
        migrations.AlterField(
            model_name='job',
            name='org_content_type',
            field=models.ForeignKey(
                limit_choices_to=ORGANIZATION_CHOICES,
                on_delete=django.db.models.deletion.CASCADE,
                to='contenttypes.ContentType',
            ),
        ),
        migrations.AlterField(
            model_name='job',
            name='org_id',
            field=gfklookupwidget.fields.GfkLookupField(),
        ),
        migrations.AlterField(
            model_name='organizationproposalstatus',
            name='client',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='core.Client',
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name='job',
            name='client',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='core.Client',
                related_name='assigned_jobs',
            ),
        ),
        migrations.RunPython(migrations.RunPython.noop, revert_assign_client_org),
        migrations.RemoveField(model_name='organizationproposalstatus', name='client',),
    ]
