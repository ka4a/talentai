# Generated by Django 2.2.9 on 2020-01-24 11:03

from django.conf import settings
from django.db import migrations, models
from django.db.models import Q
import django.db.models.deletion


def filter_if_exist(queryset, filter):
    qs_filtered = queryset.filtered(filter)

    if qs_filtered.exists():
        return qs_filtered

    return queryset


def set_default_primary_contact_for_org(model, admin_filter):
    for org in model.objects.filter(primary_contact__isnull=True):
        qs_contact = org.members.order_by('date_joined')

        qs_contact = filter_if_exist(qs_contact, admin_filter)
        qs_contact = filter_if_exist(qs_contact, Q(email=org.contact_email))

        contact = qs_contact.first()
        if contact:
            org.primary_contact = contact
            org.save()
        else:
            raise models.ObjectDoesNotExist(f'Coudn\'t find primary_contact for {org}')


def set_default_primary_contact(apps, schema_editor):
    set_default_primary_contact_for_org(
        model=apps.get_model('core', 'Client'),
        admin_filter=Q(talentassociate__isnull=False),
    )


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0131_candidate_tags'),
    ]

    operations = [
        migrations.RunPython(set_default_primary_contact, migrations.RunPython.noop,),
        migrations.RemoveField(model_name='client', name='contact_email',),
        migrations.AlterField(
            model_name='client',
            name='primary_contact',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL
            ),
        ),
    ]
