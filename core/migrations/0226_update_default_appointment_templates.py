# Generated by Django 2.2.17 on 2021-02-16 05:51

from django.db import migrations


APPOINTMENT_TEMPLATES = [
    {'appointment_type': 'general', 'default_order': 1},
    {'appointment_type': 'technical_fit', 'default_order': 2},
    {'appointment_type': 'cultural_fit', 'default_order': 3},
]


def add_appointment_templates(apps, schema_editor):
    db_alias = schema_editor.connection.alias

    # replace templates
    AppointmentTemplate = apps.get_model('core', 'AppointmentTemplate')
    AppointmentTemplate.objects.using(db_alias).all().delete()
    for item in APPOINTMENT_TEMPLATES:
        appointment_template = AppointmentTemplate.objects.using(db_alias).create(
            default=True, **item
        )

    # update existing job templates
    JobAppointmentTemplate = apps.get_model('core', 'JobAppointmentTemplate')
    job_appointment_templates = JobAppointmentTemplate.objects.using(db_alias).all()
    for template in job_appointment_templates:
        if template.order % 10 == 0:
            template.order = int(template.order / 10)
            template.save()

    # update existing proposal appointments
    ProposalAppointment = apps.get_model('core', 'ProposalAppointment')
    proposal_appointments = ProposalAppointment.objects.using(db_alias).all()
    for appointment in proposal_appointments:
        if appointment.order % 10 == 0:
            appointment.order = int(appointment.order / 10)
            appointment.save()


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0225_new_default_quick_actions'),
    ]

    operations = [
        migrations.RunPython(add_appointment_templates, migrations.RunPython.noop)
    ]
