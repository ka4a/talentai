{
  "basePath": "/api",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "AddLinkedInCandidate": {
      "properties": {
        "city": {
          "default": "",
          "title": "City",
          "type": "string",
          "x-nullable": true
        },
        "company": {
          "default": "",
          "title": "Company",
          "type": "string",
          "x-nullable": true
        },
        "contactInfo": {
          "$ref": "#/definitions/_ContactInfo"
        },
        "education": {
          "items": {
            "$ref": "#/definitions/_Education"
          },
          "type": "array"
        },
        "experience": {
          "items": {
            "$ref": "#/definitions/_Experience"
          },
          "type": "array"
        },
        "headline": {
          "default": "",
          "title": "Headline",
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "default": "",
          "title": "Name",
          "type": "string",
          "x-nullable": true
        },
        "original": {
          "title": "Original",
          "type": "string",
          "x-nullable": true
        },
        "photoBase64": {
          "minLength": 1,
          "title": "Photo base64",
          "type": "string",
          "x-nullable": true
        },
        "proposal": {
          "$ref": "#/definitions/CreateProposalThroughCandidate"
        }
      },
      "required": [
        "contactInfo"
      ],
      "type": "object"
    },
    "Agency": {
      "properties": {
        "country": {
          "enum": [
            "af",
            "al",
            "dz",
            "ad",
            "ao",
            "ag",
            "ar",
            "am",
            "au",
            "at",
            "az",
            "bs",
            "bh",
            "bd",
            "bb",
            "by",
            "be",
            "bz",
            "bj",
            "bt",
            "bo",
            "ba",
            "bw",
            "br",
            "bn",
            "bg",
            "bf",
            "bi",
            "cv",
            "kh",
            "cm",
            "ca",
            "cf",
            "td",
            "cl",
            "cn",
            "co",
            "km",
            "cg",
            "cd",
            "cr",
            "ci",
            "hr",
            "cu",
            "cy",
            "cz",
            "dk",
            "dj",
            "dm",
            "do",
            "ec",
            "eg",
            "sv",
            "gq",
            "er",
            "ee",
            "sz",
            "et",
            "fj",
            "fi",
            "fr",
            "ga",
            "gm",
            "ge",
            "de",
            "gh",
            "gr",
            "gd",
            "gt",
            "gn",
            "gw",
            "gy",
            "ht",
            "hn",
            "hu",
            "is",
            "in",
            "id",
            "ir",
            "iq",
            "ie",
            "il",
            "it",
            "jm",
            "jp",
            "jo",
            "kz",
            "ke",
            "ki",
            "kp",
            "kr",
            "kw",
            "kg",
            "la",
            "lv",
            "lb",
            "ls",
            "lr",
            "ly",
            "li",
            "lt",
            "lu",
            "mg",
            "mw",
            "my",
            "mv",
            "ml",
            "mt",
            "mh",
            "mr",
            "mu",
            "mx",
            "fm",
            "md",
            "mc",
            "mn",
            "me",
            "ma",
            "mz",
            "mm",
            "na",
            "nr",
            "np",
            "nl",
            "nz",
            "ni",
            "ne",
            "ng",
            "mk",
            "no",
            "om",
            "pk",
            "pw",
            "pa",
            "pg",
            "py",
            "pe",
            "ph",
            "pl",
            "pt",
            "qa",
            "ro",
            "ru",
            "rw",
            "kn",
            "lc",
            "vc",
            "ws",
            "sm",
            "st",
            "sa",
            "sn",
            "rs",
            "sc",
            "sl",
            "sg",
            "sk",
            "si",
            "sb",
            "so",
            "za",
            "ss",
            "es",
            "lk",
            "sd",
            "sr",
            "se",
            "ch",
            "sy",
            "tj",
            "tz",
            "th",
            "tl",
            "tg",
            "to",
            "tt",
            "tn",
            "tr",
            "tm",
            "tv",
            "ug",
            "ua",
            "ae",
            "gb",
            "us",
            "uy",
            "uz",
            "vu",
            "ve",
            "vn",
            "ye",
            "zm",
            "zw"
          ],
          "title": "Country",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "members": {
          "items": {
            "$ref": "#/definitions/AgencyMember"
          },
          "readOnly": true,
          "type": "array"
        },
        "name": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "AgencyCategory": {
      "properties": {
        "group": {
          "minLength": 1,
          "title": "Group",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "title": {
          "minLength": 1,
          "readOnly": true,
          "title": "Title",
          "type": "string"
        }
      },
      "required": [
        "group"
      ],
      "type": "object"
    },
    "AgencyClientInfo": {
      "properties": {
        "accountManager": {
          "title": "Account manager",
          "type": "integer",
          "x-nullable": true
        },
        "billingAddress": {
          "maxLength": 256,
          "title": "Billing address",
          "type": "string"
        },
        "industry": {
          "enum": [
            "architecture_and_construction",
            "automobile_or_aviation_and_aerospace",
            "banking_and_financial_services",
            "consulting",
            "education_or_training_or_coaching",
            "electronic_goods",
            "energy_and_natural_resources",
            "fintech",
            "food_and_beverage_or_fmcg",
            "hardware",
            "healthcare_or_pharmaceutical_or_life_sciences",
            "it_or_technology_or__digital_and_telecom",
            "insurance",
            "legal_and_compliance",
            "leisure_or_hospitality_or_restaurants_or_travel_and_tourism",
            "manufacturing_or_industrial",
            "media_or_art_and_entertaiment_or_communication_or_agency",
            "public_sector",
            "real_estate_or_property_and_construction",
            "recruitment",
            "retail_or_fashion_or_luxury_or_consumer_goods",
            "services",
            "software",
            "transportation_or_shipping_or_logistics"
          ],
          "title": "Industry",
          "type": "string"
        },
        "info": {
          "title": "Info",
          "type": "string"
        },
        "notes": {
          "title": "Notes",
          "type": "string"
        },
        "originator": {
          "title": "Originator",
          "type": "integer",
          "x-nullable": true
        },
        "portalLogin": {
          "maxLength": 128,
          "title": "Portal login",
          "type": "string"
        },
        "portalPassword": {
          "maxLength": 128,
          "title": "Portal password",
          "type": "string"
        },
        "portalUrl": {
          "format": "uri",
          "maxLength": 200,
          "title": "Portal url",
          "type": "string"
        },
        "primaryContactNumber": {
          "title": "Primary contact number",
          "type": "string"
        },
        "type": {
          "enum": [
            "key_account",
            "auxiliary_account",
            "new_account"
          ],
          "title": "Type",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated at",
          "type": "string"
        },
        "updatedBy": {
          "$ref": "#/definitions/OrgMember"
        },
        "website": {
          "format": "uri",
          "maxLength": 200,
          "title": "Website",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AgencyList": {
      "properties": {
        "categories": {
          "items": {
            "type": "integer"
          },
          "readOnly": true,
          "type": "array",
          "uniqueItems": true
        },
        "contract": {
          "$ref": "#/definitions/Contract"
        },
        "description": {
          "minLength": 1,
          "readOnly": true,
          "title": "Description",
          "type": "string"
        },
        "functionFocus": {
          "items": {
            "type": "integer"
          },
          "readOnly": true,
          "type": "array",
          "uniqueItems": true
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "logo": {
          "description": "png, svg",
          "format": "uri",
          "readOnly": true,
          "title": "Logo",
          "type": "string"
        },
        "members": {
          "items": {
            "$ref": "#/definitions/AgencyMember"
          },
          "readOnly": true,
          "type": "array"
        },
        "name": {
          "minLength": 1,
          "readOnly": true,
          "title": "Name",
          "type": "string"
        },
        "nameJa": {
          "minLength": 1,
          "readOnly": true,
          "title": "Name ja",
          "type": "string"
        },
        "proposalsCount": {
          "readOnly": true,
          "title": "Proposals count",
          "type": "string"
        },
        "website": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Website",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AgencyMember": {
      "properties": {
        "email": {
          "format": "email",
          "maxLength": 254,
          "minLength": 1,
          "title": "Email address",
          "type": "string"
        },
        "firstName": {
          "maxLength": 30,
          "minLength": 1,
          "title": "First name",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "lastName": {
          "maxLength": 150,
          "minLength": 1,
          "title": "Last name",
          "type": "string"
        },
        "teams": {
          "items": {
            "$ref": "#/definitions/Team"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "email"
      ],
      "type": "object"
    },
    "AgencyRegistrationRequest": {
      "properties": {
        "country": {
          "enum": [
            "af",
            "al",
            "dz",
            "ad",
            "ao",
            "ag",
            "ar",
            "am",
            "au",
            "at",
            "az",
            "bs",
            "bh",
            "bd",
            "bb",
            "by",
            "be",
            "bz",
            "bj",
            "bt",
            "bo",
            "ba",
            "bw",
            "br",
            "bn",
            "bg",
            "bf",
            "bi",
            "cv",
            "kh",
            "cm",
            "ca",
            "cf",
            "td",
            "cl",
            "cn",
            "co",
            "km",
            "cg",
            "cd",
            "cr",
            "ci",
            "hr",
            "cu",
            "cy",
            "cz",
            "dk",
            "dj",
            "dm",
            "do",
            "ec",
            "eg",
            "sv",
            "gq",
            "er",
            "ee",
            "sz",
            "et",
            "fj",
            "fi",
            "fr",
            "ga",
            "gm",
            "ge",
            "de",
            "gh",
            "gr",
            "gd",
            "gt",
            "gn",
            "gw",
            "gy",
            "ht",
            "hn",
            "hu",
            "is",
            "in",
            "id",
            "ir",
            "iq",
            "ie",
            "il",
            "it",
            "jm",
            "jp",
            "jo",
            "kz",
            "ke",
            "ki",
            "kp",
            "kr",
            "kw",
            "kg",
            "la",
            "lv",
            "lb",
            "ls",
            "lr",
            "ly",
            "li",
            "lt",
            "lu",
            "mg",
            "mw",
            "my",
            "mv",
            "ml",
            "mt",
            "mh",
            "mr",
            "mu",
            "mx",
            "fm",
            "md",
            "mc",
            "mn",
            "me",
            "ma",
            "mz",
            "mm",
            "na",
            "nr",
            "np",
            "nl",
            "nz",
            "ni",
            "ne",
            "ng",
            "mk",
            "no",
            "om",
            "pk",
            "pw",
            "pa",
            "pg",
            "py",
            "pe",
            "ph",
            "pl",
            "pt",
            "qa",
            "ro",
            "ru",
            "rw",
            "kn",
            "lc",
            "vc",
            "ws",
            "sm",
            "st",
            "sa",
            "sn",
            "rs",
            "sc",
            "sl",
            "sg",
            "sk",
            "si",
            "sb",
            "so",
            "za",
            "ss",
            "es",
            "lk",
            "sd",
            "sr",
            "se",
            "ch",
            "sy",
            "tj",
            "tz",
            "th",
            "tl",
            "tg",
            "to",
            "tt",
            "tn",
            "tr",
            "tm",
            "tv",
            "ug",
            "ua",
            "ae",
            "gb",
            "us",
            "uy",
            "uz",
            "vu",
            "ve",
            "vn",
            "ye",
            "zm",
            "zw"
          ],
          "title": "Country",
          "type": "string"
        },
        "created": {
          "readOnly": true,
          "title": "Created",
          "type": "boolean"
        },
        "name": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "termsOfService": {
          "title": "Terms of service",
          "type": "boolean"
        },
        "token": {
          "minLength": 1,
          "title": "Token",
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/UserRegistrationRequest"
        },
        "viaJob": {
          "format": "uuid",
          "title": "Via job",
          "type": "string"
        }
      },
      "required": [
        "name",
        "user",
        "termsOfService"
      ],
      "type": "object"
    },
    "AgencyUserExtJob": {
      "properties": {
        "company": {
          "minLength": 1,
          "title": "Company",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "title": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Title",
          "type": "string"
        }
      },
      "required": [
        "title"
      ],
      "type": "object"
    },
    "Approval": {
      "properties": {
        "billDescription": {
          "minLength": 1,
          "readOnly": true,
          "title": "Bill description",
          "type": "string"
        },
        "candidateName": {
          "minLength": 1,
          "readOnly": true,
          "title": "Candidate name",
          "type": "string"
        },
        "clientName": {
          "minLength": 1,
          "readOnly": true,
          "title": "Client name",
          "type": "string"
        },
        "contractType": {
          "minLength": 1,
          "readOnly": true,
          "title": "Contract type",
          "type": "string"
        },
        "feeId": {
          "readOnly": true,
          "title": "Fee id",
          "type": "integer"
        },
        "feeStatus": {
          "minLength": 1,
          "readOnly": true,
          "title": "Fee status",
          "type": "string"
        },
        "jobContractId": {
          "readOnly": true,
          "title": "Job contract id",
          "type": "integer"
        },
        "jobTitle": {
          "minLength": 1,
          "readOnly": true,
          "title": "Job title",
          "type": "string"
        },
        "proposalId": {
          "readOnly": true,
          "title": "Proposal id",
          "type": "integer"
        },
        "submittedAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Submitted at",
          "type": "string"
        },
        "submittedByName": {
          "minLength": 1,
          "readOnly": true,
          "title": "Submitted by name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Candidate": {
      "properties": {
        "activator": {
          "title": "Activator",
          "type": "integer",
          "x-nullable": true
        },
        "address": {
          "minLength": 1,
          "readOnly": true,
          "title": "Address",
          "type": "string"
        },
        "age": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Age",
          "type": "integer",
          "x-nullable": true
        },
        "archived": {
          "readOnly": true,
          "title": "Archived",
          "type": "boolean"
        },
        "birthdate": {
          "format": "date",
          "title": "Birthdate",
          "type": "string",
          "x-nullable": true
        },
        "certifications": {
          "items": {
            "$ref": "#/definitions/CandidateCertification"
          },
          "type": "array"
        },
        "clientBrief": {
          "title": "Client brief",
          "type": "string"
        },
        "clientExpertise": {
          "title": "Client expertise",
          "type": "string"
        },
        "companiesAlreadyAppliedTo": {
          "title": "Companies already applied to",
          "type": "string"
        },
        "companiesAppliedTo": {
          "title": "Companies applied to",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created at",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/OrgMember"
        },
        "currentCity": {
          "maxLength": 128,
          "title": "Current city",
          "type": "string"
        },
        "currentCompany": {
          "maxLength": 128,
          "title": "Current company",
          "type": "string"
        },
        "currentCountry": {
          "enum": [
            "af",
            "al",
            "dz",
            "ad",
            "ao",
            "ag",
            "ar",
            "am",
            "au",
            "at",
            "az",
            "bs",
            "bh",
            "bd",
            "bb",
            "by",
            "be",
            "bz",
            "bj",
            "bt",
            "bo",
            "ba",
            "bw",
            "br",
            "bn",
            "bg",
            "bf",
            "bi",
            "cv",
            "kh",
            "cm",
            "ca",
            "cf",
            "td",
            "cl",
            "cn",
            "co",
            "km",
            "cg",
            "cd",
            "cr",
            "ci",
            "hr",
            "cu",
            "cy",
            "cz",
            "dk",
            "dj",
            "dm",
            "do",
            "ec",
            "eg",
            "sv",
            "gq",
            "er",
            "ee",
            "sz",
            "et",
            "fj",
            "fi",
            "fr",
            "ga",
            "gm",
            "ge",
            "de",
            "gh",
            "gr",
            "gd",
            "gt",
            "gn",
            "gw",
            "gy",
            "ht",
            "hn",
            "hu",
            "is",
            "in",
            "id",
            "ir",
            "iq",
            "ie",
            "il",
            "it",
            "jm",
            "jp",
            "jo",
            "kz",
            "ke",
            "ki",
            "kp",
            "kr",
            "kw",
            "kg",
            "la",
            "lv",
            "lb",
            "ls",
            "lr",
            "ly",
            "li",
            "lt",
            "lu",
            "mg",
            "mw",
            "my",
            "mv",
            "ml",
            "mt",
            "mh",
            "mr",
            "mu",
            "mx",
            "fm",
            "md",
            "mc",
            "mn",
            "me",
            "ma",
            "mz",
            "mm",
            "na",
            "nr",
            "np",
            "nl",
            "nz",
            "ni",
            "ne",
            "ng",
            "mk",
            "no",
            "om",
            "pk",
            "pw",
            "pa",
            "pg",
            "py",
            "pe",
            "ph",
            "pl",
            "pt",
            "qa",
            "ro",
            "ru",
            "rw",
            "kn",
            "lc",
            "vc",
            "ws",
            "sm",
            "st",
            "sa",
            "sn",
            "rs",
            "sc",
            "sl",
            "sg",
            "sk",
            "si",
            "sb",
            "so",
            "za",
            "ss",
            "es",
            "lk",
            "sd",
            "sr",
            "se",
            "ch",
            "sy",
            "tj",
            "tz",
            "th",
            "tl",
            "tg",
            "to",
            "tt",
            "tn",
            "tr",
            "tm",
            "tv",
            "ug",
            "ua",
            "ae",
            "gb",
            "us",
            "uy",
            "uz",
            "vu",
            "ve",
            "vn",
            "ye",
            "zm",
            "zw"
          ],
          "title": "Current country",
          "type": "string"
        },
        "currentPosition": {
          "maxLength": 256,
          "title": "Current position",
          "type": "string"
        },
        "currentPostalCode": {
          "maxLength": 128,
          "title": "Current postal code",
          "type": "string"
        },
        "currentPrefecture": {
          "maxLength": 128,
          "title": "Current prefecture",
          "type": "string"
        },
        "currentSalary": {
          "format": "decimal",
          "title": "Current salary",
          "type": "string",
          "x-nullable": true
        },
        "currentSalaryBreakdown": {
          "title": "Current salary breakdown",
          "type": "string"
        },
        "currentSalaryCurrency": {
          "minLength": 1,
          "readOnly": true,
          "title": "Current salary currency",
          "type": "string"
        },
        "currentSalaryVariable": {
          "format": "decimal",
          "title": "Current salary variable",
          "type": "string",
          "x-nullable": true
        },
        "currentStreet": {
          "maxLength": 128,
          "title": "Current street",
          "type": "string"
        },
        "cvJa": {
          "format": "uri",
          "readOnly": true,
          "title": "Cv ja",
          "type": "string"
        },
        "cvJaThumbnail": {
          "format": "uri",
          "readOnly": true,
          "title": "Cv ja thumbnail",
          "type": "string"
        },
        "department": {
          "title": "Department",
          "type": "string"
        },
        "educationDetails": {
          "items": {
            "$ref": "#/definitions/EducationDetail"
          },
          "type": "array"
        },
        "email": {
          "format": "email",
          "maxLength": 254,
          "title": "Email",
          "type": "string"
        },
        "employmentStatus": {
          "enum": [
            "notemployed",
            "fulltime",
            "fixedterm",
            "temporary",
            "businessowner",
            "dispatched",
            "freelance"
          ],
          "title": "Employment status",
          "type": "string"
        },
        "expectationsDetails": {
          "title": "Expectations details",
          "type": "string"
        },
        "experienceDetails": {
          "items": {
            "$ref": "#/definitions/ExperienceDetail"
          },
          "type": "array"
        },
        "firstName": {
          "maxLength": 128,
          "title": "First name",
          "type": "string"
        },
        "firstNameKanji": {
          "maxLength": 128,
          "title": "First name kanji",
          "type": "string"
        },
        "firstNameKatakana": {
          "maxLength": 128,
          "title": "First name katakana",
          "type": "string"
        },
        "fulltime": {
          "title": "Fulltime",
          "type": "boolean"
        },
        "gender": {
          "enum": [
            "male",
            "female",
            "other"
          ],
          "title": "Gender",
          "type": "string"
        },
        "githubUrl": {
          "format": "uri",
          "maxLength": 200,
          "title": "Github url",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "industry": {
          "enum": [
            "architecture_and_construction",
            "automobile_or_aviation_and_aerospace",
            "banking_and_financial_services",
            "consulting",
            "education_or_training_or_coaching",
            "electronic_goods",
            "energy_and_natural_resources",
            "fintech",
            "food_and_beverage_or_fmcg",
            "hardware",
            "healthcare_or_pharmaceutical_or_life_sciences",
            "it_or_technology_or__digital_and_telecom",
            "insurance",
            "legal_and_compliance",
            "leisure_or_hospitality_or_restaurants_or_travel_and_tourism",
            "manufacturing_or_industrial",
            "media_or_art_and_entertaiment_or_communication_or_agency",
            "public_sector",
            "real_estate_or_property_and_construction",
            "recruitment",
            "retail_or_fashion_or_luxury_or_consumer_goods",
            "services",
            "software",
            "transportation_or_shipping_or_logistics"
          ],
          "title": "Industry",
          "type": "string"
        },
        "internalStatus": {
          "enum": [
            "not_contacted",
            "contacted",
            "generally_unqualified",
            "active"
          ],
          "title": "Internal status",
          "type": "string"
        },
        "isClientContact": {
          "title": "Is client contact",
          "type": "boolean"
        },
        "isMet": {
          "title": "Is met",
          "type": "boolean"
        },
        "isMissingRequiredFields": {
          "readOnly": true,
          "title": "Is missing required fields",
          "type": "string"
        },
        "jobChangeUrgency": {
          "enum": [
            "urgent",
            "actively_looking",
            "passively_looking",
            "not_looking"
          ],
          "title": "Job change urgency",
          "type": "string"
        },
        "languages": {
          "items": {
            "$ref": "#/definitions/Language"
          },
          "type": "array"
        },
        "lastName": {
          "maxLength": 128,
          "title": "Last name",
          "type": "string"
        },
        "lastNameKanji": {
          "maxLength": 128,
          "title": "Last name kanji",
          "type": "string"
        },
        "lastNameKatakana": {
          "maxLength": 128,
          "title": "Last name katakana",
          "type": "string"
        },
        "leadConsultant": {
          "title": "Lead consultant",
          "type": "integer",
          "x-nullable": true
        },
        "linkedinData": {
          "description": "Return linkedin data if User has permission.",
          "readOnly": true,
          "title": "Linkedin data",
          "type": "object"
        },
        "linkedinUrl": {
          "format": "uri",
          "title": "Linkedin url",
          "type": "string"
        },
        "local": {
          "title": "Local",
          "type": "boolean"
        },
        "maxNumPeopleManaged": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Max num people managed",
          "type": "integer",
          "x-nullable": true
        },
        "middleName": {
          "maxLength": 128,
          "title": "Middle name",
          "type": "string"
        },
        "mobileCollect": {
          "title": "Mobile collect",
          "type": "integer",
          "x-nullable": true
        },
        "name": {
          "readOnly": true,
          "title": "Name",
          "type": "string"
        },
        "nameCollect": {
          "title": "Name collect",
          "type": "integer",
          "x-nullable": true
        },
        "nameJa": {
          "readOnly": true,
          "title": "Name ja",
          "type": "string"
        },
        "nationality": {
          "maxLength": 128,
          "title": "Nationality",
          "type": "string"
        },
        "note": {
          "readOnly": true,
          "title": "Note",
          "type": "string"
        },
        "noticePeriod": {
          "enum": [
            "immediate",
            "two_weeks",
            "one_month",
            "two_months",
            "three_months"
          ],
          "title": "Notice period",
          "type": "string"
        },
        "original": {
          "title": "Original",
          "type": "integer",
          "x-nullable": true
        },
        "otherDesiredBenefits": {
          "items": {
            "enum": [
              "sign_on_bonus",
              "relocation",
              "holidays",
              "schooling",
              "company_car",
              "training",
              "housing",
              "equity",
              "tax_equalization",
              "special_insurance",
              "other"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "otherDesiredBenefitsOthersDetail": {
          "maxLength": 128,
          "title": "Other desired benefits others detail",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "type": "integer",
          "x-nullable": true
        },
        "parttime": {
          "title": "Parttime",
          "type": "boolean"
        },
        "phone": {
          "title": "Phone",
          "type": "string"
        },
        "photo": {
          "format": "uri",
          "readOnly": true,
          "title": "Photo",
          "type": "string"
        },
        "placementApprovedAt": {
          "format": "date",
          "readOnly": true,
          "title": "Placement approved at",
          "type": "string"
        },
        "platform": {
          "enum": [
            "linkedin",
            "facebook",
            "biz_reach",
            "github",
            "careercross",
            "corporate_site",
            "other"
          ],
          "title": "Platform",
          "type": "string"
        },
        "platformOtherDetails": {
          "maxLength": 128,
          "title": "Platform other details",
          "type": "string"
        },
        "potentialLocations": {
          "maxLength": 256,
          "title": "Potential locations",
          "type": "string"
        },
        "proposals": {
          "items": {
            "$ref": "#/definitions/CandidateProposal"
          },
          "readOnly": true,
          "type": "array"
        },
        "proposed": {
          "description": "Return True if was proposed to job passed via parameter.",
          "readOnly": true,
          "title": "Proposed",
          "type": "boolean"
        },
        "proposedToJob": {
          "title": "Proposed to job",
          "type": "boolean"
        },
        "pullFactors": {
          "title": "Pull factors",
          "type": "string"
        },
        "pushFactors": {
          "title": "Push factors",
          "type": "string"
        },
        "reasonForJobChanges": {
          "title": "Reason for job changes",
          "type": "string"
        },
        "referredBy": {
          "title": "Referred by",
          "type": "integer",
          "x-nullable": true
        },
        "remote": {
          "title": "Remote",
          "type": "boolean"
        },
        "resume": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume",
          "type": "string"
        },
        "resumeJa": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume ja",
          "type": "string"
        },
        "resumeJaThumbnail": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume ja thumbnail",
          "type": "string"
        },
        "resumeThumbnail": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume thumbnail",
          "type": "string"
        },
        "salary": {
          "format": "decimal",
          "title": "Salary",
          "type": "string",
          "x-nullable": true
        },
        "salaryCurrency": {
          "minLength": 1,
          "readOnly": true,
          "title": "Salary currency",
          "type": "string"
        },
        "secondaryEmail": {
          "format": "email",
          "title": "Secondary email",
          "type": "string"
        },
        "secondaryPhone": {
          "title": "Secondary phone",
          "type": "string"
        },
        "skillDomain": {
          "title": "Skill domain",
          "type": "integer",
          "x-nullable": true
        },
        "source": {
          "maxLength": 128,
          "title": "Source",
          "type": "string"
        },
        "sourceDetails": {
          "maxLength": 128,
          "title": "Source details",
          "type": "string"
        },
        "summary": {
          "title": "Summary",
          "type": "string"
        },
        "supportConsultant": {
          "title": "Support consultant",
          "type": "integer",
          "x-nullable": true
        },
        "tags": {
          "items": {
            "$ref": "#/definitions/CandidateTag"
          },
          "type": "array"
        },
        "taxEqualization": {
          "title": "Tax equalization",
          "type": "boolean",
          "x-nullable": true
        },
        "totalAnnualSalary": {
          "minLength": 1,
          "readOnly": true,
          "title": "Total annual salary",
          "type": "string"
        },
        "twitterUrl": {
          "format": "uri",
          "maxLength": 200,
          "title": "Twitter url",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated at",
          "type": "string"
        },
        "updatedBy": {
          "$ref": "#/definitions/OrgMember"
        },
        "websiteUrl": {
          "format": "uri",
          "maxLength": 200,
          "title": "Website url",
          "type": "string"
        },
        "zohoId": {
          "minLength": 1,
          "readOnly": true,
          "title": "Zoho id",
          "type": "string"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object"
    },
    "CandidateCertification": {
      "properties": {
        "certification": {
          "enum": [
            "toeic",
            "jlpt",
            "toefl",
            "other"
          ],
          "title": "Certification",
          "type": "string"
        },
        "certificationOther": {
          "maxLength": 32,
          "title": "Certification other",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "score": {
          "maxLength": 16,
          "title": "Score",
          "type": "string"
        }
      },
      "required": [
        "certification"
      ],
      "type": "object"
    },
    "CandidateClientBriefUpdate": {
      "properties": {
        "clientBrief": {
          "title": "Client brief",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CandidateComment": {
      "properties": {
        "author": {
          "readOnly": true,
          "title": "Author",
          "type": "string"
        },
        "candidate": {
          "title": "Candidate",
          "type": "integer"
        },
        "createdAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created at",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "system": {
          "readOnly": true,
          "title": "System",
          "type": "boolean"
        },
        "text": {
          "minLength": 1,
          "title": "Text",
          "type": "string"
        }
      },
      "required": [
        "candidate",
        "text"
      ],
      "type": "object"
    },
    "CandidateFile": {
      "properties": {
        "candidate": {
          "title": "Candidate",
          "type": "integer"
        },
        "file": {
          "format": "uri",
          "readOnly": true,
          "title": "File",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "isShared": {
          "title": "Is shared",
          "type": "boolean"
        },
        "preview": {
          "format": "uri",
          "readOnly": true,
          "title": "Preview",
          "type": "string"
        },
        "thumbnail": {
          "format": "uri",
          "readOnly": true,
          "title": "Thumbnail",
          "type": "string"
        },
        "title": {
          "maxLength": 64,
          "title": "Title",
          "type": "string"
        }
      },
      "required": [
        "candidate"
      ],
      "type": "object"
    },
    "CandidateFileCandidate": {
      "properties": {
        "file": {
          "format": "uri",
          "readOnly": true,
          "title": "File",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "type": "integer"
        },
        "isShared": {
          "title": "Is shared",
          "type": "boolean"
        },
        "preview": {
          "format": "uri",
          "readOnly": true,
          "title": "Preview",
          "type": "string"
        },
        "thumbnail": {
          "format": "uri",
          "readOnly": true,
          "title": "Thumbnail",
          "type": "string"
        },
        "title": {
          "maxLength": 64,
          "title": "Title",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "CandidateNoteUpdate": {
      "properties": {
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "note": {
          "readOnly": true,
          "title": "Note",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CandidateProposal": {
      "properties": {
        "company": {
          "minLength": 1,
          "title": "Company",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "jobId": {
          "title": "Job id",
          "type": "integer"
        },
        "jobName": {
          "minLength": 1,
          "title": "Job name",
          "type": "string"
        },
        "stage": {
          "minLength": 1,
          "title": "Stage",
          "type": "string"
        },
        "status": {
          "minLength": 1,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "jobId",
        "company",
        "jobName",
        "stage",
        "status"
      ],
      "type": "object"
    },
    "CandidateSplitAllocationFile": {
      "properties": {
        "file": {
          "format": "uri",
          "readOnly": true,
          "title": "File",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CandidateTag": {
      "properties": {
        "name": {
          "minLength": 1,
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "CandidateVersion": {
      "properties": {
        "actor": {
          "readOnly": true,
          "title": "Actor",
          "type": "string"
        },
        "contentType": {
          "description": "Content type of the model under version control.",
          "title": "Content type",
          "type": "integer"
        },
        "data": {
          "readOnly": true,
          "title": "Data",
          "type": "string"
        },
        "objectId": {
          "description": "Primary key of the model under version control.",
          "maxLength": 191,
          "minLength": 1,
          "title": "Object id",
          "type": "string"
        },
        "revision": {
          "description": "The revision that contains this version.",
          "title": "Revision",
          "type": "integer"
        }
      },
      "required": [
        "objectId",
        "revision",
        "contentType"
      ],
      "type": "object"
    },
    "CareerSiteJobPosting": {
      "properties": {
        "additionalLeaves": {
          "title": "Additional leaves",
          "type": "string"
        },
        "bonusSystem": {
          "title": "Bonus system",
          "type": "string"
        },
        "breakTimeMins": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Break time mins",
          "type": "integer",
          "x-nullable": true
        },
        "commutationAllowance": {
          "title": "Commutation allowance",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created at",
          "type": "string"
        },
        "employmentType": {
          "enum": [
            "permanent",
            "parttime",
            "fixedterm",
            "dispatch",
            "freelance"
          ],
          "title": "Employment type",
          "type": "string"
        },
        "flexitimeEligibility": {
          "enum": [
            "eligible",
            "not_eligible"
          ],
          "title": "Flexitime eligibility",
          "type": "string"
        },
        "function": {
          "title": "Function",
          "type": "integer",
          "x-nullable": true
        },
        "isEnabled": {
          "title": "Is enabled",
          "type": "boolean"
        },
        "jobId": {
          "title": "Job id",
          "type": "integer"
        },
        "mission": {
          "title": "Mission",
          "type": "string"
        },
        "otherBenefits": {
          "items": {
            "enum": [
              "visa",
              "relocation",
              "wellness",
              "coffee"
            ],
            "title": "Other benefits",
            "type": "string"
          },
          "type": "array"
        },
        "overtimeConditions": {
          "title": "Overtime conditions",
          "type": "string"
        },
        "paidLeaves": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Paid leaves",
          "type": "integer",
          "x-nullable": true
        },
        "probationPeriodMonths": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Probation period months",
          "type": "integer",
          "x-nullable": true
        },
        "questions": {
          "items": {
            "$ref": "#/definitions/CareerSiteJobPostingQuestion"
          },
          "type": "array"
        },
        "requiredLanguages": {
          "items": {
            "$ref": "#/definitions/Language"
          },
          "type": "array"
        },
        "requirements": {
          "minLength": 1,
          "title": "Requirements",
          "type": "string"
        },
        "responsibilities": {
          "minLength": 1,
          "title": "Responsibilities",
          "type": "string"
        },
        "salaryCurrency": {
          "minLength": 1,
          "readOnly": true,
          "title": "Salary currency",
          "type": "string"
        },
        "salaryFrom": {
          "format": "decimal",
          "title": "Salary from",
          "type": "string",
          "x-nullable": true
        },
        "salaryPer": {
          "enum": [
            "year",
            "month",
            "week",
            "day",
            "hour"
          ],
          "title": "Salary per",
          "type": "string"
        },
        "salaryTo": {
          "format": "decimal",
          "title": "Salary to",
          "type": "string",
          "x-nullable": true
        },
        "skills": {
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "type": "array"
        },
        "slug": {
          "minLength": 1,
          "readOnly": true,
          "title": "Slug",
          "type": "string"
        },
        "socialInsurances": {
          "items": {
            "enum": [
              "health",
              "employment",
              "welfare_pension",
              "accident_compensation"
            ],
            "title": "Social insurances",
            "type": "string"
          },
          "type": "array"
        },
        "teleworkEligibility": {
          "enum": [
            "onsite",
            "possible",
            "remote"
          ],
          "title": "Telework eligibility",
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Title",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated at",
          "type": "string"
        },
        "workLocation": {
          "maxLength": 128,
          "title": "Work location",
          "type": "string"
        },
        "workingHours": {
          "title": "Working hours",
          "type": "string"
        }
      },
      "required": [
        "jobId",
        "skills",
        "requiredLanguages",
        "questions",
        "title",
        "responsibilities",
        "requirements"
      ],
      "type": "object"
    },
    "CareerSiteJobPostingPublic": {
      "properties": {
        "additionalLeaves": {
          "title": "Additional leaves",
          "type": "string"
        },
        "bonusSystem": {
          "title": "Bonus system",
          "type": "string"
        },
        "breakTimeMins": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Break time mins",
          "type": "integer",
          "x-nullable": true
        },
        "commutationAllowance": {
          "title": "Commutation allowance",
          "type": "string"
        },
        "employmentType": {
          "enum": [
            "permanent",
            "parttime",
            "fixedterm",
            "dispatch",
            "freelance"
          ],
          "title": "Employment type",
          "type": "string"
        },
        "flexitimeEligibility": {
          "enum": [
            "eligible",
            "not_eligible"
          ],
          "title": "Flexitime eligibility",
          "type": "string"
        },
        "function": {
          "$ref": "#/definitions/JobFunction"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "jobId": {
          "readOnly": true,
          "title": "Job id",
          "type": "string"
        },
        "mission": {
          "title": "Mission",
          "type": "string"
        },
        "otherBenefits": {
          "items": {
            "enum": [
              "visa",
              "relocation",
              "wellness",
              "coffee"
            ],
            "title": "Other benefits",
            "type": "string"
          },
          "type": "array"
        },
        "overtimeConditions": {
          "title": "Overtime conditions",
          "type": "string"
        },
        "paidLeaves": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Paid leaves",
          "type": "integer",
          "x-nullable": true
        },
        "probationPeriodMonths": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Probation period months",
          "type": "integer",
          "x-nullable": true
        },
        "questions": {
          "items": {
            "$ref": "#/definitions/CareerSiteJobPostingQuestion"
          },
          "type": "array"
        },
        "requiredLanguages": {
          "items": {
            "$ref": "#/definitions/Language"
          },
          "type": "array"
        },
        "requirements": {
          "minLength": 1,
          "title": "Requirements",
          "type": "string"
        },
        "responsibilities": {
          "minLength": 1,
          "title": "Responsibilities",
          "type": "string"
        },
        "salaryCurrency": {
          "minLength": 1,
          "readOnly": true,
          "title": "Salary currency",
          "type": "string"
        },
        "salaryFrom": {
          "format": "decimal",
          "title": "Salary from",
          "type": "string",
          "x-nullable": true
        },
        "salaryPer": {
          "enum": [
            "year",
            "month",
            "week",
            "day",
            "hour"
          ],
          "title": "Salary per",
          "type": "string"
        },
        "salaryTo": {
          "format": "decimal",
          "title": "Salary to",
          "type": "string",
          "x-nullable": true
        },
        "skills": {
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "type": "array"
        },
        "slug": {
          "minLength": 1,
          "readOnly": true,
          "title": "Slug",
          "type": "string"
        },
        "socialInsurances": {
          "items": {
            "enum": [
              "health",
              "employment",
              "welfare_pension",
              "accident_compensation"
            ],
            "title": "Social insurances",
            "type": "string"
          },
          "type": "array"
        },
        "teleworkEligibility": {
          "enum": [
            "onsite",
            "possible",
            "remote"
          ],
          "title": "Telework eligibility",
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Title",
          "type": "string"
        },
        "workLocation": {
          "maxLength": 128,
          "title": "Work location",
          "type": "string"
        },
        "workingHours": {
          "title": "Working hours",
          "type": "string"
        }
      },
      "required": [
        "questions",
        "title",
        "function",
        "responsibilities",
        "requirements",
        "requiredLanguages"
      ],
      "type": "object"
    },
    "CareerSiteJobPostingQuestion": {
      "properties": {
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "text": {
          "maxLength": 1024,
          "minLength": 1,
          "title": "Text",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "type": "object"
    },
    "CareerSiteOrganization": {
      "properties": {
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "logo": {
          "format": "uri",
          "readOnly": true,
          "title": "Logo",
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "nameJa": {
          "maxLength": 128,
          "title": "Name ja",
          "type": "string"
        },
        "type": {
          "readOnly": true,
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "CheckIfLinkedinSubmittedToJob": {
      "properties": {
        "job": {
          "title": "Job",
          "type": "string"
        },
        "linkedinUrl": {
          "minLength": 1,
          "title": "Linkedin url",
          "type": "string"
        }
      },
      "required": [
        "job",
        "linkedinUrl"
      ],
      "type": "object"
    },
    "CheckLinkedinCandidateExists": {
      "properties": {
        "linkedinUrl": {
          "format": "uri",
          "minLength": 1,
          "title": "Linkedin url",
          "type": "string"
        }
      },
      "required": [
        "linkedinUrl"
      ],
      "type": "object"
    },
    "ClientRegistrationRequest": {
      "properties": {
        "country": {
          "enum": [
            "af",
            "al",
            "dz",
            "ad",
            "ao",
            "ag",
            "ar",
            "am",
            "au",
            "at",
            "az",
            "bs",
            "bh",
            "bd",
            "bb",
            "by",
            "be",
            "bz",
            "bj",
            "bt",
            "bo",
            "ba",
            "bw",
            "br",
            "bn",
            "bg",
            "bf",
            "bi",
            "cv",
            "kh",
            "cm",
            "ca",
            "cf",
            "td",
            "cl",
            "cn",
            "co",
            "km",
            "cg",
            "cd",
            "cr",
            "ci",
            "hr",
            "cu",
            "cy",
            "cz",
            "dk",
            "dj",
            "dm",
            "do",
            "ec",
            "eg",
            "sv",
            "gq",
            "er",
            "ee",
            "sz",
            "et",
            "fj",
            "fi",
            "fr",
            "ga",
            "gm",
            "ge",
            "de",
            "gh",
            "gr",
            "gd",
            "gt",
            "gn",
            "gw",
            "gy",
            "ht",
            "hn",
            "hu",
            "is",
            "in",
            "id",
            "ir",
            "iq",
            "ie",
            "il",
            "it",
            "jm",
            "jp",
            "jo",
            "kz",
            "ke",
            "ki",
            "kp",
            "kr",
            "kw",
            "kg",
            "la",
            "lv",
            "lb",
            "ls",
            "lr",
            "ly",
            "li",
            "lt",
            "lu",
            "mg",
            "mw",
            "my",
            "mv",
            "ml",
            "mt",
            "mh",
            "mr",
            "mu",
            "mx",
            "fm",
            "md",
            "mc",
            "mn",
            "me",
            "ma",
            "mz",
            "mm",
            "na",
            "nr",
            "np",
            "nl",
            "nz",
            "ni",
            "ne",
            "ng",
            "mk",
            "no",
            "om",
            "pk",
            "pw",
            "pa",
            "pg",
            "py",
            "pe",
            "ph",
            "pl",
            "pt",
            "qa",
            "ro",
            "ru",
            "rw",
            "kn",
            "lc",
            "vc",
            "ws",
            "sm",
            "st",
            "sa",
            "sn",
            "rs",
            "sc",
            "sl",
            "sg",
            "sk",
            "si",
            "sb",
            "so",
            "za",
            "ss",
            "es",
            "lk",
            "sd",
            "sr",
            "se",
            "ch",
            "sy",
            "tj",
            "tz",
            "th",
            "tl",
            "tg",
            "to",
            "tt",
            "tn",
            "tr",
            "tm",
            "tv",
            "ug",
            "ua",
            "ae",
            "gb",
            "us",
            "uy",
            "uz",
            "vu",
            "ve",
            "vn",
            "ye",
            "zm",
            "zw"
          ],
          "title": "Country",
          "type": "string"
        },
        "name": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "termsOfService": {
          "title": "Terms of service",
          "type": "boolean"
        },
        "user": {
          "$ref": "#/definitions/UserRegistrationRequest"
        }
      },
      "required": [
        "name",
        "user",
        "termsOfService"
      ],
      "type": "object"
    },
    "ClientSettings": {
      "properties": {
        "careerSiteSlug": {
          "format": "slug",
          "maxLength": 50,
          "pattern": "^[-a-zA-Z0-9_]+$",
          "title": "Career site slug",
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "enum": [
            "af",
            "al",
            "dz",
            "ad",
            "ao",
            "ag",
            "ar",
            "am",
            "au",
            "at",
            "az",
            "bs",
            "bh",
            "bd",
            "bb",
            "by",
            "be",
            "bz",
            "bj",
            "bt",
            "bo",
            "ba",
            "bw",
            "br",
            "bn",
            "bg",
            "bf",
            "bi",
            "cv",
            "kh",
            "cm",
            "ca",
            "cf",
            "td",
            "cl",
            "cn",
            "co",
            "km",
            "cg",
            "cd",
            "cr",
            "ci",
            "hr",
            "cu",
            "cy",
            "cz",
            "dk",
            "dj",
            "dm",
            "do",
            "ec",
            "eg",
            "sv",
            "gq",
            "er",
            "ee",
            "sz",
            "et",
            "fj",
            "fi",
            "fr",
            "ga",
            "gm",
            "ge",
            "de",
            "gh",
            "gr",
            "gd",
            "gt",
            "gn",
            "gw",
            "gy",
            "ht",
            "hn",
            "hu",
            "is",
            "in",
            "id",
            "ir",
            "iq",
            "ie",
            "il",
            "it",
            "jm",
            "jp",
            "jo",
            "kz",
            "ke",
            "ki",
            "kp",
            "kr",
            "kw",
            "kg",
            "la",
            "lv",
            "lb",
            "ls",
            "lr",
            "ly",
            "li",
            "lt",
            "lu",
            "mg",
            "mw",
            "my",
            "mv",
            "ml",
            "mt",
            "mh",
            "mr",
            "mu",
            "mx",
            "fm",
            "md",
            "mc",
            "mn",
            "me",
            "ma",
            "mz",
            "mm",
            "na",
            "nr",
            "np",
            "nl",
            "nz",
            "ni",
            "ne",
            "ng",
            "mk",
            "no",
            "om",
            "pk",
            "pw",
            "pa",
            "pg",
            "py",
            "pe",
            "ph",
            "pl",
            "pt",
            "qa",
            "ro",
            "ru",
            "rw",
            "kn",
            "lc",
            "vc",
            "ws",
            "sm",
            "st",
            "sa",
            "sn",
            "rs",
            "sc",
            "sl",
            "sg",
            "sk",
            "si",
            "sb",
            "so",
            "za",
            "ss",
            "es",
            "lk",
            "sd",
            "sr",
            "se",
            "ch",
            "sy",
            "tj",
            "tz",
            "th",
            "tl",
            "tg",
            "to",
            "tt",
            "tn",
            "tr",
            "tm",
            "tv",
            "ug",
            "ua",
            "ae",
            "gb",
            "us",
            "uy",
            "uz",
            "vu",
            "ve",
            "vn",
            "ye",
            "zm",
            "zw"
          ],
          "title": "Country",
          "type": "string"
        },
        "functionFocus": {
          "items": {
            "type": "integer"
          },
          "type": "array",
          "uniqueItems": true
        },
        "isCareerSiteEnabled": {
          "title": "Is career site enabled",
          "type": "boolean"
        },
        "logo": {
          "format": "uri",
          "readOnly": true,
          "title": "Logo",
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "nameJa": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Name ja",
          "type": "string"
        },
        "website": {
          "format": "uri",
          "maxLength": 200,
          "title": "Website",
          "type": "string"
        }
      },
      "required": [
        "name",
        "nameJa",
        "functionFocus"
      ],
      "type": "object"
    },
    "Contract": {
      "description": "Return serialized Contract data.",
      "properties": {
        "agency": {
          "$ref": "#/definitions/_Agency"
        },
        "client": {
          "$ref": "#/definitions/_Client"
        },
        "daysUntilInvitationExpire": {
          "readOnly": true,
          "title": "Days until invitation expire",
          "type": "string"
        },
        "endAt": {
          "format": "date",
          "readOnly": true,
          "title": "End at",
          "type": "string"
        },
        "feeCurrency": {
          "minLength": 1,
          "readOnly": true,
          "title": "Fee currency",
          "type": "string"
        },
        "feeRate": {
          "description": "Float number of percent in format: 00.00",
          "format": "decimal",
          "readOnly": true,
          "title": "Fee rate",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "initialFee": {
          "format": "decimal",
          "readOnly": true,
          "title": "Initial fee",
          "type": "string"
        },
        "isAgencySigned": {
          "readOnly": true,
          "title": "Is agency signed",
          "type": "boolean"
        },
        "isClientSigned": {
          "readOnly": true,
          "title": "Is client signed",
          "type": "boolean"
        },
        "jobs": {
          "readOnly": true,
          "title": "Jobs",
          "type": "string"
        },
        "startAt": {
          "format": "date",
          "readOnly": true,
          "title": "Start at",
          "type": "string"
        },
        "status": {
          "enum": [
            "agency_invited",
            "pending",
            "initiated",
            "rejected",
            "expired"
          ],
          "readOnly": true,
          "title": "Status",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateCandidateComment": {
      "properties": {
        "candidate": {
          "title": "Candidate",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "public": {
          "title": "Public",
          "type": "boolean"
        },
        "text": {
          "minLength": 1,
          "title": "Text",
          "type": "string"
        }
      },
      "required": [
        "candidate",
        "text"
      ],
      "type": "object"
    },
    "CreateContract": {
      "properties": {
        "agency": {
          "title": "Agency",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "inviteDurationDays": {
          "maximum": 2147483647,
          "minimum": -2147483648,
          "title": "Invite duration days",
          "type": "integer"
        },
        "status": {
          "enum": [
            "agency_invited",
            "pending",
            "initiated",
            "rejected",
            "expired"
          ],
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "agency"
      ],
      "type": "object"
    },
    "CreateProposal": {
      "properties": {
        "candidate": {
          "title": "Candidate",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "job": {
          "title": "Job",
          "type": "integer"
        }
      },
      "required": [
        "job",
        "candidate"
      ],
      "type": "object"
    },
    "CreateProposalComment": {
      "properties": {
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "proposal": {
          "title": "Proposal",
          "type": "integer"
        },
        "public": {
          "title": "Public",
          "type": "boolean"
        },
        "text": {
          "minLength": 1,
          "title": "Text",
          "type": "string"
        }
      },
      "required": [
        "proposal",
        "text"
      ],
      "type": "object"
    },
    "CreateProposalThroughCandidate": {
      "properties": {
        "job": {
          "title": "Job",
          "type": "integer"
        }
      },
      "required": [
        "job"
      ],
      "type": "object",
      "x-nullable": true
    },
    "CreateUpdateCandidate": {
      "properties": {
        "activator": {
          "title": "Activator",
          "type": "integer",
          "x-nullable": true
        },
        "address": {
          "minLength": 1,
          "readOnly": true,
          "title": "Address",
          "type": "string"
        },
        "age": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Age",
          "type": "integer",
          "x-nullable": true
        },
        "archived": {
          "readOnly": true,
          "title": "Archived",
          "type": "boolean"
        },
        "birthdate": {
          "format": "date",
          "title": "Birthdate",
          "type": "string",
          "x-nullable": true
        },
        "certifications": {
          "items": {
            "$ref": "#/definitions/CandidateCertification"
          },
          "type": "array"
        },
        "clientBrief": {
          "title": "Client brief",
          "type": "string"
        },
        "clientExpertise": {
          "title": "Client expertise",
          "type": "string"
        },
        "companiesAlreadyAppliedTo": {
          "title": "Companies already applied to",
          "type": "string"
        },
        "companiesAppliedTo": {
          "title": "Companies applied to",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created at",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/OrgMember"
        },
        "currentCity": {
          "maxLength": 128,
          "title": "Current city",
          "type": "string"
        },
        "currentCompany": {
          "maxLength": 128,
          "title": "Current company",
          "type": "string"
        },
        "currentCountry": {
          "enum": [
            "af",
            "al",
            "dz",
            "ad",
            "ao",
            "ag",
            "ar",
            "am",
            "au",
            "at",
            "az",
            "bs",
            "bh",
            "bd",
            "bb",
            "by",
            "be",
            "bz",
            "bj",
            "bt",
            "bo",
            "ba",
            "bw",
            "br",
            "bn",
            "bg",
            "bf",
            "bi",
            "cv",
            "kh",
            "cm",
            "ca",
            "cf",
            "td",
            "cl",
            "cn",
            "co",
            "km",
            "cg",
            "cd",
            "cr",
            "ci",
            "hr",
            "cu",
            "cy",
            "cz",
            "dk",
            "dj",
            "dm",
            "do",
            "ec",
            "eg",
            "sv",
            "gq",
            "er",
            "ee",
            "sz",
            "et",
            "fj",
            "fi",
            "fr",
            "ga",
            "gm",
            "ge",
            "de",
            "gh",
            "gr",
            "gd",
            "gt",
            "gn",
            "gw",
            "gy",
            "ht",
            "hn",
            "hu",
            "is",
            "in",
            "id",
            "ir",
            "iq",
            "ie",
            "il",
            "it",
            "jm",
            "jp",
            "jo",
            "kz",
            "ke",
            "ki",
            "kp",
            "kr",
            "kw",
            "kg",
            "la",
            "lv",
            "lb",
            "ls",
            "lr",
            "ly",
            "li",
            "lt",
            "lu",
            "mg",
            "mw",
            "my",
            "mv",
            "ml",
            "mt",
            "mh",
            "mr",
            "mu",
            "mx",
            "fm",
            "md",
            "mc",
            "mn",
            "me",
            "ma",
            "mz",
            "mm",
            "na",
            "nr",
            "np",
            "nl",
            "nz",
            "ni",
            "ne",
            "ng",
            "mk",
            "no",
            "om",
            "pk",
            "pw",
            "pa",
            "pg",
            "py",
            "pe",
            "ph",
            "pl",
            "pt",
            "qa",
            "ro",
            "ru",
            "rw",
            "kn",
            "lc",
            "vc",
            "ws",
            "sm",
            "st",
            "sa",
            "sn",
            "rs",
            "sc",
            "sl",
            "sg",
            "sk",
            "si",
            "sb",
            "so",
            "za",
            "ss",
            "es",
            "lk",
            "sd",
            "sr",
            "se",
            "ch",
            "sy",
            "tj",
            "tz",
            "th",
            "tl",
            "tg",
            "to",
            "tt",
            "tn",
            "tr",
            "tm",
            "tv",
            "ug",
            "ua",
            "ae",
            "gb",
            "us",
            "uy",
            "uz",
            "vu",
            "ve",
            "vn",
            "ye",
            "zm",
            "zw"
          ],
          "title": "Current country",
          "type": "string"
        },
        "currentPosition": {
          "maxLength": 256,
          "title": "Current position",
          "type": "string"
        },
        "currentPostalCode": {
          "maxLength": 128,
          "title": "Current postal code",
          "type": "string"
        },
        "currentPrefecture": {
          "maxLength": 128,
          "title": "Current prefecture",
          "type": "string"
        },
        "currentSalary": {
          "format": "decimal",
          "title": "Current salary",
          "type": "string",
          "x-nullable": true
        },
        "currentSalaryBreakdown": {
          "title": "Current salary breakdown",
          "type": "string"
        },
        "currentSalaryCurrency": {
          "minLength": 1,
          "readOnly": true,
          "title": "Current salary currency",
          "type": "string"
        },
        "currentSalaryVariable": {
          "format": "decimal",
          "title": "Current salary variable",
          "type": "string",
          "x-nullable": true
        },
        "currentStreet": {
          "maxLength": 128,
          "title": "Current street",
          "type": "string"
        },
        "cvJa": {
          "format": "uri",
          "readOnly": true,
          "title": "Cv ja",
          "type": "string"
        },
        "cvJaThumbnail": {
          "format": "uri",
          "readOnly": true,
          "title": "Cv ja thumbnail",
          "type": "string"
        },
        "department": {
          "title": "Department",
          "type": "string"
        },
        "educationDetails": {
          "items": {
            "$ref": "#/definitions/EducationDetail"
          },
          "type": "array"
        },
        "email": {
          "format": "email",
          "maxLength": 254,
          "title": "Email",
          "type": "string"
        },
        "employmentStatus": {
          "enum": [
            "notemployed",
            "fulltime",
            "fixedterm",
            "temporary",
            "businessowner",
            "dispatched",
            "freelance"
          ],
          "title": "Employment status",
          "type": "string"
        },
        "expectationsDetails": {
          "title": "Expectations details",
          "type": "string"
        },
        "experienceDetails": {
          "items": {
            "$ref": "#/definitions/ExperienceDetail"
          },
          "type": "array"
        },
        "files": {
          "items": {
            "$ref": "#/definitions/CandidateFileCandidate"
          },
          "type": "array"
        },
        "firstName": {
          "maxLength": 128,
          "title": "First name",
          "type": "string"
        },
        "firstNameKanji": {
          "maxLength": 128,
          "title": "First name kanji",
          "type": "string"
        },
        "firstNameKatakana": {
          "maxLength": 128,
          "title": "First name katakana",
          "type": "string"
        },
        "fulltime": {
          "title": "Fulltime",
          "type": "boolean"
        },
        "gender": {
          "enum": [
            "male",
            "female",
            "other"
          ],
          "title": "Gender",
          "type": "string"
        },
        "githubUrl": {
          "format": "uri",
          "maxLength": 200,
          "title": "Github url",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "industry": {
          "enum": [
            "architecture_and_construction",
            "automobile_or_aviation_and_aerospace",
            "banking_and_financial_services",
            "consulting",
            "education_or_training_or_coaching",
            "electronic_goods",
            "energy_and_natural_resources",
            "fintech",
            "food_and_beverage_or_fmcg",
            "hardware",
            "healthcare_or_pharmaceutical_or_life_sciences",
            "it_or_technology_or__digital_and_telecom",
            "insurance",
            "legal_and_compliance",
            "leisure_or_hospitality_or_restaurants_or_travel_and_tourism",
            "manufacturing_or_industrial",
            "media_or_art_and_entertaiment_or_communication_or_agency",
            "public_sector",
            "real_estate_or_property_and_construction",
            "recruitment",
            "retail_or_fashion_or_luxury_or_consumer_goods",
            "services",
            "software",
            "transportation_or_shipping_or_logistics"
          ],
          "title": "Industry",
          "type": "string"
        },
        "internalStatus": {
          "enum": [
            "not_contacted",
            "contacted",
            "generally_unqualified",
            "active"
          ],
          "title": "Internal status",
          "type": "string"
        },
        "isClientContact": {
          "title": "Is client contact",
          "type": "boolean"
        },
        "isMet": {
          "title": "Is met",
          "type": "boolean"
        },
        "isMissingRequiredFields": {
          "readOnly": true,
          "title": "Is missing required fields",
          "type": "string"
        },
        "jobChangeUrgency": {
          "enum": [
            "urgent",
            "actively_looking",
            "passively_looking",
            "not_looking"
          ],
          "title": "Job change urgency",
          "type": "string"
        },
        "languages": {
          "items": {
            "$ref": "#/definitions/Language"
          },
          "type": "array"
        },
        "lastName": {
          "maxLength": 128,
          "title": "Last name",
          "type": "string"
        },
        "lastNameKanji": {
          "maxLength": 128,
          "title": "Last name kanji",
          "type": "string"
        },
        "lastNameKatakana": {
          "maxLength": 128,
          "title": "Last name katakana",
          "type": "string"
        },
        "leadConsultant": {
          "title": "Lead consultant",
          "type": "integer",
          "x-nullable": true
        },
        "linkedinData": {
          "description": "Return linkedin data if User has permission.",
          "readOnly": true,
          "title": "Linkedin data",
          "type": "object"
        },
        "linkedinUrl": {
          "format": "uri",
          "title": "Linkedin url",
          "type": "string"
        },
        "local": {
          "title": "Local",
          "type": "boolean"
        },
        "maxNumPeopleManaged": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Max num people managed",
          "type": "integer",
          "x-nullable": true
        },
        "middleName": {
          "maxLength": 128,
          "title": "Middle name",
          "type": "string"
        },
        "mobileCollect": {
          "title": "Mobile collect",
          "type": "integer",
          "x-nullable": true
        },
        "name": {
          "readOnly": true,
          "title": "Name",
          "type": "string"
        },
        "nameCollect": {
          "title": "Name collect",
          "type": "integer",
          "x-nullable": true
        },
        "nameJa": {
          "readOnly": true,
          "title": "Name ja",
          "type": "string"
        },
        "nationality": {
          "maxLength": 128,
          "title": "Nationality",
          "type": "string"
        },
        "note": {
          "readOnly": true,
          "title": "Note",
          "type": "string"
        },
        "noticePeriod": {
          "enum": [
            "immediate",
            "two_weeks",
            "one_month",
            "two_months",
            "three_months"
          ],
          "title": "Notice period",
          "type": "string"
        },
        "original": {
          "title": "Original",
          "type": "integer",
          "x-nullable": true
        },
        "otherDesiredBenefits": {
          "items": {
            "enum": [
              "sign_on_bonus",
              "relocation",
              "holidays",
              "schooling",
              "company_car",
              "training",
              "housing",
              "equity",
              "tax_equalization",
              "special_insurance",
              "other"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "otherDesiredBenefitsOthersDetail": {
          "maxLength": 128,
          "title": "Other desired benefits others detail",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "type": "integer",
          "x-nullable": true
        },
        "parttime": {
          "title": "Parttime",
          "type": "boolean"
        },
        "phone": {
          "title": "Phone",
          "type": "string"
        },
        "photo": {
          "format": "uri",
          "readOnly": true,
          "title": "Photo",
          "type": "string"
        },
        "placementApprovedAt": {
          "format": "date",
          "readOnly": true,
          "title": "Placement approved at",
          "type": "string"
        },
        "platform": {
          "enum": [
            "linkedin",
            "facebook",
            "biz_reach",
            "github",
            "careercross",
            "corporate_site",
            "other"
          ],
          "title": "Platform",
          "type": "string"
        },
        "platformOtherDetails": {
          "maxLength": 128,
          "title": "Platform other details",
          "type": "string"
        },
        "potentialLocations": {
          "maxLength": 256,
          "title": "Potential locations",
          "type": "string"
        },
        "proposals": {
          "items": {
            "$ref": "#/definitions/CandidateProposal"
          },
          "readOnly": true,
          "type": "array"
        },
        "proposed": {
          "description": "Return True if was proposed to job passed via parameter.",
          "readOnly": true,
          "title": "Proposed",
          "type": "boolean"
        },
        "proposedToJob": {
          "title": "Proposed to job",
          "type": "boolean"
        },
        "pullFactors": {
          "title": "Pull factors",
          "type": "string"
        },
        "pushFactors": {
          "title": "Push factors",
          "type": "string"
        },
        "reasonForJobChanges": {
          "title": "Reason for job changes",
          "type": "string"
        },
        "referredBy": {
          "title": "Referred by",
          "type": "integer",
          "x-nullable": true
        },
        "remote": {
          "title": "Remote",
          "type": "boolean"
        },
        "resume": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume",
          "type": "string"
        },
        "resumeJa": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume ja",
          "type": "string"
        },
        "resumeJaThumbnail": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume ja thumbnail",
          "type": "string"
        },
        "resumeThumbnail": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume thumbnail",
          "type": "string"
        },
        "salary": {
          "format": "decimal",
          "title": "Salary",
          "type": "string",
          "x-nullable": true
        },
        "salaryCurrency": {
          "minLength": 1,
          "readOnly": true,
          "title": "Salary currency",
          "type": "string"
        },
        "secondaryEmail": {
          "format": "email",
          "title": "Secondary email",
          "type": "string"
        },
        "secondaryPhone": {
          "title": "Secondary phone",
          "type": "string"
        },
        "skillDomain": {
          "title": "Skill domain",
          "type": "integer",
          "x-nullable": true
        },
        "source": {
          "maxLength": 128,
          "title": "Source",
          "type": "string"
        },
        "sourceDetails": {
          "maxLength": 128,
          "title": "Source details",
          "type": "string"
        },
        "summary": {
          "title": "Summary",
          "type": "string"
        },
        "supportConsultant": {
          "title": "Support consultant",
          "type": "integer",
          "x-nullable": true
        },
        "tags": {
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "type": "array"
        },
        "taxEqualization": {
          "title": "Tax equalization",
          "type": "boolean",
          "x-nullable": true
        },
        "totalAnnualSalary": {
          "minLength": 1,
          "readOnly": true,
          "title": "Total annual salary",
          "type": "string"
        },
        "twitterUrl": {
          "format": "uri",
          "maxLength": 200,
          "title": "Twitter url",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated at",
          "type": "string"
        },
        "updatedBy": {
          "$ref": "#/definitions/OrgMember"
        },
        "websiteUrl": {
          "format": "uri",
          "maxLength": 200,
          "title": "Website url",
          "type": "string"
        },
        "zohoId": {
          "minLength": 1,
          "readOnly": true,
          "title": "Zoho id",
          "type": "string"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object"
    },
    "CreateUpdateJob": {
      "properties": {
        "additionalLeaves": {
          "title": "Additional leaves",
          "type": "string"
        },
        "agencies": {
          "items": {
            "type": "integer"
          },
          "type": "array",
          "uniqueItems": true
        },
        "bonusSystem": {
          "title": "Bonus system",
          "type": "string"
        },
        "breakTimeMins": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Break time mins",
          "type": "integer",
          "x-nullable": true
        },
        "client": {
          "title": "Client",
          "type": "integer"
        },
        "closedAt": {
          "format": "date-time",
          "title": "Closed at",
          "type": "string",
          "x-nullable": true
        },
        "commutationAllowance": {
          "title": "Commutation allowance",
          "type": "string"
        },
        "country": {
          "enum": [
            "af",
            "al",
            "dz",
            "ad",
            "ao",
            "ag",
            "ar",
            "am",
            "au",
            "at",
            "az",
            "bs",
            "bh",
            "bd",
            "bb",
            "by",
            "be",
            "bz",
            "bj",
            "bt",
            "bo",
            "ba",
            "bw",
            "br",
            "bn",
            "bg",
            "bf",
            "bi",
            "cv",
            "kh",
            "cm",
            "ca",
            "cf",
            "td",
            "cl",
            "cn",
            "co",
            "km",
            "cg",
            "cd",
            "cr",
            "ci",
            "hr",
            "cu",
            "cy",
            "cz",
            "dk",
            "dj",
            "dm",
            "do",
            "ec",
            "eg",
            "sv",
            "gq",
            "er",
            "ee",
            "sz",
            "et",
            "fj",
            "fi",
            "fr",
            "ga",
            "gm",
            "ge",
            "de",
            "gh",
            "gr",
            "gd",
            "gt",
            "gn",
            "gw",
            "gy",
            "ht",
            "hn",
            "hu",
            "is",
            "in",
            "id",
            "ir",
            "iq",
            "ie",
            "il",
            "it",
            "jm",
            "jp",
            "jo",
            "kz",
            "ke",
            "ki",
            "kp",
            "kr",
            "kw",
            "kg",
            "la",
            "lv",
            "lb",
            "ls",
            "lr",
            "ly",
            "li",
            "lt",
            "lu",
            "mg",
            "mw",
            "my",
            "mv",
            "ml",
            "mt",
            "mh",
            "mr",
            "mu",
            "mx",
            "fm",
            "md",
            "mc",
            "mn",
            "me",
            "ma",
            "mz",
            "mm",
            "na",
            "nr",
            "np",
            "nl",
            "nz",
            "ni",
            "ne",
            "ng",
            "mk",
            "no",
            "om",
            "pk",
            "pw",
            "pa",
            "pg",
            "py",
            "pe",
            "ph",
            "pl",
            "pt",
            "qa",
            "ro",
            "ru",
            "rw",
            "kn",
            "lc",
            "vc",
            "ws",
            "sm",
            "st",
            "sa",
            "sn",
            "rs",
            "sc",
            "sl",
            "sg",
            "sk",
            "si",
            "sb",
            "so",
            "za",
            "ss",
            "es",
            "lk",
            "sd",
            "sr",
            "se",
            "ch",
            "sy",
            "tj",
            "tz",
            "th",
            "tl",
            "tg",
            "to",
            "tt",
            "tn",
            "tr",
            "tm",
            "tv",
            "ug",
            "ua",
            "ae",
            "gb",
            "us",
            "uy",
            "uz",
            "vu",
            "ve",
            "vn",
            "ye",
            "zm",
            "zw"
          ],
          "title": "Country",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created at",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/OrgMember"
        },
        "department": {
          "maxLength": 128,
          "title": "Department",
          "type": "string"
        },
        "educationalLevel": {
          "enum": [
            "none",
            "highschool",
            "bachelors",
            "masters",
            "phd"
          ],
          "title": "Educational level",
          "type": "string"
        },
        "employmentType": {
          "enum": [
            "permanent",
            "parttime",
            "fixedterm",
            "dispatch",
            "freelance"
          ],
          "title": "Employment type",
          "type": "string"
        },
        "flexitimeEligibility": {
          "enum": [
            "eligible",
            "not_eligible"
          ],
          "title": "Flexitime eligibility",
          "type": "string"
        },
        "function": {
          "title": "Function",
          "type": "integer",
          "x-nullable": true
        },
        "hiringCriteria": {
          "items": {
            "$ref": "#/definitions/HiringCriterion"
          },
          "type": "array"
        },
        "hiringProcess": {
          "title": "Hiring process",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "interviewTemplates": {
          "items": {
            "$ref": "#/definitions/CreateUpdateJobInterviewTemplate"
          },
          "type": "array"
        },
        "managers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "mission": {
          "title": "Mission",
          "type": "string"
        },
        "openingsCount": {
          "minimum": 0,
          "title": "Openings count",
          "type": "integer"
        },
        "otherBenefits": {
          "items": {
            "enum": [
              "visa",
              "relocation",
              "wellness",
              "coffee"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "overtimeConditions": {
          "title": "Overtime conditions",
          "type": "string"
        },
        "paidLeaves": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Paid leaves",
          "type": "integer",
          "x-nullable": true
        },
        "probationPeriodMonths": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Probation period months",
          "type": "integer",
          "x-nullable": true
        },
        "published": {
          "title": "Published",
          "type": "boolean"
        },
        "publishedAt": {
          "format": "date-time",
          "title": "Published at",
          "type": "string",
          "x-nullable": true
        },
        "questions": {
          "items": {
            "$ref": "#/definitions/CreateUpdateJobQuestion"
          },
          "type": "array"
        },
        "reasonForOpening": {
          "enum": [
            "replacement",
            "new"
          ],
          "title": "Reason for opening",
          "type": "string"
        },
        "recruiters": {
          "items": {
            "type": "integer"
          },
          "type": "array",
          "uniqueItems": true
        },
        "requiredLanguages": {
          "items": {
            "$ref": "#/definitions/Language"
          },
          "type": "array"
        },
        "requirements": {
          "title": "Requirements",
          "type": "string"
        },
        "responsibilities": {
          "title": "Responsibilities",
          "type": "string"
        },
        "salaryCurrency": {
          "minLength": 1,
          "readOnly": true,
          "title": "Salary currency",
          "type": "string"
        },
        "salaryFrom": {
          "format": "decimal",
          "title": "Salary from",
          "type": "string",
          "x-nullable": true
        },
        "salaryPer": {
          "enum": [
            "year",
            "month",
            "week",
            "day",
            "hour"
          ],
          "title": "Salary per",
          "type": "string"
        },
        "salaryTo": {
          "format": "decimal",
          "title": "Salary to",
          "type": "string",
          "x-nullable": true
        },
        "skills": {
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "type": "array"
        },
        "socialInsurances": {
          "items": {
            "enum": [
              "health",
              "employment",
              "welfare_pension",
              "accident_compensation"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "status": {
          "enum": [
            "open",
            "on_hold",
            "filled",
            "closed"
          ],
          "title": "Status",
          "type": "string"
        },
        "targetHiringDate": {
          "format": "date",
          "title": "Target hiring date",
          "type": "string",
          "x-nullable": true
        },
        "teleworkEligibility": {
          "enum": [
            "onsite",
            "possible",
            "remote"
          ],
          "title": "Telework eligibility",
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Title",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated at",
          "type": "string"
        },
        "workExperience": {
          "enum": [
            "none",
            "zero_one_year",
            "one_two_years",
            "two_five_years",
            "five_ten_years",
            "ten_plus_years"
          ],
          "title": "Work experience",
          "type": "string"
        },
        "workLocation": {
          "maxLength": 128,
          "title": "Work location",
          "type": "string"
        },
        "workingHours": {
          "title": "Working hours",
          "type": "string"
        }
      },
      "required": [
        "title",
        "responsibilities",
        "requirements",
        "requiredLanguages",
        "managers",
        "recruiters",
        "questions",
        "interviewTemplates",
        "agencies",
        "country"
      ],
      "type": "object"
    },
    "CreateUpdateJobInterviewTemplate": {
      "properties": {
        "description": {
          "maxLength": 1024,
          "title": "Description",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "type": "integer"
        },
        "interviewType": {
          "enum": [
            "assignment",
            "technical_fit",
            "cultural_fit",
            "general",
            "cross_team"
          ],
          "title": "Interview type",
          "type": "string"
        },
        "interviewer": {
          "title": "Interviewer",
          "type": "integer",
          "x-nullable": true
        },
        "order": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Order",
          "type": "integer"
        }
      },
      "required": [
        "order"
      ],
      "type": "object"
    },
    "CreateUpdateJobQuestion": {
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer"
        },
        "text": {
          "maxLength": 1024,
          "minLength": 1,
          "title": "Text",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "type": "object"
    },
    "CreateUpdateProposalInterview": {
      "properties": {
        "assessment": {
          "$ref": "#/definitions/ProposalInterviewAssessment"
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "endAt": {
          "format": "date-time",
          "title": "End at",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "interviewType": {
          "enum": [
            "assignment",
            "technical_fit",
            "cultural_fit",
            "general",
            "cross_team"
          ],
          "title": "Interview type",
          "type": "string"
        },
        "interviewer": {
          "title": "Interviewer",
          "type": "integer",
          "x-nullable": true
        },
        "invited": {
          "items": {
            "$ref": "#/definitions/_InvitedUser"
          },
          "type": "array"
        },
        "isCurrentInterview": {
          "readOnly": true,
          "title": "Is current interview",
          "type": "string"
        },
        "notes": {
          "title": "Notes",
          "type": "string"
        },
        "order": {
          "readOnly": true,
          "title": "Order",
          "type": "integer"
        },
        "preScheduleMsg": {
          "title": "Pre schedule msg",
          "type": "string"
        },
        "proposal": {
          "title": "Proposal",
          "type": "integer"
        },
        "schedules": {
          "items": {
            "$ref": "#/definitions/ProposalInterviewSchedule"
          },
          "readOnly": true,
          "type": "array"
        },
        "schedulingType": {
          "minLength": 1,
          "title": "Scheduling type",
          "type": "string"
        },
        "startAt": {
          "format": "date-time",
          "title": "Start at",
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "enum": [
            "to_be_scheduled",
            "pending",
            "scheduled",
            "rejected",
            "canceled",
            "skipped"
          ],
          "title": "Status",
          "type": "string"
        },
        "statusDisplay": {
          "minLength": 1,
          "title": "Status display",
          "type": "string"
        },
        "timeslots": {
          "items": {
            "$ref": "#/definitions/ProposalInterviewScheduleTimeSlot"
          },
          "type": "array"
        },
        "toOrder": {
          "minimum": 1,
          "title": "To order",
          "type": "integer",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "DealPipelineMetrics": {
      "properties": {
        "realistic": {
          "$ref": "#/definitions/DealPipelineRounds"
        },
        "total": {
          "$ref": "#/definitions/DealPipelineRounds"
        }
      },
      "type": "object"
    },
    "DealPipelineProposal": {
      "properties": {
        "candidate": {
          "$ref": "#/definitions/ProposalCandidate"
        },
        "clientName": {
          "minLength": 1,
          "title": "Client name",
          "type": "string"
        },
        "dealStage": {
          "minLength": 1,
          "title": "Deal stage",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "job": {
          "$ref": "#/definitions/ProposalJob"
        },
        "realisticValue": {
          "readOnly": true,
          "title": "Realistic value",
          "type": "string"
        },
        "totalValue": {
          "readOnly": true,
          "title": "Total value",
          "type": "string"
        }
      },
      "required": [
        "clientName",
        "dealStage"
      ],
      "type": "object"
    },
    "DealPipelineRounds": {
      "properties": {
        "finalRound": {
          "readOnly": true,
          "title": "Final round",
          "type": "integer"
        },
        "firstRound": {
          "readOnly": true,
          "title": "First round",
          "type": "integer"
        },
        "intermediateRound": {
          "readOnly": true,
          "title": "Intermediate round",
          "type": "integer"
        },
        "offerRound": {
          "readOnly": true,
          "title": "Offer round",
          "type": "integer"
        },
        "total": {
          "readOnly": true,
          "title": "Total",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "EducationDetail": {
      "properties": {
        "currentlyPursuing": {
          "title": "Currently pursuing",
          "type": "boolean"
        },
        "dateEnd": {
          "format": "date",
          "title": "Date end",
          "type": "string",
          "x-nullable": true
        },
        "dateStart": {
          "format": "date",
          "title": "Date start",
          "type": "string",
          "x-nullable": true
        },
        "degree": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Degree",
          "type": "string"
        },
        "department": {
          "maxLength": 128,
          "title": "Department",
          "type": "string"
        },
        "institute": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Institute",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExperienceDetail": {
      "properties": {
        "company": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Company",
          "type": "string"
        },
        "currentlyPursuing": {
          "title": "Currently pursuing",
          "type": "boolean"
        },
        "dateEnd": {
          "format": "date",
          "title": "Date end",
          "type": "string",
          "x-nullable": true
        },
        "dateStart": {
          "format": "date",
          "title": "Date start",
          "type": "string",
          "x-nullable": true
        },
        "location": {
          "maxLength": 255,
          "title": "Location",
          "type": "string"
        },
        "occupation": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Occupation",
          "type": "string"
        },
        "summary": {
          "title": "Summary",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExtJob": {
      "properties": {
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "title": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Title",
          "type": "string"
        }
      },
      "required": [
        "title"
      ],
      "type": "object"
    },
    "Fee": {
      "properties": {
        "billDescription": {
          "maxLength": 200,
          "minLength": 1,
          "title": "Bill description",
          "type": "string"
        },
        "billingAddress": {
          "maxLength": 384,
          "minLength": 1,
          "title": "Billing address",
          "type": "string"
        },
        "clientId": {
          "readOnly": true,
          "title": "Client id",
          "type": "integer"
        },
        "consultingFee": {
          "format": "decimal",
          "title": "Consulting fee",
          "type": "string",
          "x-nullable": true
        },
        "consultingFeePercentile": {
          "format": "decimal",
          "title": "Consulting fee percentile",
          "type": "string",
          "x-nullable": true
        },
        "consultingFeeType": {
          "enum": [
            "fixed",
            "percentile"
          ],
          "title": "Consulting fee type",
          "type": "string"
        },
        "consumptionTax": {
          "format": "decimal",
          "title": "Consumption tax",
          "type": "string"
        },
        "contractType": {
          "minLength": 1,
          "readOnly": true,
          "title": "Contract type",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "invoiceDueDate": {
          "format": "date",
          "title": "Invoice due date",
          "type": "string",
          "x-nullable": true
        },
        "invoiceEmail": {
          "format": "email",
          "maxLength": 254,
          "title": "Invoice email",
          "type": "string"
        },
        "invoiceIssuanceDate": {
          "format": "date",
          "title": "Invoice issuance date",
          "type": "string"
        },
        "invoicePaidAt": {
          "format": "date",
          "title": "Invoice paid at",
          "type": "string",
          "x-nullable": true
        },
        "invoiceStatus": {
          "enum": [
            "paid",
            "overdue",
            "sent",
            "not_sent"
          ],
          "title": "Invoice status",
          "type": "string"
        },
        "invoiceValue": {
          "format": "decimal",
          "title": "Invoice value",
          "type": "string"
        },
        "isEditable": {
          "readOnly": true,
          "title": "Is editable",
          "type": "boolean"
        },
        "jobContract": {
          "title": "Job contract",
          "type": "integer",
          "x-nullable": true
        },
        "nbvDate": {
          "format": "date",
          "title": "Nbv date",
          "type": "string",
          "x-nullable": true
        },
        "nfiDate": {
          "format": "date",
          "title": "Nfi date",
          "type": "string",
          "x-nullable": true
        },
        "notesToApprover": {
          "title": "Notes to approver",
          "type": "string"
        },
        "placement": {
          "$ref": "#/definitions/Placement"
        },
        "proposal": {
          "$ref": "#/definitions/Proposal"
        },
        "proposalId": {
          "title": "Proposal id",
          "type": "integer",
          "x-nullable": true
        },
        "shouldSendInvoiceEmail": {
          "title": "Should send invoice email",
          "type": "boolean"
        },
        "splitAllocationId": {
          "readOnly": true,
          "title": "Split allocation id",
          "type": "integer"
        },
        "status": {
          "enum": [
            "draft",
            "pending",
            "approved",
            "needs_revision"
          ],
          "title": "Status",
          "type": "string"
        },
        "submittedBy": {
          "$ref": "#/definitions/OrgMember"
        }
      },
      "required": [
        "billingAddress",
        "billDescription",
        "consultingFeeType",
        "invoiceValue",
        "invoiceIssuanceDate",
        "consumptionTax"
      ],
      "type": "object"
    },
    "FeeSplitAllocation": {
      "properties": {
        "activator": {
          "title": "Activator",
          "type": "integer",
          "x-nullable": true
        },
        "activatorSplit": {
          "format": "decimal",
          "title": "Activator split",
          "type": "string"
        },
        "candidateOwner": {
          "title": "Candidate owner",
          "type": "integer",
          "x-nullable": true
        },
        "candidateOwnerSplit": {
          "format": "decimal",
          "title": "Candidate owner split",
          "type": "string"
        },
        "clientOriginator": {
          "title": "Client originator",
          "type": "integer",
          "x-nullable": true
        },
        "clientOriginatorSplit": {
          "format": "decimal",
          "title": "Client originator split",
          "type": "string"
        },
        "fee": {
          "title": "Fee",
          "type": "integer"
        },
        "feeStatus": {
          "enum": [
            "draft",
            "pending",
            "approved",
            "needs_revision"
          ],
          "title": "Fee status",
          "type": "string"
        },
        "file": {
          "format": "uri",
          "readOnly": true,
          "title": "File",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "isEditable": {
          "readOnly": true,
          "title": "Is editable",
          "type": "string"
        },
        "leadBdConsultant": {
          "title": "Lead bd consultant",
          "type": "integer",
          "x-nullable": true
        },
        "leadBdConsultantSplit": {
          "format": "decimal",
          "title": "Lead bd consultant split",
          "type": "string"
        },
        "leadCandidateConsultant": {
          "title": "Lead candidate consultant",
          "type": "integer",
          "x-nullable": true
        },
        "leadCandidateConsultantSplit": {
          "format": "decimal",
          "title": "Lead candidate consultant split",
          "type": "string"
        },
        "submittedBy": {
          "$ref": "#/definitions/OrgMember"
        },
        "supportConsultant": {
          "title": "Support consultant",
          "type": "integer",
          "x-nullable": true
        },
        "supportConsultantSplit": {
          "format": "decimal",
          "title": "Support consultant split",
          "type": "string"
        }
      },
      "required": [
        "fee",
        "candidateOwnerSplit",
        "leadCandidateConsultantSplit",
        "supportConsultantSplit",
        "clientOriginatorSplit",
        "leadBdConsultantSplit",
        "activatorSplit"
      ],
      "type": "object"
    },
    "Feedback": {
      "properties": {
        "pageHtml": {
          "minLength": 1,
          "title": "Page html",
          "type": "string",
          "x-nullable": true
        },
        "pageUrl": {
          "maxLength": 255,
          "minLength": 1,
          "title": "Page url",
          "type": "string",
          "x-nullable": true
        },
        "reduxState": {
          "title": "Redux state",
          "type": "object",
          "x-nullable": true
        },
        "text": {
          "minLength": 1,
          "title": "Text",
          "type": "string"
        }
      },
      "required": [
        "text",
        "pageUrl"
      ],
      "type": "object"
    },
    "FormEducationDetail": {
      "properties": {
        "currentlyPursuing": {
          "title": "Currently pursuing",
          "type": "boolean"
        },
        "dateEnd": {
          "format": "date",
          "title": "Date end",
          "type": "string",
          "x-nullable": true
        },
        "dateStart": {
          "format": "date",
          "title": "Date start",
          "type": "string",
          "x-nullable": true
        },
        "degree": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Degree",
          "type": "string"
        },
        "department": {
          "maxLength": 128,
          "title": "Department",
          "type": "string"
        },
        "institute": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Institute",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FormExperienceDetail": {
      "properties": {
        "company": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Company",
          "type": "string"
        },
        "currentlyPursuing": {
          "title": "Currently pursuing",
          "type": "boolean"
        },
        "dateEnd": {
          "format": "date",
          "title": "Date end",
          "type": "string",
          "x-nullable": true
        },
        "dateStart": {
          "format": "date",
          "title": "Date start",
          "type": "string"
        },
        "location": {
          "maxLength": 255,
          "title": "Location",
          "type": "string"
        },
        "occupation": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Occupation",
          "type": "string"
        },
        "summary": {
          "title": "Summary",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FrontendSettings": {
      "properties": {
        "agencyDirectoryShowPer": {
          "title": "Agency directory show per",
          "type": "integer"
        },
        "agencyProposalsShowPer": {
          "title": "Agency proposals show per",
          "type": "integer"
        },
        "assignMembersShowPer": {
          "title": "Assign members show per",
          "type": "integer"
        },
        "candidatePlacementsShowPer": {
          "title": "Candidate placements show per",
          "type": "integer"
        },
        "candidatesShowPer": {
          "title": "Candidates show per",
          "type": "integer"
        },
        "clientJobsShowPer": {
          "title": "Client jobs show per",
          "type": "integer"
        },
        "dashboardJobsShowPer": {
          "title": "Dashboard jobs show per",
          "type": "integer"
        },
        "dashboardProposalsShowPer": {
          "title": "Dashboard proposals show per",
          "type": "integer"
        },
        "dealPipelineCandidatesShowPer": {
          "title": "Deal pipeline candidates show per",
          "type": "integer"
        },
        "jobImportLonglistShowPer": {
          "title": "Job import longlist show per",
          "type": "integer"
        },
        "jobsLonglistShowPer": {
          "title": "Jobs longlist show per",
          "type": "integer"
        },
        "jobsShortlistShowPer": {
          "title": "Jobs shortlist show per",
          "type": "integer"
        },
        "jobsShowPer": {
          "title": "Jobs show per",
          "type": "integer"
        },
        "notificationsShowPer": {
          "title": "Notifications show per",
          "type": "integer"
        },
        "organizationsShowPer": {
          "title": "Organizations show per",
          "type": "integer"
        },
        "proposalsSnapshotShowPer": {
          "title": "Proposals snapshot show per",
          "type": "integer"
        },
        "staffShowPer": {
          "title": "Staff show per",
          "type": "integer"
        },
        "submitCandidatesShowPer": {
          "title": "Submit candidates show per",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Function": {
      "properties": {
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "title": {
          "minLength": 1,
          "readOnly": true,
          "title": "Title",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HiringCriterion": {
      "properties": {
        "id": {
          "title": "Id",
          "type": "integer"
        },
        "name": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "HiringCriterionAssessment": {
      "properties": {
        "hiringCriterionId": {
          "title": "Hiring criterion id",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "readOnly": true,
          "title": "Name",
          "type": "string"
        },
        "rating": {
          "maximum": 5,
          "minimum": 1,
          "title": "Rating",
          "type": "integer",
          "x-nullable": true
        }
      },
      "required": [
        "hiringCriterionId"
      ],
      "type": "object"
    },
    "InterviewTemplate": {
      "properties": {
        "defaultOrder": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Default order",
          "type": "integer",
          "x-nullable": true
        },
        "interviewType": {
          "enum": [
            "assignment",
            "technical_fit",
            "cultural_fit",
            "general",
            "cross_team"
          ],
          "title": "Interview type",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Job": {
      "properties": {
        "additionalLeaves": {
          "minLength": 1,
          "readOnly": true,
          "title": "Additional leaves",
          "type": "string"
        },
        "agencies": {
          "items": {
            "$ref": "#/definitions/JobAgency"
          },
          "type": "array"
        },
        "agencyContracts": {
          "items": {
            "$ref": "#/definitions/JobJobAgencyContract"
          },
          "readOnly": true,
          "type": "array"
        },
        "assignees": {
          "items": {
            "$ref": "#/definitions/JobAssignee"
          },
          "type": "array"
        },
        "bonusSystem": {
          "minLength": 1,
          "readOnly": true,
          "title": "Bonus system",
          "type": "string"
        },
        "breakTimeMins": {
          "readOnly": true,
          "title": "Break time mins",
          "type": "integer"
        },
        "candidateProposed": {
          "description": "Return True if Candidate was proposed to this Job.",
          "readOnly": true,
          "title": "Candidate proposed",
          "type": "boolean"
        },
        "clientId": {
          "readOnly": true,
          "title": "Client id",
          "type": "string"
        },
        "clientName": {
          "minLength": 1,
          "readOnly": true,
          "title": "Client name",
          "type": "string"
        },
        "closedAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Closed at",
          "type": "string"
        },
        "commutationAllowance": {
          "minLength": 1,
          "readOnly": true,
          "title": "Commutation allowance",
          "type": "string"
        },
        "contractType": {
          "enum": [
            "mts",
            "retainer",
            "contingent"
          ],
          "readOnly": true,
          "title": "Contract type",
          "type": "string"
        },
        "country": {
          "enum": [
            "af",
            "al",
            "dz",
            "ad",
            "ao",
            "ag",
            "ar",
            "am",
            "au",
            "at",
            "az",
            "bs",
            "bh",
            "bd",
            "bb",
            "by",
            "be",
            "bz",
            "bj",
            "bt",
            "bo",
            "ba",
            "bw",
            "br",
            "bn",
            "bg",
            "bf",
            "bi",
            "cv",
            "kh",
            "cm",
            "ca",
            "cf",
            "td",
            "cl",
            "cn",
            "co",
            "km",
            "cg",
            "cd",
            "cr",
            "ci",
            "hr",
            "cu",
            "cy",
            "cz",
            "dk",
            "dj",
            "dm",
            "do",
            "ec",
            "eg",
            "sv",
            "gq",
            "er",
            "ee",
            "sz",
            "et",
            "fj",
            "fi",
            "fr",
            "ga",
            "gm",
            "ge",
            "de",
            "gh",
            "gr",
            "gd",
            "gt",
            "gn",
            "gw",
            "gy",
            "ht",
            "hn",
            "hu",
            "is",
            "in",
            "id",
            "ir",
            "iq",
            "ie",
            "il",
            "it",
            "jm",
            "jp",
            "jo",
            "kz",
            "ke",
            "ki",
            "kp",
            "kr",
            "kw",
            "kg",
            "la",
            "lv",
            "lb",
            "ls",
            "lr",
            "ly",
            "li",
            "lt",
            "lu",
            "mg",
            "mw",
            "my",
            "mv",
            "ml",
            "mt",
            "mh",
            "mr",
            "mu",
            "mx",
            "fm",
            "md",
            "mc",
            "mn",
            "me",
            "ma",
            "mz",
            "mm",
            "na",
            "nr",
            "np",
            "nl",
            "nz",
            "ni",
            "ne",
            "ng",
            "mk",
            "no",
            "om",
            "pk",
            "pw",
            "pa",
            "pg",
            "py",
            "pe",
            "ph",
            "pl",
            "pt",
            "qa",
            "ro",
            "ru",
            "rw",
            "kn",
            "lc",
            "vc",
            "ws",
            "sm",
            "st",
            "sa",
            "sn",
            "rs",
            "sc",
            "sl",
            "sg",
            "sk",
            "si",
            "sb",
            "so",
            "za",
            "ss",
            "es",
            "lk",
            "sd",
            "sr",
            "se",
            "ch",
            "sy",
            "tj",
            "tz",
            "th",
            "tl",
            "tg",
            "to",
            "tt",
            "tn",
            "tr",
            "tm",
            "tv",
            "ug",
            "ua",
            "ae",
            "gb",
            "us",
            "uy",
            "uz",
            "vu",
            "ve",
            "vn",
            "ye",
            "zm",
            "zw"
          ],
          "readOnly": true,
          "title": "Country",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created at",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/OrgMember"
        },
        "department": {
          "minLength": 1,
          "readOnly": true,
          "title": "Department",
          "type": "string"
        },
        "educationalLevel": {
          "enum": [
            "none",
            "highschool",
            "bachelors",
            "masters",
            "phd"
          ],
          "readOnly": true,
          "title": "Educational level",
          "type": "string"
        },
        "employmentType": {
          "enum": [
            "permanent",
            "parttime",
            "fixedterm",
            "dispatch",
            "freelance"
          ],
          "readOnly": true,
          "title": "Employment type",
          "type": "string"
        },
        "files": {
          "items": {
            "$ref": "#/definitions/JobFile"
          },
          "type": "array"
        },
        "flexitimeEligibility": {
          "enum": [
            "eligible",
            "not_eligible"
          ],
          "readOnly": true,
          "title": "Flexitime eligibility",
          "type": "string"
        },
        "function": {
          "$ref": "#/definitions/JobFunction"
        },
        "hiredCount": {
          "readOnly": true,
          "title": "Hired count",
          "type": "integer"
        },
        "hiringCriteria": {
          "items": {
            "$ref": "#/definitions/HiringCriterion"
          },
          "type": "array"
        },
        "hiringProcess": {
          "minLength": 1,
          "readOnly": true,
          "title": "Hiring process",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "interviewTemplates": {
          "items": {
            "$ref": "#/definitions/JobInterviewTemplate"
          },
          "type": "array"
        },
        "location": {
          "readOnly": true,
          "title": "Location",
          "type": "string"
        },
        "managers": {
          "$ref": "#/definitions/PublicUser"
        },
        "mission": {
          "minLength": 1,
          "readOnly": true,
          "title": "Mission",
          "type": "string"
        },
        "openingsCount": {
          "readOnly": true,
          "title": "Openings count",
          "type": "integer"
        },
        "organization": {
          "$ref": "#/definitions/JobOrganization"
        },
        "otherBenefits": {
          "items": {
            "enum": [
              "visa",
              "relocation",
              "wellness",
              "coffee"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "overtimeConditions": {
          "minLength": 1,
          "readOnly": true,
          "title": "Overtime conditions",
          "type": "string"
        },
        "paidLeaves": {
          "readOnly": true,
          "title": "Paid leaves",
          "type": "integer"
        },
        "priority": {
          "readOnly": true,
          "title": "Priority",
          "type": "boolean"
        },
        "probationPeriodMonths": {
          "readOnly": true,
          "title": "Probation period months",
          "type": "integer"
        },
        "proposalsCount": {
          "readOnly": true,
          "title": "Proposals count",
          "type": "integer"
        },
        "proposalsPipeline": {
          "readOnly": true,
          "title": "Proposals pipeline",
          "type": "string"
        },
        "published": {
          "readOnly": true,
          "title": "Published",
          "type": "boolean"
        },
        "publishedAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Published at",
          "type": "string"
        },
        "questions": {
          "items": {
            "$ref": "#/definitions/JobQuestion"
          },
          "type": "array"
        },
        "reasonForOpening": {
          "enum": [
            "replacement",
            "new"
          ],
          "readOnly": true,
          "title": "Reason for opening",
          "type": "string"
        },
        "recruiters": {
          "items": {
            "$ref": "#/definitions/OrgMember"
          },
          "readOnly": true,
          "type": "array"
        },
        "requiredLanguages": {
          "items": {
            "$ref": "#/definitions/Language"
          },
          "type": "array"
        },
        "requirements": {
          "minLength": 1,
          "readOnly": true,
          "title": "Requirements",
          "type": "string"
        },
        "responsibilities": {
          "minLength": 1,
          "readOnly": true,
          "title": "Responsibilities",
          "type": "string"
        },
        "salaryCurrency": {
          "minLength": 1,
          "readOnly": true,
          "title": "Salary currency",
          "type": "string"
        },
        "salaryFrom": {
          "format": "decimal",
          "readOnly": true,
          "title": "Salary from",
          "type": "string"
        },
        "salaryPer": {
          "enum": [
            "year",
            "month",
            "week",
            "day",
            "hour"
          ],
          "readOnly": true,
          "title": "Salary per",
          "type": "string"
        },
        "salaryTo": {
          "format": "decimal",
          "readOnly": true,
          "title": "Salary to",
          "type": "string"
        },
        "skills": {
          "items": {
            "$ref": "#/definitions/JobSkill"
          },
          "type": "array"
        },
        "socialInsurances": {
          "items": {
            "enum": [
              "health",
              "employment",
              "welfare_pension",
              "accident_compensation"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "status": {
          "enum": [
            "open",
            "on_hold",
            "filled",
            "closed"
          ],
          "readOnly": true,
          "title": "Status",
          "type": "string"
        },
        "talentAssociates": {
          "$ref": "#/definitions/PublicUser"
        },
        "targetHiringDate": {
          "format": "date",
          "readOnly": true,
          "title": "Target hiring date",
          "type": "string"
        },
        "teleworkEligibility": {
          "enum": [
            "onsite",
            "possible",
            "remote"
          ],
          "readOnly": true,
          "title": "Telework eligibility",
          "type": "string"
        },
        "title": {
          "minLength": 1,
          "readOnly": true,
          "title": "Title",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated at",
          "type": "string"
        },
        "userHasAccess": {
          "description": "Return True if User has access to this Job.",
          "readOnly": true,
          "title": "User has access",
          "type": "boolean"
        },
        "workExperience": {
          "enum": [
            "none",
            "zero_one_year",
            "one_two_years",
            "two_five_years",
            "five_ten_years",
            "ten_plus_years"
          ],
          "readOnly": true,
          "title": "Work experience",
          "type": "string"
        },
        "workLocation": {
          "minLength": 1,
          "readOnly": true,
          "title": "Work location",
          "type": "string"
        },
        "workingHours": {
          "minLength": 1,
          "readOnly": true,
          "title": "Working hours",
          "type": "string"
        }
      },
      "required": [
        "agencies",
        "assignees",
        "files",
        "function",
        "hiringCriteria",
        "interviewTemplates",
        "organization",
        "otherBenefits",
        "questions",
        "requiredLanguages",
        "socialInsurances"
      ],
      "type": "object"
    },
    "JobAgency": {
      "properties": {
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "name": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "JobAgencyContract": {
      "properties": {
        "clientId": {
          "minLength": 1,
          "readOnly": true,
          "title": "Client id",
          "type": "string"
        },
        "contactPersonName": {
          "maxLength": 100,
          "minLength": 1,
          "title": "Contact person name",
          "type": "string"
        },
        "contractType": {
          "enum": [
            "mts",
            "retainer",
            "contingent"
          ],
          "title": "Contract type",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "industry": {
          "enum": [
            "architecture_and_construction",
            "automobile_or_aviation_and_aerospace",
            "banking_and_financial_services",
            "consulting",
            "education_or_training_or_coaching",
            "electronic_goods",
            "energy_and_natural_resources",
            "fintech",
            "food_and_beverage_or_fmcg",
            "hardware",
            "healthcare_or_pharmaceutical_or_life_sciences",
            "it_or_technology_or__digital_and_telecom",
            "insurance",
            "legal_and_compliance",
            "leisure_or_hospitality_or_restaurants_or_travel_and_tourism",
            "manufacturing_or_industrial",
            "media_or_art_and_entertaiment_or_communication_or_agency",
            "public_sector",
            "real_estate_or_property_and_construction",
            "recruitment",
            "retail_or_fashion_or_luxury_or_consumer_goods",
            "services",
            "software",
            "transportation_or_shipping_or_logistics"
          ],
          "title": "Industry",
          "type": "string"
        },
        "signedAt": {
          "format": "date",
          "title": "Signed at",
          "type": "string"
        }
      },
      "required": [
        "contractType",
        "contactPersonName",
        "industry",
        "signedAt"
      ],
      "type": "object"
    },
    "JobAssignee": {
      "properties": {
        "firstName": {
          "maxLength": 30,
          "minLength": 1,
          "title": "First name",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "lastName": {
          "maxLength": 150,
          "minLength": 1,
          "title": "Last name",
          "type": "string"
        },
        "photo": {
          "format": "uri",
          "readOnly": true,
          "title": "Photo",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "firstName",
        "lastName"
      ],
      "type": "object"
    },
    "JobFile": {
      "properties": {
        "file": {
          "format": "uri",
          "readOnly": true,
          "title": "File",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "job": {
          "title": "Job",
          "type": "integer"
        },
        "thumbnail": {
          "format": "uri",
          "readOnly": true,
          "title": "Thumbnail",
          "type": "string"
        },
        "title": {
          "maxLength": 64,
          "title": "Title",
          "type": "string"
        }
      },
      "required": [
        "job"
      ],
      "type": "object"
    },
    "JobFunction": {
      "properties": {
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "title": {
          "maxLength": 64,
          "minLength": 1,
          "title": "Title",
          "type": "string"
        }
      },
      "required": [
        "title"
      ],
      "type": "object"
    },
    "JobInterviewTemplate": {
      "properties": {
        "description": {
          "maxLength": 1024,
          "title": "Description",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "type": "integer"
        },
        "interviewType": {
          "enum": [
            "assignment",
            "technical_fit",
            "cultural_fit",
            "general",
            "cross_team"
          ],
          "title": "Interview type",
          "type": "string"
        },
        "interviewer": {
          "$ref": "#/definitions/OrgMember"
        },
        "order": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Order",
          "type": "integer"
        }
      },
      "required": [
        "order"
      ],
      "type": "object"
    },
    "JobJobAgencyContract": {
      "properties": {
        "contractType": {
          "enum": [
            "mts",
            "retainer",
            "contingent"
          ],
          "title": "Contract type",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "isFilledIn": {
          "title": "Is filled in",
          "type": "boolean"
        },
        "signedAt": {
          "format": "date",
          "title": "Signed at",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "JobList": {
      "properties": {
        "additionalLeaves": {
          "minLength": 1,
          "readOnly": true,
          "title": "Additional leaves",
          "type": "string"
        },
        "agencyContracts": {
          "items": {
            "$ref": "#/definitions/JobJobAgencyContract"
          },
          "readOnly": true,
          "type": "array"
        },
        "bonusSystem": {
          "minLength": 1,
          "readOnly": true,
          "title": "Bonus system",
          "type": "string"
        },
        "breakTimeMins": {
          "readOnly": true,
          "title": "Break time mins",
          "type": "integer"
        },
        "candidateProposed": {
          "description": "Return True if Candidate was proposed to this Job.",
          "readOnly": true,
          "title": "Candidate proposed",
          "type": "boolean"
        },
        "clientId": {
          "readOnly": true,
          "title": "Client id",
          "type": "string"
        },
        "clientName": {
          "minLength": 1,
          "readOnly": true,
          "title": "Client name",
          "type": "string"
        },
        "closedAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Closed at",
          "type": "string"
        },
        "commutationAllowance": {
          "minLength": 1,
          "readOnly": true,
          "title": "Commutation allowance",
          "type": "string"
        },
        "contractType": {
          "enum": [
            "mts",
            "retainer",
            "contingent"
          ],
          "readOnly": true,
          "title": "Contract type",
          "type": "string"
        },
        "country": {
          "enum": [
            "af",
            "al",
            "dz",
            "ad",
            "ao",
            "ag",
            "ar",
            "am",
            "au",
            "at",
            "az",
            "bs",
            "bh",
            "bd",
            "bb",
            "by",
            "be",
            "bz",
            "bj",
            "bt",
            "bo",
            "ba",
            "bw",
            "br",
            "bn",
            "bg",
            "bf",
            "bi",
            "cv",
            "kh",
            "cm",
            "ca",
            "cf",
            "td",
            "cl",
            "cn",
            "co",
            "km",
            "cg",
            "cd",
            "cr",
            "ci",
            "hr",
            "cu",
            "cy",
            "cz",
            "dk",
            "dj",
            "dm",
            "do",
            "ec",
            "eg",
            "sv",
            "gq",
            "er",
            "ee",
            "sz",
            "et",
            "fj",
            "fi",
            "fr",
            "ga",
            "gm",
            "ge",
            "de",
            "gh",
            "gr",
            "gd",
            "gt",
            "gn",
            "gw",
            "gy",
            "ht",
            "hn",
            "hu",
            "is",
            "in",
            "id",
            "ir",
            "iq",
            "ie",
            "il",
            "it",
            "jm",
            "jp",
            "jo",
            "kz",
            "ke",
            "ki",
            "kp",
            "kr",
            "kw",
            "kg",
            "la",
            "lv",
            "lb",
            "ls",
            "lr",
            "ly",
            "li",
            "lt",
            "lu",
            "mg",
            "mw",
            "my",
            "mv",
            "ml",
            "mt",
            "mh",
            "mr",
            "mu",
            "mx",
            "fm",
            "md",
            "mc",
            "mn",
            "me",
            "ma",
            "mz",
            "mm",
            "na",
            "nr",
            "np",
            "nl",
            "nz",
            "ni",
            "ne",
            "ng",
            "mk",
            "no",
            "om",
            "pk",
            "pw",
            "pa",
            "pg",
            "py",
            "pe",
            "ph",
            "pl",
            "pt",
            "qa",
            "ro",
            "ru",
            "rw",
            "kn",
            "lc",
            "vc",
            "ws",
            "sm",
            "st",
            "sa",
            "sn",
            "rs",
            "sc",
            "sl",
            "sg",
            "sk",
            "si",
            "sb",
            "so",
            "za",
            "ss",
            "es",
            "lk",
            "sd",
            "sr",
            "se",
            "ch",
            "sy",
            "tj",
            "tz",
            "th",
            "tl",
            "tg",
            "to",
            "tt",
            "tn",
            "tr",
            "tm",
            "tv",
            "ug",
            "ua",
            "ae",
            "gb",
            "us",
            "uy",
            "uz",
            "vu",
            "ve",
            "vn",
            "ye",
            "zm",
            "zw"
          ],
          "readOnly": true,
          "title": "Country",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created at",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/OrgMember"
        },
        "department": {
          "minLength": 1,
          "readOnly": true,
          "title": "Department",
          "type": "string"
        },
        "educationalLevel": {
          "enum": [
            "none",
            "highschool",
            "bachelors",
            "masters",
            "phd"
          ],
          "readOnly": true,
          "title": "Educational level",
          "type": "string"
        },
        "employmentType": {
          "enum": [
            "permanent",
            "parttime",
            "fixedterm",
            "dispatch",
            "freelance"
          ],
          "readOnly": true,
          "title": "Employment type",
          "type": "string"
        },
        "flexitimeEligibility": {
          "enum": [
            "eligible",
            "not_eligible"
          ],
          "readOnly": true,
          "title": "Flexitime eligibility",
          "type": "string"
        },
        "haveAccessSince": {
          "format": "date-time",
          "title": "Have access since",
          "type": "string"
        },
        "hiringCriteria": {
          "items": {
            "$ref": "#/definitions/HiringCriterion"
          },
          "type": "array"
        },
        "hiringProcess": {
          "minLength": 1,
          "readOnly": true,
          "title": "Hiring process",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "liveProposalsCount": {
          "readOnly": true,
          "title": "Live proposals count",
          "type": "integer"
        },
        "location": {
          "readOnly": true,
          "title": "Location",
          "type": "string"
        },
        "managers": {
          "$ref": "#/definitions/PublicUser"
        },
        "mission": {
          "minLength": 1,
          "readOnly": true,
          "title": "Mission",
          "type": "string"
        },
        "openingsCount": {
          "readOnly": true,
          "title": "Openings count",
          "type": "integer"
        },
        "organization": {
          "$ref": "#/definitions/JobOrganization"
        },
        "otherBenefits": {
          "items": {
            "enum": [
              "visa",
              "relocation",
              "wellness",
              "coffee"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "overtimeConditions": {
          "minLength": 1,
          "readOnly": true,
          "title": "Overtime conditions",
          "type": "string"
        },
        "paidLeaves": {
          "readOnly": true,
          "title": "Paid leaves",
          "type": "integer"
        },
        "priority": {
          "readOnly": true,
          "title": "Priority",
          "type": "boolean"
        },
        "probationPeriodMonths": {
          "readOnly": true,
          "title": "Probation period months",
          "type": "integer"
        },
        "proposalsCount": {
          "readOnly": true,
          "title": "Proposals count",
          "type": "integer"
        },
        "proposalsPipeline": {
          "readOnly": true,
          "title": "Proposals pipeline",
          "type": "string"
        },
        "published": {
          "readOnly": true,
          "title": "Published",
          "type": "boolean"
        },
        "publishedAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Published at",
          "type": "string"
        },
        "reasonForOpening": {
          "enum": [
            "replacement",
            "new"
          ],
          "readOnly": true,
          "title": "Reason for opening",
          "type": "string"
        },
        "recruiters": {
          "items": {
            "$ref": "#/definitions/OrgMember"
          },
          "readOnly": true,
          "type": "array"
        },
        "requirements": {
          "minLength": 1,
          "readOnly": true,
          "title": "Requirements",
          "type": "string"
        },
        "responsibilities": {
          "minLength": 1,
          "readOnly": true,
          "title": "Responsibilities",
          "type": "string"
        },
        "salaryCurrency": {
          "minLength": 1,
          "readOnly": true,
          "title": "Salary currency",
          "type": "string"
        },
        "salaryFrom": {
          "format": "decimal",
          "readOnly": true,
          "title": "Salary from",
          "type": "string"
        },
        "salaryPer": {
          "enum": [
            "year",
            "month",
            "week",
            "day",
            "hour"
          ],
          "readOnly": true,
          "title": "Salary per",
          "type": "string"
        },
        "salaryTo": {
          "format": "decimal",
          "readOnly": true,
          "title": "Salary to",
          "type": "string"
        },
        "skills": {
          "items": {
            "$ref": "#/definitions/JobSkill"
          },
          "type": "array"
        },
        "socialInsurances": {
          "items": {
            "enum": [
              "health",
              "employment",
              "welfare_pension",
              "accident_compensation"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "status": {
          "enum": [
            "open",
            "on_hold",
            "filled",
            "closed"
          ],
          "readOnly": true,
          "title": "Status",
          "type": "string"
        },
        "talentAssociates": {
          "$ref": "#/definitions/PublicUser"
        },
        "targetHiringDate": {
          "format": "date",
          "readOnly": true,
          "title": "Target hiring date",
          "type": "string"
        },
        "teleworkEligibility": {
          "enum": [
            "onsite",
            "possible",
            "remote"
          ],
          "readOnly": true,
          "title": "Telework eligibility",
          "type": "string"
        },
        "title": {
          "minLength": 1,
          "readOnly": true,
          "title": "Title",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated at",
          "type": "string"
        },
        "userHasAccess": {
          "description": "Return True if User has access to this Job.",
          "readOnly": true,
          "title": "User has access",
          "type": "boolean"
        },
        "workExperience": {
          "enum": [
            "none",
            "zero_one_year",
            "one_two_years",
            "two_five_years",
            "five_ten_years",
            "ten_plus_years"
          ],
          "readOnly": true,
          "title": "Work experience",
          "type": "string"
        },
        "workLocation": {
          "minLength": 1,
          "readOnly": true,
          "title": "Work location",
          "type": "string"
        },
        "workingHours": {
          "minLength": 1,
          "readOnly": true,
          "title": "Working hours",
          "type": "string"
        }
      },
      "required": [
        "hiringCriteria",
        "organization",
        "otherBenefits",
        "socialInsurances"
      ],
      "type": "object"
    },
    "JobOrganization": {
      "properties": {
        "id": {
          "readOnly": true,
          "title": "Id",
          "type": "integer"
        },
        "logo": {
          "format": "uri",
          "readOnly": true,
          "title": "Logo",
          "type": "string"
        },
        "name": {
          "minLength": 1,
          "readOnly": true,
          "title": "Name",
          "type": "string"
        },
        "nameJa": {
          "minLength": 1,
          "readOnly": true,
          "title": "Name ja",
          "type": "string"
        },
        "type": {
          "minLength": 1,
          "readOnly": true,
          "title": "Type",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JobQuestion": {
      "properties": {
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "text": {
          "maxLength": 1024,
          "minLength": 1,
          "title": "Text",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "type": "object"
    },
    "JobSkill": {
      "properties": {
        "name": {
          "minLength": 1,
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "JobUpdateResponse": {
      "properties": {
        "additionalLeaves": {
          "title": "Additional leaves",
          "type": "string"
        },
        "agencies": {
          "items": {
            "type": "integer"
          },
          "type": "array",
          "uniqueItems": true
        },
        "arePostingsOutdated": {
          "readOnly": true,
          "title": "Are postings outdated",
          "type": "boolean"
        },
        "bonusSystem": {
          "title": "Bonus system",
          "type": "string"
        },
        "breakTimeMins": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Break time mins",
          "type": "integer",
          "x-nullable": true
        },
        "client": {
          "title": "Client",
          "type": "integer"
        },
        "closedAt": {
          "format": "date-time",
          "title": "Closed at",
          "type": "string",
          "x-nullable": true
        },
        "commutationAllowance": {
          "title": "Commutation allowance",
          "type": "string"
        },
        "country": {
          "enum": [
            "af",
            "al",
            "dz",
            "ad",
            "ao",
            "ag",
            "ar",
            "am",
            "au",
            "at",
            "az",
            "bs",
            "bh",
            "bd",
            "bb",
            "by",
            "be",
            "bz",
            "bj",
            "bt",
            "bo",
            "ba",
            "bw",
            "br",
            "bn",
            "bg",
            "bf",
            "bi",
            "cv",
            "kh",
            "cm",
            "ca",
            "cf",
            "td",
            "cl",
            "cn",
            "co",
            "km",
            "cg",
            "cd",
            "cr",
            "ci",
            "hr",
            "cu",
            "cy",
            "cz",
            "dk",
            "dj",
            "dm",
            "do",
            "ec",
            "eg",
            "sv",
            "gq",
            "er",
            "ee",
            "sz",
            "et",
            "fj",
            "fi",
            "fr",
            "ga",
            "gm",
            "ge",
            "de",
            "gh",
            "gr",
            "gd",
            "gt",
            "gn",
            "gw",
            "gy",
            "ht",
            "hn",
            "hu",
            "is",
            "in",
            "id",
            "ir",
            "iq",
            "ie",
            "il",
            "it",
            "jm",
            "jp",
            "jo",
            "kz",
            "ke",
            "ki",
            "kp",
            "kr",
            "kw",
            "kg",
            "la",
            "lv",
            "lb",
            "ls",
            "lr",
            "ly",
            "li",
            "lt",
            "lu",
            "mg",
            "mw",
            "my",
            "mv",
            "ml",
            "mt",
            "mh",
            "mr",
            "mu",
            "mx",
            "fm",
            "md",
            "mc",
            "mn",
            "me",
            "ma",
            "mz",
            "mm",
            "na",
            "nr",
            "np",
            "nl",
            "nz",
            "ni",
            "ne",
            "ng",
            "mk",
            "no",
            "om",
            "pk",
            "pw",
            "pa",
            "pg",
            "py",
            "pe",
            "ph",
            "pl",
            "pt",
            "qa",
            "ro",
            "ru",
            "rw",
            "kn",
            "lc",
            "vc",
            "ws",
            "sm",
            "st",
            "sa",
            "sn",
            "rs",
            "sc",
            "sl",
            "sg",
            "sk",
            "si",
            "sb",
            "so",
            "za",
            "ss",
            "es",
            "lk",
            "sd",
            "sr",
            "se",
            "ch",
            "sy",
            "tj",
            "tz",
            "th",
            "tl",
            "tg",
            "to",
            "tt",
            "tn",
            "tr",
            "tm",
            "tv",
            "ug",
            "ua",
            "ae",
            "gb",
            "us",
            "uy",
            "uz",
            "vu",
            "ve",
            "vn",
            "ye",
            "zm",
            "zw"
          ],
          "title": "Country",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created at",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/OrgMember"
        },
        "department": {
          "maxLength": 128,
          "title": "Department",
          "type": "string"
        },
        "educationalLevel": {
          "enum": [
            "none",
            "highschool",
            "bachelors",
            "masters",
            "phd"
          ],
          "title": "Educational level",
          "type": "string"
        },
        "employmentType": {
          "enum": [
            "permanent",
            "parttime",
            "fixedterm",
            "dispatch",
            "freelance"
          ],
          "title": "Employment type",
          "type": "string"
        },
        "flexitimeEligibility": {
          "enum": [
            "eligible",
            "not_eligible"
          ],
          "title": "Flexitime eligibility",
          "type": "string"
        },
        "function": {
          "title": "Function",
          "type": "integer",
          "x-nullable": true
        },
        "hiringCriteria": {
          "items": {
            "$ref": "#/definitions/HiringCriterion"
          },
          "type": "array"
        },
        "hiringProcess": {
          "title": "Hiring process",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "interviewTemplates": {
          "items": {
            "$ref": "#/definitions/CreateUpdateJobInterviewTemplate"
          },
          "type": "array"
        },
        "managers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "mission": {
          "title": "Mission",
          "type": "string"
        },
        "openingsCount": {
          "minimum": 0,
          "title": "Openings count",
          "type": "integer"
        },
        "otherBenefits": {
          "items": {
            "enum": [
              "visa",
              "relocation",
              "wellness",
              "coffee"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "overtimeConditions": {
          "title": "Overtime conditions",
          "type": "string"
        },
        "paidLeaves": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Paid leaves",
          "type": "integer",
          "x-nullable": true
        },
        "probationPeriodMonths": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Probation period months",
          "type": "integer",
          "x-nullable": true
        },
        "published": {
          "title": "Published",
          "type": "boolean"
        },
        "publishedAt": {
          "format": "date-time",
          "title": "Published at",
          "type": "string",
          "x-nullable": true
        },
        "questions": {
          "items": {
            "$ref": "#/definitions/CreateUpdateJobQuestion"
          },
          "type": "array"
        },
        "reasonForOpening": {
          "enum": [
            "replacement",
            "new"
          ],
          "title": "Reason for opening",
          "type": "string"
        },
        "recruiters": {
          "items": {
            "type": "integer"
          },
          "type": "array",
          "uniqueItems": true
        },
        "requiredLanguages": {
          "items": {
            "$ref": "#/definitions/Language"
          },
          "type": "array"
        },
        "requirements": {
          "title": "Requirements",
          "type": "string"
        },
        "responsibilities": {
          "title": "Responsibilities",
          "type": "string"
        },
        "salaryCurrency": {
          "minLength": 1,
          "readOnly": true,
          "title": "Salary currency",
          "type": "string"
        },
        "salaryFrom": {
          "format": "decimal",
          "title": "Salary from",
          "type": "string",
          "x-nullable": true
        },
        "salaryPer": {
          "enum": [
            "year",
            "month",
            "week",
            "day",
            "hour"
          ],
          "title": "Salary per",
          "type": "string"
        },
        "salaryTo": {
          "format": "decimal",
          "title": "Salary to",
          "type": "string",
          "x-nullable": true
        },
        "skills": {
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "type": "array"
        },
        "socialInsurances": {
          "items": {
            "enum": [
              "health",
              "employment",
              "welfare_pension",
              "accident_compensation"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "status": {
          "enum": [
            "open",
            "on_hold",
            "filled",
            "closed"
          ],
          "title": "Status",
          "type": "string"
        },
        "targetHiringDate": {
          "format": "date",
          "title": "Target hiring date",
          "type": "string",
          "x-nullable": true
        },
        "teleworkEligibility": {
          "enum": [
            "onsite",
            "possible",
            "remote"
          ],
          "title": "Telework eligibility",
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Title",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated at",
          "type": "string"
        },
        "workExperience": {
          "enum": [
            "none",
            "zero_one_year",
            "one_two_years",
            "two_five_years",
            "five_ten_years",
            "ten_plus_years"
          ],
          "title": "Work experience",
          "type": "string"
        },
        "workLocation": {
          "maxLength": 128,
          "title": "Work location",
          "type": "string"
        },
        "workingHours": {
          "title": "Working hours",
          "type": "string"
        }
      },
      "required": [
        "title",
        "responsibilities",
        "requirements",
        "requiredLanguages",
        "managers",
        "recruiters",
        "questions",
        "interviewTemplates",
        "agencies",
        "country"
      ],
      "type": "object"
    },
    "Language": {
      "properties": {
        "formatted": {
          "readOnly": true,
          "title": "Formatted",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "language": {
          "enum": [
            "cmn",
            "es",
            "en",
            "hi",
            "ar",
            "pt",
            "bn",
            "ru",
            "ja",
            "lah",
            "de",
            "jv",
            "wu",
            "zlm",
            "te",
            "vi",
            "ko",
            "fr",
            "mr",
            "ta",
            "ur",
            "tr",
            "it",
            "yue",
            "th"
          ],
          "title": "Language",
          "type": "string"
        },
        "level": {
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "title": "Level",
          "type": "integer"
        }
      },
      "required": [
        "language",
        "level"
      ],
      "type": "object"
    },
    "LegalAgreement": {
      "properties": {
        "documentType": {
          "enum": [
            "tandc",
            "pp"
          ],
          "readOnly": true,
          "title": "Document type",
          "type": "string"
        },
        "documentTypeDisplay": {
          "minLength": 1,
          "title": "Document type display",
          "type": "string"
        },
        "file": {
          "format": "uri",
          "readOnly": true,
          "title": "File",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "version": {
          "readOnly": true,
          "title": "Version",
          "type": "integer"
        }
      },
      "required": [
        "documentTypeDisplay"
      ],
      "type": "object"
    },
    "ManagerAssignRemoveFromJob": {
      "properties": {
        "job": {
          "title": "Job",
          "type": "integer"
        },
        "user": {
          "title": "User",
          "type": "string"
        }
      },
      "required": [
        "user",
        "job"
      ],
      "type": "object"
    },
    "ManagerInvite": {
      "properties": {
        "email": {
          "format": "email",
          "maxLength": 254,
          "minLength": 1,
          "title": "Email address",
          "type": "string"
        },
        "firstName": {
          "maxLength": 30,
          "minLength": 1,
          "title": "First name",
          "type": "string"
        },
        "lastName": {
          "maxLength": 150,
          "minLength": 1,
          "title": "Last name",
          "type": "string"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "email"
      ],
      "type": "object"
    },
    "Notification": {
      "properties": {
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "link": {
          "readOnly": true,
          "title": "Link",
          "type": "string"
        },
        "text": {
          "minLength": 1,
          "readOnly": true,
          "title": "Text",
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "title": "Timestamp",
          "type": "string"
        },
        "unread": {
          "title": "Unread",
          "type": "boolean"
        },
        "verb": {
          "enum": [
            "agency_assigned_member_for_job",
            "candidate_longlisted_for_job",
            "candidate_shortlisted_for_job",
            "client_assigned_agency_for_job",
            "client_changed_proposal_status",
            "client_created_contract",
            "client_updated_job",
            "contract_initiated_agency",
            "contract_initiated_client",
            "contract_invitation_accepted",
            "contract_invitation_declined",
            "contract_job_access_revoked_invite_ignored",
            "contract_job_access_revoked_no_agreement",
            "contract_signed_by_one_party",
            "fee_approved",
            "fee_draft",
            "fee_needs_revision",
            "fee_pending",
            "fee_pending_reminder",
            "interview_assessment_added_interviewer",
            "interview_assessment_added_recruiter",
            "interview_proposal_canceled",
            "interview_proposal_confirmed_interviewer",
            "interview_proposal_confirmed_proposer",
            "interview_proposal_is_sent",
            "interview_proposal_rejected_interviewer",
            "interview_proposal_rejected_recruiter",
            "job_is_filled",
            "new_proposal_candidate_direct_application",
            "new_proposal_candidate_recruiter",
            "new_proposal_candidate_sourced_by",
            "placement_fee_approved",
            "placement_fee_draft",
            "placement_fee_needs_revision",
            "placement_fee_pending",
            "placement_fee_pending_reminder",
            "proposal_approved_rejected_by_hiring_manager",
            "proposal_is_rejected",
            "proposal_moved",
            "proposal_pending_hiring_decision",
            "proposal_pending_start",
            "proposal_submitted_to_hiring_manager",
            "talent_assigned_manager_for_job",
            "user_mentioned_in_comment",
            "user_mentioned_in_comment_deleted"
          ],
          "title": "Verb",
          "type": "string"
        }
      },
      "required": [
        "verb"
      ],
      "type": "object"
    },
    "NotificationSetting": {
      "properties": {
        "description": {
          "minLength": 1,
          "title": "Description",
          "type": "string"
        },
        "email": {
          "title": "Email",
          "type": "boolean"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "name",
        "description",
        "email"
      ],
      "type": "object"
    },
    "NotificationsCount": {
      "properties": {
        "count": {
          "minimum": 0,
          "title": "Count",
          "type": "integer"
        }
      },
      "required": [
        "count"
      ],
      "type": "object"
    },
    "OrgMember": {
      "properties": {
        "firstName": {
          "maxLength": 30,
          "minLength": 1,
          "title": "First name",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "lastName": {
          "maxLength": 150,
          "minLength": 1,
          "title": "Last name",
          "type": "string"
        },
        "photo": {
          "format": "uri",
          "readOnly": true,
          "title": "Photo",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "firstName",
        "lastName"
      ],
      "type": "object"
    },
    "Placement": {
      "properties": {
        "candidateSource": {
          "maxLength": 128,
          "title": "Candidate source",
          "type": "string"
        },
        "candidateSourceDetails": {
          "maxLength": 100,
          "title": "Candidate source details",
          "type": "string"
        },
        "currentSalary": {
          "format": "decimal",
          "title": "Current salary",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "type": "integer"
        },
        "offeredSalary": {
          "format": "decimal",
          "title": "Offered salary",
          "type": "string"
        },
        "proposal": {
          "title": "Proposal",
          "type": "integer"
        },
        "signedAt": {
          "format": "date",
          "title": "Signed at",
          "type": "string"
        },
        "startsWorkAt": {
          "format": "date",
          "title": "Starts work at",
          "type": "string"
        }
      },
      "required": [
        "proposal",
        "currentSalary",
        "offeredSalary",
        "signedAt",
        "startsWorkAt"
      ],
      "type": "object",
      "x-nullable": true
    },
    "PossibleDuplicateCandidate": {
      "properties": {
        "email": {
          "title": "Email",
          "type": "string",
          "x-nullable": true
        },
        "firstName": {
          "minLength": 1,
          "title": "First name",
          "type": "string"
        },
        "firstNameKanji": {
          "title": "First name kanji",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "type": "integer"
        },
        "job": {
          "title": "Job",
          "type": "string",
          "x-nullable": true
        },
        "lastName": {
          "minLength": 1,
          "title": "Last name",
          "type": "string"
        },
        "lastNameKanji": {
          "title": "Last name kanji",
          "type": "string"
        },
        "linkedinUrl": {
          "title": "Linkedin url",
          "type": "string"
        },
        "secondaryEmail": {
          "title": "Secondary email",
          "type": "string"
        },
        "zohoId": {
          "title": "Zoho id",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "email"
      ],
      "type": "object"
    },
    "PossibleDuplicateLinkedInCandidate": {
      "properties": {
        "contactInfo": {
          "$ref": "#/definitions/_BasicContactInfo"
        },
        "job": {
          "title": "Job",
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "minLength": 1,
          "title": "Name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PrivateJobPosting": {
      "properties": {
        "additionalLeaves": {
          "title": "Additional leaves",
          "type": "string"
        },
        "bonusSystem": {
          "title": "Bonus system",
          "type": "string"
        },
        "breakTimeMins": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Break time mins",
          "type": "integer",
          "x-nullable": true
        },
        "commutationAllowance": {
          "title": "Commutation allowance",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created at",
          "type": "string"
        },
        "employmentType": {
          "enum": [
            "permanent",
            "parttime",
            "fixedterm",
            "dispatch",
            "freelance"
          ],
          "title": "Employment type",
          "type": "string"
        },
        "flexitimeEligibility": {
          "enum": [
            "eligible",
            "not_eligible"
          ],
          "title": "Flexitime eligibility",
          "type": "string"
        },
        "function": {
          "title": "Function",
          "type": "integer",
          "x-nullable": true
        },
        "isEnabled": {
          "title": "Is enabled",
          "type": "boolean"
        },
        "jobId": {
          "title": "Job id",
          "type": "integer"
        },
        "mission": {
          "title": "Mission",
          "type": "string"
        },
        "otherBenefits": {
          "items": {
            "enum": [
              "visa",
              "relocation",
              "wellness",
              "coffee"
            ],
            "title": "Other benefits",
            "type": "string"
          },
          "type": "array"
        },
        "overtimeConditions": {
          "title": "Overtime conditions",
          "type": "string"
        },
        "paidLeaves": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Paid leaves",
          "type": "integer",
          "x-nullable": true
        },
        "probationPeriodMonths": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Probation period months",
          "type": "integer",
          "x-nullable": true
        },
        "publicUuid": {
          "format": "uuid",
          "readOnly": true,
          "title": "Public uuid",
          "type": "string"
        },
        "questions": {
          "items": {
            "$ref": "#/definitions/PrivateJobPostingQuestion"
          },
          "type": "array"
        },
        "requiredLanguages": {
          "items": {
            "$ref": "#/definitions/Language"
          },
          "type": "array"
        },
        "requirements": {
          "minLength": 1,
          "title": "Requirements",
          "type": "string"
        },
        "responsibilities": {
          "minLength": 1,
          "title": "Responsibilities",
          "type": "string"
        },
        "salaryCurrency": {
          "minLength": 1,
          "readOnly": true,
          "title": "Salary currency",
          "type": "string"
        },
        "salaryFrom": {
          "format": "decimal",
          "title": "Salary from",
          "type": "string",
          "x-nullable": true
        },
        "salaryPer": {
          "enum": [
            "year",
            "month",
            "week",
            "day",
            "hour"
          ],
          "title": "Salary per",
          "type": "string"
        },
        "salaryTo": {
          "format": "decimal",
          "title": "Salary to",
          "type": "string",
          "x-nullable": true
        },
        "skills": {
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "type": "array"
        },
        "socialInsurances": {
          "items": {
            "enum": [
              "health",
              "employment",
              "welfare_pension",
              "accident_compensation"
            ],
            "title": "Social insurances",
            "type": "string"
          },
          "type": "array"
        },
        "teleworkEligibility": {
          "enum": [
            "onsite",
            "possible",
            "remote"
          ],
          "title": "Telework eligibility",
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Title",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated at",
          "type": "string"
        },
        "workLocation": {
          "maxLength": 128,
          "title": "Work location",
          "type": "string"
        },
        "workingHours": {
          "title": "Working hours",
          "type": "string"
        }
      },
      "required": [
        "jobId",
        "skills",
        "requiredLanguages",
        "questions",
        "title",
        "responsibilities",
        "requirements",
        "isEnabled"
      ],
      "type": "object"
    },
    "PrivateJobPostingPublic": {
      "properties": {
        "additionalLeaves": {
          "title": "Additional leaves",
          "type": "string"
        },
        "bonusSystem": {
          "title": "Bonus system",
          "type": "string"
        },
        "breakTimeMins": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Break time mins",
          "type": "integer",
          "x-nullable": true
        },
        "commutationAllowance": {
          "title": "Commutation allowance",
          "type": "string"
        },
        "employmentType": {
          "enum": [
            "permanent",
            "parttime",
            "fixedterm",
            "dispatch",
            "freelance"
          ],
          "title": "Employment type",
          "type": "string"
        },
        "flexitimeEligibility": {
          "enum": [
            "eligible",
            "not_eligible"
          ],
          "title": "Flexitime eligibility",
          "type": "string"
        },
        "function": {
          "$ref": "#/definitions/JobFunction"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "jobId": {
          "readOnly": true,
          "title": "Job id",
          "type": "string"
        },
        "mission": {
          "title": "Mission",
          "type": "string"
        },
        "organization": {
          "$ref": "#/definitions/JobOrganization"
        },
        "otherBenefits": {
          "items": {
            "enum": [
              "visa",
              "relocation",
              "wellness",
              "coffee"
            ],
            "title": "Other benefits",
            "type": "string"
          },
          "type": "array"
        },
        "overtimeConditions": {
          "title": "Overtime conditions",
          "type": "string"
        },
        "paidLeaves": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Paid leaves",
          "type": "integer",
          "x-nullable": true
        },
        "probationPeriodMonths": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Probation period months",
          "type": "integer",
          "x-nullable": true
        },
        "publicUuid": {
          "minLength": 1,
          "readOnly": true,
          "title": "Public uuid",
          "type": "string"
        },
        "questions": {
          "items": {
            "$ref": "#/definitions/PrivateJobPostingQuestion"
          },
          "type": "array"
        },
        "requiredLanguages": {
          "items": {
            "$ref": "#/definitions/Language"
          },
          "type": "array"
        },
        "requirements": {
          "minLength": 1,
          "title": "Requirements",
          "type": "string"
        },
        "responsibilities": {
          "minLength": 1,
          "title": "Responsibilities",
          "type": "string"
        },
        "salaryCurrency": {
          "minLength": 1,
          "readOnly": true,
          "title": "Salary currency",
          "type": "string"
        },
        "salaryFrom": {
          "format": "decimal",
          "title": "Salary from",
          "type": "string",
          "x-nullable": true
        },
        "salaryPer": {
          "enum": [
            "year",
            "month",
            "week",
            "day",
            "hour"
          ],
          "title": "Salary per",
          "type": "string"
        },
        "salaryTo": {
          "format": "decimal",
          "title": "Salary to",
          "type": "string",
          "x-nullable": true
        },
        "skills": {
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "type": "array"
        },
        "socialInsurances": {
          "items": {
            "enum": [
              "health",
              "employment",
              "welfare_pension",
              "accident_compensation"
            ],
            "title": "Social insurances",
            "type": "string"
          },
          "type": "array"
        },
        "teleworkEligibility": {
          "enum": [
            "onsite",
            "possible",
            "remote"
          ],
          "title": "Telework eligibility",
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Title",
          "type": "string"
        },
        "workLocation": {
          "maxLength": 128,
          "title": "Work location",
          "type": "string"
        },
        "workingHours": {
          "title": "Working hours",
          "type": "string"
        }
      },
      "required": [
        "organization",
        "questions",
        "title",
        "function",
        "responsibilities",
        "requirements",
        "requiredLanguages"
      ],
      "type": "object"
    },
    "PrivateJobPostingQuestion": {
      "properties": {
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "text": {
          "maxLength": 1024,
          "minLength": 1,
          "title": "Text",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "type": "object"
    },
    "Proposal": {
      "properties": {
        "canCreatePlacement": {
          "readOnly": true,
          "title": "Can create placement",
          "type": "boolean"
        },
        "canEditPlacement": {
          "readOnly": true,
          "title": "Can edit placement",
          "type": "boolean"
        },
        "canSeePlacement": {
          "readOnly": true,
          "title": "Can see placement",
          "type": "boolean"
        },
        "candidate": {
          "$ref": "#/definitions/ProposalCandidate"
        },
        "clientName": {
          "minLength": 1,
          "title": "Client name",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created at",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/PublicUser"
        },
        "currentInterview": {
          "$ref": "#/definitions/ProposalInterview"
        },
        "declineReasons": {
          "items": {
            "$ref": "#/definitions/ReasonDeclineCandidateOption"
          },
          "readOnly": true,
          "type": "array"
        },
        "feeId": {
          "readOnly": true,
          "title": "Fee id",
          "type": "integer"
        },
        "hiredAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Hired at",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "isDirectApplication": {
          "readOnly": true,
          "title": "Is direct application",
          "type": "boolean"
        },
        "isRejected": {
          "readOnly": true,
          "title": "Is rejected",
          "type": "boolean"
        },
        "job": {
          "$ref": "#/definitions/ProposalJob"
        },
        "jobCreatedByName": {
          "minLength": 1,
          "readOnly": true,
          "title": "Job created by name",
          "type": "string"
        },
        "lastActivityAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Last activity at",
          "type": "string"
        },
        "movedBy": {
          "$ref": "#/definitions/PublicUser"
        },
        "onHold": {
          "description": "\n:return: Proposal's availability depends on related Job availability (Boolean)\n",
          "readOnly": true,
          "title": "On hold",
          "type": "boolean"
        },
        "own": {
          "readOnly": true,
          "title": "Own",
          "type": "string"
        },
        "reasonDeclinedDescription": {
          "minLength": 1,
          "readOnly": true,
          "title": "Reason declined description",
          "type": "string"
        },
        "reasonNotInterestedDescription": {
          "minLength": 1,
          "readOnly": true,
          "title": "Reason not interested description",
          "type": "string"
        },
        "reasonsNotInterested": {
          "items": {
            "$ref": "#/definitions/ReasonNotInterestedOption"
          },
          "readOnly": true,
          "type": "array"
        },
        "source": {
          "$ref": "#/definitions/ProposalSource"
        },
        "stage": {
          "minLength": 1,
          "title": "Stage",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/ProposalStatus"
        },
        "statusHistory": {
          "items": {
            "$ref": "#/definitions/ProposalStatusHistory"
          },
          "type": "array"
        },
        "statusLastUpdatedBy": {
          "$ref": "#/definitions/PublicUser"
        },
        "subStage": {
          "minLength": 1,
          "readOnly": true,
          "title": "Sub stage",
          "type": "string"
        },
        "suitability": {
          "readOnly": true,
          "title": "Suitability",
          "type": "integer"
        },
        "updatedAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated at",
          "type": "string"
        }
      },
      "required": [
        "status",
        "statusHistory",
        "clientName",
        "stage"
      ],
      "type": "object"
    },
    "ProposalCandidate": {
      "properties": {
        "activator": {
          "title": "Activator",
          "type": "integer",
          "x-nullable": true
        },
        "address": {
          "minLength": 1,
          "readOnly": true,
          "title": "Address",
          "type": "string"
        },
        "age": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Age",
          "type": "integer",
          "x-nullable": true
        },
        "archived": {
          "readOnly": true,
          "title": "Archived",
          "type": "boolean"
        },
        "birthdate": {
          "format": "date",
          "title": "Birthdate",
          "type": "string",
          "x-nullable": true
        },
        "certifications": {
          "items": {
            "$ref": "#/definitions/CandidateCertification"
          },
          "type": "array"
        },
        "clientBrief": {
          "title": "Client brief",
          "type": "string"
        },
        "clientExpertise": {
          "title": "Client expertise",
          "type": "string"
        },
        "companiesAlreadyAppliedTo": {
          "title": "Companies already applied to",
          "type": "string"
        },
        "companiesAppliedTo": {
          "title": "Companies applied to",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created at",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/OrgMember"
        },
        "currentCity": {
          "maxLength": 128,
          "title": "Current city",
          "type": "string"
        },
        "currentCompany": {
          "maxLength": 128,
          "title": "Current company",
          "type": "string"
        },
        "currentCountry": {
          "enum": [
            "af",
            "al",
            "dz",
            "ad",
            "ao",
            "ag",
            "ar",
            "am",
            "au",
            "at",
            "az",
            "bs",
            "bh",
            "bd",
            "bb",
            "by",
            "be",
            "bz",
            "bj",
            "bt",
            "bo",
            "ba",
            "bw",
            "br",
            "bn",
            "bg",
            "bf",
            "bi",
            "cv",
            "kh",
            "cm",
            "ca",
            "cf",
            "td",
            "cl",
            "cn",
            "co",
            "km",
            "cg",
            "cd",
            "cr",
            "ci",
            "hr",
            "cu",
            "cy",
            "cz",
            "dk",
            "dj",
            "dm",
            "do",
            "ec",
            "eg",
            "sv",
            "gq",
            "er",
            "ee",
            "sz",
            "et",
            "fj",
            "fi",
            "fr",
            "ga",
            "gm",
            "ge",
            "de",
            "gh",
            "gr",
            "gd",
            "gt",
            "gn",
            "gw",
            "gy",
            "ht",
            "hn",
            "hu",
            "is",
            "in",
            "id",
            "ir",
            "iq",
            "ie",
            "il",
            "it",
            "jm",
            "jp",
            "jo",
            "kz",
            "ke",
            "ki",
            "kp",
            "kr",
            "kw",
            "kg",
            "la",
            "lv",
            "lb",
            "ls",
            "lr",
            "ly",
            "li",
            "lt",
            "lu",
            "mg",
            "mw",
            "my",
            "mv",
            "ml",
            "mt",
            "mh",
            "mr",
            "mu",
            "mx",
            "fm",
            "md",
            "mc",
            "mn",
            "me",
            "ma",
            "mz",
            "mm",
            "na",
            "nr",
            "np",
            "nl",
            "nz",
            "ni",
            "ne",
            "ng",
            "mk",
            "no",
            "om",
            "pk",
            "pw",
            "pa",
            "pg",
            "py",
            "pe",
            "ph",
            "pl",
            "pt",
            "qa",
            "ro",
            "ru",
            "rw",
            "kn",
            "lc",
            "vc",
            "ws",
            "sm",
            "st",
            "sa",
            "sn",
            "rs",
            "sc",
            "sl",
            "sg",
            "sk",
            "si",
            "sb",
            "so",
            "za",
            "ss",
            "es",
            "lk",
            "sd",
            "sr",
            "se",
            "ch",
            "sy",
            "tj",
            "tz",
            "th",
            "tl",
            "tg",
            "to",
            "tt",
            "tn",
            "tr",
            "tm",
            "tv",
            "ug",
            "ua",
            "ae",
            "gb",
            "us",
            "uy",
            "uz",
            "vu",
            "ve",
            "vn",
            "ye",
            "zm",
            "zw"
          ],
          "title": "Current country",
          "type": "string"
        },
        "currentPosition": {
          "maxLength": 256,
          "title": "Current position",
          "type": "string"
        },
        "currentPostalCode": {
          "maxLength": 128,
          "title": "Current postal code",
          "type": "string"
        },
        "currentPrefecture": {
          "maxLength": 128,
          "title": "Current prefecture",
          "type": "string"
        },
        "currentSalary": {
          "format": "decimal",
          "title": "Current salary",
          "type": "string",
          "x-nullable": true
        },
        "currentSalaryBreakdown": {
          "title": "Current salary breakdown",
          "type": "string"
        },
        "currentSalaryCurrency": {
          "minLength": 1,
          "readOnly": true,
          "title": "Current salary currency",
          "type": "string"
        },
        "currentSalaryVariable": {
          "format": "decimal",
          "title": "Current salary variable",
          "type": "string",
          "x-nullable": true
        },
        "currentStreet": {
          "maxLength": 128,
          "title": "Current street",
          "type": "string"
        },
        "cvJa": {
          "format": "uri",
          "readOnly": true,
          "title": "Cv ja",
          "type": "string"
        },
        "cvJaThumbnail": {
          "format": "uri",
          "readOnly": true,
          "title": "Cv ja thumbnail",
          "type": "string"
        },
        "department": {
          "title": "Department",
          "type": "string"
        },
        "educationDetails": {
          "items": {
            "$ref": "#/definitions/EducationDetail"
          },
          "type": "array"
        },
        "email": {
          "format": "email",
          "maxLength": 254,
          "title": "Email",
          "type": "string"
        },
        "employmentStatus": {
          "enum": [
            "notemployed",
            "fulltime",
            "fixedterm",
            "temporary",
            "businessowner",
            "dispatched",
            "freelance"
          ],
          "title": "Employment status",
          "type": "string"
        },
        "expectationsDetails": {
          "title": "Expectations details",
          "type": "string"
        },
        "experienceDetails": {
          "items": {
            "$ref": "#/definitions/ExperienceDetail"
          },
          "type": "array"
        },
        "firstName": {
          "maxLength": 128,
          "title": "First name",
          "type": "string"
        },
        "firstNameKanji": {
          "maxLength": 128,
          "title": "First name kanji",
          "type": "string"
        },
        "firstNameKatakana": {
          "maxLength": 128,
          "title": "First name katakana",
          "type": "string"
        },
        "fulltime": {
          "title": "Fulltime",
          "type": "boolean"
        },
        "gender": {
          "enum": [
            "male",
            "female",
            "other"
          ],
          "title": "Gender",
          "type": "string"
        },
        "githubUrl": {
          "format": "uri",
          "maxLength": 200,
          "title": "Github url",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "industry": {
          "enum": [
            "architecture_and_construction",
            "automobile_or_aviation_and_aerospace",
            "banking_and_financial_services",
            "consulting",
            "education_or_training_or_coaching",
            "electronic_goods",
            "energy_and_natural_resources",
            "fintech",
            "food_and_beverage_or_fmcg",
            "hardware",
            "healthcare_or_pharmaceutical_or_life_sciences",
            "it_or_technology_or__digital_and_telecom",
            "insurance",
            "legal_and_compliance",
            "leisure_or_hospitality_or_restaurants_or_travel_and_tourism",
            "manufacturing_or_industrial",
            "media_or_art_and_entertaiment_or_communication_or_agency",
            "public_sector",
            "real_estate_or_property_and_construction",
            "recruitment",
            "retail_or_fashion_or_luxury_or_consumer_goods",
            "services",
            "software",
            "transportation_or_shipping_or_logistics"
          ],
          "title": "Industry",
          "type": "string"
        },
        "isClientContact": {
          "title": "Is client contact",
          "type": "boolean"
        },
        "isMet": {
          "title": "Is met",
          "type": "boolean"
        },
        "isMissingRequiredFields": {
          "readOnly": true,
          "title": "Is missing required fields",
          "type": "string"
        },
        "jobChangeUrgency": {
          "enum": [
            "urgent",
            "actively_looking",
            "passively_looking",
            "not_looking"
          ],
          "title": "Job change urgency",
          "type": "string"
        },
        "languages": {
          "items": {
            "$ref": "#/definitions/Language"
          },
          "type": "array"
        },
        "lastName": {
          "maxLength": 128,
          "title": "Last name",
          "type": "string"
        },
        "lastNameKanji": {
          "maxLength": 128,
          "title": "Last name kanji",
          "type": "string"
        },
        "lastNameKatakana": {
          "maxLength": 128,
          "title": "Last name katakana",
          "type": "string"
        },
        "leadConsultant": {
          "title": "Lead consultant",
          "type": "integer",
          "x-nullable": true
        },
        "linkedinData": {
          "description": "Return linkedin data if User has permission.",
          "readOnly": true,
          "title": "Linkedin data",
          "type": "object"
        },
        "linkedinUrl": {
          "format": "uri",
          "title": "Linkedin url",
          "type": "string"
        },
        "local": {
          "title": "Local",
          "type": "boolean"
        },
        "maxNumPeopleManaged": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Max num people managed",
          "type": "integer",
          "x-nullable": true
        },
        "middleName": {
          "maxLength": 128,
          "title": "Middle name",
          "type": "string"
        },
        "mobileCollect": {
          "title": "Mobile collect",
          "type": "integer",
          "x-nullable": true
        },
        "name": {
          "readOnly": true,
          "title": "Name",
          "type": "string"
        },
        "nameCollect": {
          "title": "Name collect",
          "type": "integer",
          "x-nullable": true
        },
        "nameJa": {
          "readOnly": true,
          "title": "Name ja",
          "type": "string"
        },
        "nationality": {
          "maxLength": 128,
          "title": "Nationality",
          "type": "string"
        },
        "note": {
          "readOnly": true,
          "title": "Note",
          "type": "string"
        },
        "noticePeriod": {
          "enum": [
            "immediate",
            "two_weeks",
            "one_month",
            "two_months",
            "three_months"
          ],
          "title": "Notice period",
          "type": "string"
        },
        "original": {
          "title": "Original",
          "type": "integer",
          "x-nullable": true
        },
        "otherDesiredBenefits": {
          "items": {
            "enum": [
              "sign_on_bonus",
              "relocation",
              "holidays",
              "schooling",
              "company_car",
              "training",
              "housing",
              "equity",
              "tax_equalization",
              "special_insurance",
              "other"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "otherDesiredBenefitsOthersDetail": {
          "maxLength": 128,
          "title": "Other desired benefits others detail",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "type": "integer",
          "x-nullable": true
        },
        "parttime": {
          "title": "Parttime",
          "type": "boolean"
        },
        "phone": {
          "title": "Phone",
          "type": "string"
        },
        "photo": {
          "format": "uri",
          "readOnly": true,
          "title": "Photo",
          "type": "string"
        },
        "placementApprovedAt": {
          "format": "date",
          "readOnly": true,
          "title": "Placement approved at",
          "type": "string"
        },
        "platform": {
          "enum": [
            "linkedin",
            "facebook",
            "biz_reach",
            "github",
            "careercross",
            "corporate_site",
            "other"
          ],
          "title": "Platform",
          "type": "string"
        },
        "platformOtherDetails": {
          "maxLength": 128,
          "title": "Platform other details",
          "type": "string"
        },
        "potentialLocations": {
          "maxLength": 256,
          "title": "Potential locations",
          "type": "string"
        },
        "proposals": {
          "items": {
            "$ref": "#/definitions/CandidateProposal"
          },
          "readOnly": true,
          "type": "array"
        },
        "proposed": {
          "description": "Return True if was proposed to job passed via parameter.",
          "readOnly": true,
          "title": "Proposed",
          "type": "boolean"
        },
        "proposedToJob": {
          "title": "Proposed to job",
          "type": "boolean"
        },
        "pullFactors": {
          "title": "Pull factors",
          "type": "string"
        },
        "pushFactors": {
          "title": "Push factors",
          "type": "string"
        },
        "reasonForJobChanges": {
          "title": "Reason for job changes",
          "type": "string"
        },
        "referredBy": {
          "title": "Referred by",
          "type": "integer",
          "x-nullable": true
        },
        "remote": {
          "title": "Remote",
          "type": "boolean"
        },
        "resume": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume",
          "type": "string"
        },
        "resumeJa": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume ja",
          "type": "string"
        },
        "resumeJaThumbnail": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume ja thumbnail",
          "type": "string"
        },
        "resumeThumbnail": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume thumbnail",
          "type": "string"
        },
        "salary": {
          "format": "decimal",
          "title": "Salary",
          "type": "string",
          "x-nullable": true
        },
        "salaryCurrency": {
          "minLength": 1,
          "readOnly": true,
          "title": "Salary currency",
          "type": "string"
        },
        "secondaryEmail": {
          "format": "email",
          "title": "Secondary email",
          "type": "string"
        },
        "secondaryPhone": {
          "title": "Secondary phone",
          "type": "string"
        },
        "skillDomain": {
          "title": "Skill domain",
          "type": "integer",
          "x-nullable": true
        },
        "source": {
          "maxLength": 128,
          "title": "Source",
          "type": "string"
        },
        "sourceDetails": {
          "maxLength": 128,
          "title": "Source details",
          "type": "string"
        },
        "summary": {
          "title": "Summary",
          "type": "string"
        },
        "supportConsultant": {
          "title": "Support consultant",
          "type": "integer",
          "x-nullable": true
        },
        "tags": {
          "items": {
            "$ref": "#/definitions/CandidateTag"
          },
          "type": "array"
        },
        "taxEqualization": {
          "title": "Tax equalization",
          "type": "boolean",
          "x-nullable": true
        },
        "totalAnnualSalary": {
          "minLength": 1,
          "readOnly": true,
          "title": "Total annual salary",
          "type": "string"
        },
        "twitterUrl": {
          "format": "uri",
          "maxLength": 200,
          "title": "Twitter url",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated at",
          "type": "string"
        },
        "updatedBy": {
          "$ref": "#/definitions/OrgMember"
        },
        "websiteUrl": {
          "format": "uri",
          "maxLength": 200,
          "title": "Website url",
          "type": "string"
        },
        "zohoId": {
          "minLength": 1,
          "readOnly": true,
          "title": "Zoho id",
          "type": "string"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object"
    },
    "NoteActivity": {
      "properties": {
        "author": {
          "readOnly": true,
          "title": "Author",
          "type": "integer"
        },
        "candidate": {
          "title": "Candidate",
          "type": "integer"
        },
        "content": {
          "title": "Content",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created at",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "job": {
          "title": "Job",
          "type": "integer"
        },
        "proposal": {
          "title": "Proposal",
          "type": "integer"
        },
        "updatedAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated at",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Notification": {
      "properties": {
        "author": {
          "readOnly": true,
          "title": "Author",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created at",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "proposal": {
          "title": "Proposal",
          "type": "integer"
        },
        "system": {
          "readOnly": true,
          "title": "System",
          "type": "boolean"
        },
        "text": {
          "minLength": 1,
          "title": "Text",
          "type": "string"
        }
      },
      "required": [
        "proposal",
        "text"
      ],
      "type": "object"
    },
    "ProposalInterview": {
      "properties": {
        "assessment": {
          "$ref": "#/definitions/ProposalInterviewAssessment"
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "endAt": {
          "format": "date-time",
          "title": "End at",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "interviewType": {
          "enum": [
            "assignment",
            "technical_fit",
            "cultural_fit",
            "general",
            "cross_team"
          ],
          "title": "Interview type",
          "type": "string"
        },
        "interviewer": {
          "$ref": "#/definitions/OrgMember"
        },
        "invited": {
          "items": {
            "$ref": "#/definitions/_InvitedUser"
          },
          "type": "array"
        },
        "isCurrentInterview": {
          "readOnly": true,
          "title": "Is current interview",
          "type": "string"
        },
        "notes": {
          "title": "Notes",
          "type": "string"
        },
        "order": {
          "readOnly": true,
          "title": "Order",
          "type": "integer"
        },
        "preScheduleMsg": {
          "title": "Pre schedule msg",
          "type": "string"
        },
        "proposal": {
          "title": "Proposal",
          "type": "integer"
        },
        "schedules": {
          "items": {
            "$ref": "#/definitions/ProposalInterviewSchedule"
          },
          "readOnly": true,
          "type": "array"
        },
        "schedulingType": {
          "minLength": 1,
          "title": "Scheduling type",
          "type": "string"
        },
        "startAt": {
          "format": "date-time",
          "title": "Start at",
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "enum": [
            "to_be_scheduled",
            "pending",
            "scheduled",
            "rejected",
            "canceled",
            "skipped"
          ],
          "title": "Status",
          "type": "string"
        },
        "statusDisplay": {
          "minLength": 1,
          "title": "Status display",
          "type": "string"
        },
        "timeslots": {
          "items": {
            "$ref": "#/definitions/ProposalInterviewScheduleTimeSlot"
          },
          "type": "array"
        }
      },
      "required": [
        "proposal"
      ],
      "type": "object"
    },
    "ProposalInterviewAssessment": {
      "properties": {
        "decision": {
          "enum": [
            "proceed",
            "keep",
            "reject"
          ],
          "title": "Decision",
          "type": "string"
        },
        "decisionDisplay": {
          "minLength": 1,
          "readOnly": true,
          "title": "Decision display",
          "type": "string"
        },
        "hiringCriteriaAssessment": {
          "items": {
            "$ref": "#/definitions/HiringCriterionAssessment"
          },
          "type": "array"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "notes": {
          "title": "Notes",
          "type": "string"
        }
      },
      "required": [
        "decision"
      ],
      "type": "object"
    },
    "ProposalInterviewPublic": {
      "properties": {
        "candidateName": {
          "minLength": 1,
          "readOnly": true,
          "title": "Candidate name",
          "type": "string"
        },
        "chosenTimeslot": {
          "title": "Chosen timeslot",
          "type": "integer"
        },
        "endAt": {
          "format": "date-time",
          "title": "End at",
          "type": "string",
          "x-nullable": true
        },
        "inviter": {
          "readOnly": true,
          "title": "Inviter",
          "type": "string"
        },
        "isRejected": {
          "title": "Is rejected",
          "type": "boolean"
        },
        "job": {
          "$ref": "#/definitions/_Job"
        },
        "notes": {
          "title": "Notes",
          "type": "string"
        },
        "preScheduleMsg": {
          "readOnly": true,
          "title": "Pre schedule msg",
          "type": "string"
        },
        "startAt": {
          "format": "date-time",
          "title": "Start at",
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "enum": [
            "to_be_scheduled",
            "pending",
            "scheduled",
            "rejected",
            "canceled",
            "skipped"
          ],
          "title": "Status",
          "type": "string"
        },
        "timeslots": {
          "items": {
            "$ref": "#/definitions/ProposalInterviewScheduleTimeSlot"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ProposalInterviewSchedule": {
      "properties": {
        "creatorTimezone": {
          "enum": [
            "Africa/Abidjan",
            "Africa/Accra",
            "Africa/Addis_Ababa",
            "Africa/Algiers",
            "Africa/Asmara",
            "Africa/Asmera",
            "Africa/Bamako",
            "Africa/Bangui",
            "Africa/Banjul",
            "Africa/Bissau",
            "Africa/Blantyre",
            "Africa/Brazzaville",
            "Africa/Bujumbura",
            "Africa/Cairo",
            "Africa/Casablanca",
            "Africa/Ceuta",
            "Africa/Conakry",
            "Africa/Dakar",
            "Africa/Dar_es_Salaam",
            "Africa/Djibouti",
            "Africa/Douala",
            "Africa/El_Aaiun",
            "Africa/Freetown",
            "Africa/Gaborone",
            "Africa/Harare",
            "Africa/Johannesburg",
            "Africa/Juba",
            "Africa/Kampala",
            "Africa/Khartoum",
            "Africa/Kigali",
            "Africa/Kinshasa",
            "Africa/Lagos",
            "Africa/Libreville",
            "Africa/Lome",
            "Africa/Luanda",
            "Africa/Lubumbashi",
            "Africa/Lusaka",
            "Africa/Malabo",
            "Africa/Maputo",
            "Africa/Maseru",
            "Africa/Mbabane",
            "Africa/Mogadishu",
            "Africa/Monrovia",
            "Africa/Nairobi",
            "Africa/Ndjamena",
            "Africa/Niamey",
            "Africa/Nouakchott",
            "Africa/Ouagadougou",
            "Africa/Porto-Novo",
            "Africa/Sao_Tome",
            "Africa/Timbuktu",
            "Africa/Tripoli",
            "Africa/Tunis",
            "Africa/Windhoek",
            "America/Adak",
            "America/Anchorage",
            "America/Anguilla",
            "America/Antigua",
            "America/Araguaina",
            "America/Argentina/Buenos_Aires",
            "America/Argentina/Catamarca",
            "America/Argentina/ComodRivadavia",
            "America/Argentina/Cordoba",
            "America/Argentina/Jujuy",
            "America/Argentina/La_Rioja",
            "America/Argentina/Mendoza",
            "America/Argentina/Rio_Gallegos",
            "America/Argentina/Salta",
            "America/Argentina/San_Juan",
            "America/Argentina/San_Luis",
            "America/Argentina/Tucuman",
            "America/Argentina/Ushuaia",
            "America/Aruba",
            "America/Asuncion",
            "America/Atikokan",
            "America/Atka",
            "America/Bahia",
            "America/Bahia_Banderas",
            "America/Barbados",
            "America/Belem",
            "America/Belize",
            "America/Blanc-Sablon",
            "America/Boa_Vista",
            "America/Bogota",
            "America/Boise",
            "America/Buenos_Aires",
            "America/Cambridge_Bay",
            "America/Campo_Grande",
            "America/Cancun",
            "America/Caracas",
            "America/Catamarca",
            "America/Cayenne",
            "America/Cayman",
            "America/Chicago",
            "America/Chihuahua",
            "America/Coral_Harbour",
            "America/Cordoba",
            "America/Costa_Rica",
            "America/Creston",
            "America/Cuiaba",
            "America/Curacao",
            "America/Danmarkshavn",
            "America/Dawson",
            "America/Dawson_Creek",
            "America/Denver",
            "America/Detroit",
            "America/Dominica",
            "America/Edmonton",
            "America/Eirunepe",
            "America/El_Salvador",
            "America/Ensenada",
            "America/Fort_Nelson",
            "America/Fort_Wayne",
            "America/Fortaleza",
            "America/Glace_Bay",
            "America/Godthab",
            "America/Goose_Bay",
            "America/Grand_Turk",
            "America/Grenada",
            "America/Guadeloupe",
            "America/Guatemala",
            "America/Guayaquil",
            "America/Guyana",
            "America/Halifax",
            "America/Havana",
            "America/Hermosillo",
            "America/Indiana/Indianapolis",
            "America/Indiana/Knox",
            "America/Indiana/Marengo",
            "America/Indiana/Petersburg",
            "America/Indiana/Tell_City",
            "America/Indiana/Vevay",
            "America/Indiana/Vincennes",
            "America/Indiana/Winamac",
            "America/Indianapolis",
            "America/Inuvik",
            "America/Iqaluit",
            "America/Jamaica",
            "America/Jujuy",
            "America/Juneau",
            "America/Kentucky/Louisville",
            "America/Kentucky/Monticello",
            "America/Knox_IN",
            "America/Kralendijk",
            "America/La_Paz",
            "America/Lima",
            "America/Los_Angeles",
            "America/Louisville",
            "America/Lower_Princes",
            "America/Maceio",
            "America/Managua",
            "America/Manaus",
            "America/Marigot",
            "America/Martinique",
            "America/Matamoros",
            "America/Mazatlan",
            "America/Mendoza",
            "America/Menominee",
            "America/Merida",
            "America/Metlakatla",
            "America/Mexico_City",
            "America/Miquelon",
            "America/Moncton",
            "America/Monterrey",
            "America/Montevideo",
            "America/Montreal",
            "America/Montserrat",
            "America/Nassau",
            "America/New_York",
            "America/Nipigon",
            "America/Nome",
            "America/Noronha",
            "America/North_Dakota/Beulah",
            "America/North_Dakota/Center",
            "America/North_Dakota/New_Salem",
            "America/Nuuk",
            "America/Ojinaga",
            "America/Panama",
            "America/Pangnirtung",
            "America/Paramaribo",
            "America/Phoenix",
            "America/Port-au-Prince",
            "America/Port_of_Spain",
            "America/Porto_Acre",
            "America/Porto_Velho",
            "America/Puerto_Rico",
            "America/Punta_Arenas",
            "America/Rainy_River",
            "America/Rankin_Inlet",
            "America/Recife",
            "America/Regina",
            "America/Resolute",
            "America/Rio_Branco",
            "America/Rosario",
            "America/Santa_Isabel",
            "America/Santarem",
            "America/Santiago",
            "America/Santo_Domingo",
            "America/Sao_Paulo",
            "America/Scoresbysund",
            "America/Shiprock",
            "America/Sitka",
            "America/St_Barthelemy",
            "America/St_Johns",
            "America/St_Kitts",
            "America/St_Lucia",
            "America/St_Thomas",
            "America/St_Vincent",
            "America/Swift_Current",
            "America/Tegucigalpa",
            "America/Thule",
            "America/Thunder_Bay",
            "America/Tijuana",
            "America/Toronto",
            "America/Tortola",
            "America/Vancouver",
            "America/Virgin",
            "America/Whitehorse",
            "America/Winnipeg",
            "America/Yakutat",
            "America/Yellowknife",
            "Antarctica/Casey",
            "Antarctica/Davis",
            "Antarctica/DumontDUrville",
            "Antarctica/Macquarie",
            "Antarctica/Mawson",
            "Antarctica/McMurdo",
            "Antarctica/Palmer",
            "Antarctica/Rothera",
            "Antarctica/South_Pole",
            "Antarctica/Syowa",
            "Antarctica/Troll",
            "Antarctica/Vostok",
            "Arctic/Longyearbyen",
            "Asia/Aden",
            "Asia/Almaty",
            "Asia/Amman",
            "Asia/Anadyr",
            "Asia/Aqtau",
            "Asia/Aqtobe",
            "Asia/Ashgabat",
            "Asia/Ashkhabad",
            "Asia/Atyrau",
            "Asia/Baghdad",
            "Asia/Bahrain",
            "Asia/Baku",
            "Asia/Bangkok",
            "Asia/Barnaul",
            "Asia/Beirut",
            "Asia/Bishkek",
            "Asia/Brunei",
            "Asia/Calcutta",
            "Asia/Chita",
            "Asia/Choibalsan",
            "Asia/Chongqing",
            "Asia/Chungking",
            "Asia/Colombo",
            "Asia/Dacca",
            "Asia/Damascus",
            "Asia/Dhaka",
            "Asia/Dili",
            "Asia/Dubai",
            "Asia/Dushanbe",
            "Asia/Famagusta",
            "Asia/Gaza",
            "Asia/Harbin",
            "Asia/Hebron",
            "Asia/Ho_Chi_Minh",
            "Asia/Hong_Kong",
            "Asia/Hovd",
            "Asia/Irkutsk",
            "Asia/Istanbul",
            "Asia/Jakarta",
            "Asia/Jayapura",
            "Asia/Jerusalem",
            "Asia/Kabul",
            "Asia/Kamchatka",
            "Asia/Karachi",
            "Asia/Kashgar",
            "Asia/Kathmandu",
            "Asia/Katmandu",
            "Asia/Khandyga",
            "Asia/Kolkata",
            "Asia/Krasnoyarsk",
            "Asia/Kuala_Lumpur",
            "Asia/Kuching",
            "Asia/Kuwait",
            "Asia/Macao",
            "Asia/Macau",
            "Asia/Magadan",
            "Asia/Makassar",
            "Asia/Manila",
            "Asia/Muscat",
            "Asia/Nicosia",
            "Asia/Novokuznetsk",
            "Asia/Novosibirsk",
            "Asia/Omsk",
            "Asia/Oral",
            "Asia/Phnom_Penh",
            "Asia/Pontianak",
            "Asia/Pyongyang",
            "Asia/Qatar",
            "Asia/Qostanay",
            "Asia/Qyzylorda",
            "Asia/Rangoon",
            "Asia/Riyadh",
            "Asia/Saigon",
            "Asia/Sakhalin",
            "Asia/Samarkand",
            "Asia/Seoul",
            "Asia/Shanghai",
            "Asia/Singapore",
            "Asia/Srednekolymsk",
            "Asia/Taipei",
            "Asia/Tashkent",
            "Asia/Tbilisi",
            "Asia/Tehran",
            "Asia/Tel_Aviv",
            "Asia/Thimbu",
            "Asia/Thimphu",
            "Asia/Tokyo",
            "Asia/Tomsk",
            "Asia/Ujung_Pandang",
            "Asia/Ulaanbaatar",
            "Asia/Ulan_Bator",
            "Asia/Urumqi",
            "Asia/Ust-Nera",
            "Asia/Vientiane",
            "Asia/Vladivostok",
            "Asia/Yakutsk",
            "Asia/Yangon",
            "Asia/Yekaterinburg",
            "Asia/Yerevan",
            "Atlantic/Azores",
            "Atlantic/Bermuda",
            "Atlantic/Canary",
            "Atlantic/Cape_Verde",
            "Atlantic/Faeroe",
            "Atlantic/Faroe",
            "Atlantic/Jan_Mayen",
            "Atlantic/Madeira",
            "Atlantic/Reykjavik",
            "Atlantic/South_Georgia",
            "Atlantic/St_Helena",
            "Atlantic/Stanley",
            "Australia/ACT",
            "Australia/Adelaide",
            "Australia/Brisbane",
            "Australia/Broken_Hill",
            "Australia/Canberra",
            "Australia/Currie",
            "Australia/Darwin",
            "Australia/Eucla",
            "Australia/Hobart",
            "Australia/LHI",
            "Australia/Lindeman",
            "Australia/Lord_Howe",
            "Australia/Melbourne",
            "Australia/NSW",
            "Australia/North",
            "Australia/Perth",
            "Australia/Queensland",
            "Australia/South",
            "Australia/Sydney",
            "Australia/Tasmania",
            "Australia/Victoria",
            "Australia/West",
            "Australia/Yancowinna",
            "Brazil/Acre",
            "Brazil/DeNoronha",
            "Brazil/East",
            "Brazil/West",
            "CET",
            "CST6CDT",
            "Canada/Atlantic",
            "Canada/Central",
            "Canada/Eastern",
            "Canada/Mountain",
            "Canada/Newfoundland",
            "Canada/Pacific",
            "Canada/Saskatchewan",
            "Canada/Yukon",
            "Chile/Continental",
            "Chile/EasterIsland",
            "Cuba",
            "EET",
            "EST",
            "EST5EDT",
            "Egypt",
            "Eire",
            "Etc/GMT",
            "Etc/GMT+0",
            "Etc/GMT+1",
            "Etc/GMT+10",
            "Etc/GMT+11",
            "Etc/GMT+12",
            "Etc/GMT+2",
            "Etc/GMT+3",
            "Etc/GMT+4",
            "Etc/GMT+5",
            "Etc/GMT+6",
            "Etc/GMT+7",
            "Etc/GMT+8",
            "Etc/GMT+9",
            "Etc/GMT-0",
            "Etc/GMT-1",
            "Etc/GMT-10",
            "Etc/GMT-11",
            "Etc/GMT-12",
            "Etc/GMT-13",
            "Etc/GMT-14",
            "Etc/GMT-2",
            "Etc/GMT-3",
            "Etc/GMT-4",
            "Etc/GMT-5",
            "Etc/GMT-6",
            "Etc/GMT-7",
            "Etc/GMT-8",
            "Etc/GMT-9",
            "Etc/GMT0",
            "Etc/Greenwich",
            "Etc/UCT",
            "Etc/UTC",
            "Etc/Universal",
            "Etc/Zulu",
            "Europe/Amsterdam",
            "Europe/Andorra",
            "Europe/Astrakhan",
            "Europe/Athens",
            "Europe/Belfast",
            "Europe/Belgrade",
            "Europe/Berlin",
            "Europe/Bratislava",
            "Europe/Brussels",
            "Europe/Bucharest",
            "Europe/Budapest",
            "Europe/Busingen",
            "Europe/Chisinau",
            "Europe/Copenhagen",
            "Europe/Dublin",
            "Europe/Gibraltar",
            "Europe/Guernsey",
            "Europe/Helsinki",
            "Europe/Isle_of_Man",
            "Europe/Istanbul",
            "Europe/Jersey",
            "Europe/Kaliningrad",
            "Europe/Kiev",
            "Europe/Kirov",
            "Europe/Lisbon",
            "Europe/Ljubljana",
            "Europe/London",
            "Europe/Luxembourg",
            "Europe/Madrid",
            "Europe/Malta",
            "Europe/Mariehamn",
            "Europe/Minsk",
            "Europe/Monaco",
            "Europe/Moscow",
            "Europe/Nicosia",
            "Europe/Oslo",
            "Europe/Paris",
            "Europe/Podgorica",
            "Europe/Prague",
            "Europe/Riga",
            "Europe/Rome",
            "Europe/Samara",
            "Europe/San_Marino",
            "Europe/Sarajevo",
            "Europe/Saratov",
            "Europe/Simferopol",
            "Europe/Skopje",
            "Europe/Sofia",
            "Europe/Stockholm",
            "Europe/Tallinn",
            "Europe/Tirane",
            "Europe/Tiraspol",
            "Europe/Ulyanovsk",
            "Europe/Uzhgorod",
            "Europe/Vaduz",
            "Europe/Vatican",
            "Europe/Vienna",
            "Europe/Vilnius",
            "Europe/Volgograd",
            "Europe/Warsaw",
            "Europe/Zagreb",
            "Europe/Zaporozhye",
            "Europe/Zurich",
            "GB",
            "GB-Eire",
            "GMT",
            "GMT+0",
            "GMT-0",
            "GMT0",
            "Greenwich",
            "HST",
            "Hongkong",
            "Iceland",
            "Indian/Antananarivo",
            "Indian/Chagos",
            "Indian/Christmas",
            "Indian/Cocos",
            "Indian/Comoro",
            "Indian/Kerguelen",
            "Indian/Mahe",
            "Indian/Maldives",
            "Indian/Mauritius",
            "Indian/Mayotte",
            "Indian/Reunion",
            "Iran",
            "Israel",
            "Jamaica",
            "Japan",
            "Kwajalein",
            "Libya",
            "MET",
            "MST",
            "MST7MDT",
            "Mexico/BajaNorte",
            "Mexico/BajaSur",
            "Mexico/General",
            "NZ",
            "NZ-CHAT",
            "Navajo",
            "PRC",
            "PST8PDT",
            "Pacific/Apia",
            "Pacific/Auckland",
            "Pacific/Bougainville",
            "Pacific/Chatham",
            "Pacific/Chuuk",
            "Pacific/Easter",
            "Pacific/Efate",
            "Pacific/Enderbury",
            "Pacific/Fakaofo",
            "Pacific/Fiji",
            "Pacific/Funafuti",
            "Pacific/Galapagos",
            "Pacific/Gambier",
            "Pacific/Guadalcanal",
            "Pacific/Guam",
            "Pacific/Honolulu",
            "Pacific/Johnston",
            "Pacific/Kiritimati",
            "Pacific/Kosrae",
            "Pacific/Kwajalein",
            "Pacific/Majuro",
            "Pacific/Marquesas",
            "Pacific/Midway",
            "Pacific/Nauru",
            "Pacific/Niue",
            "Pacific/Norfolk",
            "Pacific/Noumea",
            "Pacific/Pago_Pago",
            "Pacific/Palau",
            "Pacific/Pitcairn",
            "Pacific/Pohnpei",
            "Pacific/Ponape",
            "Pacific/Port_Moresby",
            "Pacific/Rarotonga",
            "Pacific/Saipan",
            "Pacific/Samoa",
            "Pacific/Tahiti",
            "Pacific/Tarawa",
            "Pacific/Tongatapu",
            "Pacific/Truk",
            "Pacific/Wake",
            "Pacific/Wallis",
            "Pacific/Yap",
            "Poland",
            "Portugal",
            "ROC",
            "ROK",
            "Singapore",
            "Turkey",
            "UCT",
            "US/Alaska",
            "US/Aleutian",
            "US/Arizona",
            "US/Central",
            "US/East-Indiana",
            "US/Eastern",
            "US/Hawaii",
            "US/Indiana-Starke",
            "US/Michigan",
            "US/Mountain",
            "US/Pacific",
            "US/Samoa",
            "UTC",
            "Universal",
            "W-SU",
            "WET",
            "Zulu"
          ],
          "title": "Creator timezone",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "interview": {
          "title": "Interview",
          "type": "integer"
        },
        "timeslots": {
          "items": {
            "$ref": "#/definitions/ProposalInterviewScheduleTimeSlot"
          },
          "type": "array"
        }
      },
      "required": [
        "interview"
      ],
      "type": "object"
    },
    "ProposalInterviewScheduleTimeSlot": {
      "properties": {
        "endAt": {
          "format": "date-time",
          "title": "End at",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "startAt": {
          "format": "date-time",
          "title": "Start at",
          "type": "string"
        }
      },
      "required": [
        "startAt",
        "endAt"
      ],
      "type": "object"
    },
    "ProposalJob": {
      "properties": {
        "clientId": {
          "readOnly": true,
          "title": "Client id",
          "type": "string"
        },
        "clientName": {
          "minLength": 1,
          "readOnly": true,
          "title": "Client name",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "managers": {
          "items": {
            "$ref": "#/definitions/PublicUser"
          },
          "readOnly": true,
          "type": "array"
        },
        "orgId": {
          "readOnly": true,
          "title": "Org id",
          "type": "integer"
        },
        "orgType": {
          "minLength": 1,
          "readOnly": true,
          "title": "Org type",
          "type": "string"
        },
        "priority": {
          "readOnly": true,
          "title": "Priority",
          "type": "boolean"
        },
        "title": {
          "minLength": 1,
          "readOnly": true,
          "title": "Title",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProposalMoveBody": {
      "properties": {
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "job": {
          "title": "Job",
          "type": "integer"
        }
      },
      "required": [
        "job"
      ],
      "type": "object"
    },
    "ProposalQuestion": {
      "properties": {
        "answer": {
          "title": "Answer",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "text": {
          "minLength": 1,
          "readOnly": true,
          "title": "Text",
          "type": "string"
        }
      },
      "required": [
        "answer"
      ],
      "type": "object"
    },
    "ProposalSource": {
      "properties": {
        "id": {
          "title": "Id",
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "organizationType": {
          "description": "Return organization type if Client or Agency, otherwise None.",
          "minLength": 1,
          "readOnly": true,
          "title": "Organization type",
          "type": "string"
        }
      },
      "required": [
        "id",
        "name"
      ],
      "type": "object"
    },
    "ProposalStatus": {
      "properties": {
        "group": {
          "enum": [
            "associated_to_job",
            "applied_by_candidate",
            "suitable",
            "contacted",
            "qualified",
            "submitted_to_hiring_manager",
            "interviewing",
            "pending_hiring_decision",
            "offer_to_be_prepared",
            "pending_offer_acceptance",
            "pending_start",
            "started"
          ],
          "title": "Group",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "status": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "group",
        "status"
      ],
      "type": "object"
    },
    "ProposalStatusHistory": {
      "properties": {
        "changedAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Changed at",
          "type": "string"
        },
        "status": {
          "title": "Status",
          "type": "integer"
        }
      },
      "required": [
        "status"
      ],
      "type": "object"
    },
    "ProposalsSnapshot": {
      "properties": {
        "candidate": {
          "readOnly": true,
          "title": "Candidate",
          "type": "string"
        },
        "changedAt": {
          "readOnly": true,
          "title": "Changed at",
          "type": "string"
        },
        "proposal": {
          "title": "Proposal",
          "type": "integer"
        },
        "status": {
          "$ref": "#/definitions/ProposalStatus"
        }
      },
      "required": [
        "status",
        "proposal"
      ],
      "type": "object"
    },
    "PublicCandidate": {
      "properties": {
        "certifications": {
          "items": {
            "$ref": "#/definitions/CandidateCertification"
          },
          "type": "array"
        },
        "currentCompany": {
          "maxLength": 128,
          "title": "Current company",
          "type": "string"
        },
        "currentPosition": {
          "maxLength": 256,
          "title": "Current position",
          "type": "string"
        },
        "cvJa": {
          "format": "uri",
          "readOnly": true,
          "title": "Cv ja",
          "type": "string"
        },
        "cvJaThumbnail": {
          "format": "uri",
          "readOnly": true,
          "title": "Cv ja thumbnail",
          "type": "string"
        },
        "email": {
          "format": "email",
          "maxLength": 254,
          "minLength": 1,
          "title": "Email",
          "type": "string"
        },
        "firstName": {
          "maxLength": 128,
          "minLength": 1,
          "title": "First name",
          "type": "string"
        },
        "firstNameKanji": {
          "maxLength": 128,
          "title": "First name kanji",
          "type": "string"
        },
        "firstNameKatakana": {
          "maxLength": 128,
          "title": "First name katakana",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "languages": {
          "items": {
            "$ref": "#/definitions/Language"
          },
          "type": "array"
        },
        "lastName": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Last name",
          "type": "string"
        },
        "lastNameKanji": {
          "maxLength": 128,
          "title": "Last name kanji",
          "type": "string"
        },
        "lastNameKatakana": {
          "maxLength": 128,
          "title": "Last name katakana",
          "type": "string"
        },
        "linkedinUrl": {
          "format": "uri",
          "title": "Linkedin url",
          "type": "string"
        },
        "owner": {
          "readOnly": true,
          "title": "Owner",
          "type": "integer"
        },
        "phone": {
          "title": "Phone",
          "type": "string"
        },
        "resume": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume",
          "type": "string"
        },
        "resumeJa": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume ja",
          "type": "string"
        },
        "resumeJaThumbnail": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume ja thumbnail",
          "type": "string"
        },
        "resumeThumbnail": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume thumbnail",
          "type": "string"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "email"
      ],
      "type": "object"
    },
    "PublicCandidateFile": {
      "properties": {
        "candidate": {
          "title": "Candidate",
          "type": "integer"
        },
        "file": {
          "format": "uri",
          "readOnly": true,
          "title": "File",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "isShared": {
          "title": "Is shared",
          "type": "boolean"
        },
        "preview": {
          "format": "uri",
          "readOnly": true,
          "title": "Preview",
          "type": "string"
        },
        "thumbnail": {
          "format": "uri",
          "readOnly": true,
          "title": "Thumbnail",
          "type": "string"
        },
        "title": {
          "maxLength": 64,
          "title": "Title",
          "type": "string"
        }
      },
      "required": [
        "candidate"
      ],
      "type": "object"
    },
    "PublicCreateProposal": {
      "properties": {
        "candidate": {
          "$ref": "#/definitions/PublicCandidate"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "job": {
          "title": "Job",
          "type": "integer"
        },
        "posting": {
          "enum": [
            "private_posting",
            "career_site_posting"
          ],
          "title": "Posting",
          "type": "string"
        },
        "questions": {
          "items": {
            "$ref": "#/definitions/_QuestionAnswers"
          },
          "type": "array"
        },
        "token": {
          "minLength": 1,
          "title": "Token",
          "type": "string"
        }
      },
      "required": [
        "job",
        "candidate",
        "posting",
        "token"
      ],
      "type": "object"
    },
    "PublicUser": {
      "properties": {
        "firstName": {
          "maxLength": 30,
          "minLength": 1,
          "title": "First name",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "lastName": {
          "maxLength": 150,
          "minLength": 1,
          "title": "Last name",
          "type": "string"
        },
        "photo": {
          "format": "uri",
          "readOnly": true,
          "title": "Photo",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "firstName",
        "lastName"
      ],
      "type": "object"
    },
    "QuickActionRequest": {
      "properties": {
        "action": {
          "enum": [
            "change_status",
            "reject",
            "schedule",
            "resend",
            "assess",
            "proceed"
          ],
          "title": "Action",
          "type": "string"
        },
        "toStatus": {
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "title": "To status",
          "type": "object",
          "x-nullable": true
        }
      },
      "required": [
        "action"
      ],
      "type": "object"
    },
    "ReasonDeclineCandidateOption": {
      "properties": {
        "hasDescription": {
          "title": "Has description",
          "type": "boolean"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "text": {
          "maxLength": 255,
          "minLength": 1,
          "title": "Text",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "type": "object"
    },
    "ReasonNotInterestedOption": {
      "properties": {
        "hasDescription": {
          "title": "Has description",
          "type": "boolean"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "text": {
          "maxLength": 255,
          "minLength": 1,
          "title": "Text",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "type": "object"
    },
    "RecruiterRegistration": {
      "properties": {
        "country": {
          "enum": [
            "af",
            "al",
            "dz",
            "ad",
            "ao",
            "ag",
            "ar",
            "am",
            "au",
            "at",
            "az",
            "bs",
            "bh",
            "bd",
            "bb",
            "by",
            "be",
            "bz",
            "bj",
            "bt",
            "bo",
            "ba",
            "bw",
            "br",
            "bn",
            "bg",
            "bf",
            "bi",
            "cv",
            "kh",
            "cm",
            "ca",
            "cf",
            "td",
            "cl",
            "cn",
            "co",
            "km",
            "cg",
            "cd",
            "cr",
            "ci",
            "hr",
            "cu",
            "cy",
            "cz",
            "dk",
            "dj",
            "dm",
            "do",
            "ec",
            "eg",
            "sv",
            "gq",
            "er",
            "ee",
            "sz",
            "et",
            "fj",
            "fi",
            "fr",
            "ga",
            "gm",
            "ge",
            "de",
            "gh",
            "gr",
            "gd",
            "gt",
            "gn",
            "gw",
            "gy",
            "ht",
            "hn",
            "hu",
            "is",
            "in",
            "id",
            "ir",
            "iq",
            "ie",
            "il",
            "it",
            "jm",
            "jp",
            "jo",
            "kz",
            "ke",
            "ki",
            "kp",
            "kr",
            "kw",
            "kg",
            "la",
            "lv",
            "lb",
            "ls",
            "lr",
            "ly",
            "li",
            "lt",
            "lu",
            "mg",
            "mw",
            "my",
            "mv",
            "ml",
            "mt",
            "mh",
            "mr",
            "mu",
            "mx",
            "fm",
            "md",
            "mc",
            "mn",
            "me",
            "ma",
            "mz",
            "mm",
            "na",
            "nr",
            "np",
            "nl",
            "nz",
            "ni",
            "ne",
            "ng",
            "mk",
            "no",
            "om",
            "pk",
            "pw",
            "pa",
            "pg",
            "py",
            "pe",
            "ph",
            "pl",
            "pt",
            "qa",
            "ro",
            "ru",
            "rw",
            "kn",
            "lc",
            "vc",
            "ws",
            "sm",
            "st",
            "sa",
            "sn",
            "rs",
            "sc",
            "sl",
            "sg",
            "sk",
            "si",
            "sb",
            "so",
            "za",
            "ss",
            "es",
            "lk",
            "sd",
            "sr",
            "se",
            "ch",
            "sy",
            "tj",
            "tz",
            "th",
            "tl",
            "tg",
            "to",
            "tt",
            "tn",
            "tr",
            "tm",
            "tv",
            "ug",
            "ua",
            "ae",
            "gb",
            "us",
            "uy",
            "uz",
            "vu",
            "ve",
            "vn",
            "ye",
            "zm",
            "zw"
          ],
          "title": "Country",
          "type": "string"
        },
        "email": {
          "format": "email",
          "maxLength": 254,
          "minLength": 1,
          "title": "Email address",
          "type": "string"
        },
        "firstName": {
          "maxLength": 30,
          "minLength": 1,
          "title": "First name",
          "type": "string"
        },
        "lastName": {
          "maxLength": 150,
          "minLength": 1,
          "title": "Last name",
          "type": "string"
        },
        "password": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Password",
          "type": "string"
        },
        "termsOfService": {
          "title": "Terms of service",
          "type": "boolean"
        },
        "viaJob": {
          "format": "uuid",
          "title": "Via job",
          "type": "string"
        }
      },
      "required": [
        "email",
        "firstName",
        "lastName",
        "password",
        "termsOfService",
        "country"
      ],
      "type": "object"
    },
    "RegistrationCheckEmail": {
      "properties": {
        "email": {
          "format": "email",
          "minLength": 1,
          "title": "Email",
          "type": "string"
        },
        "type": {
          "enum": [
            "agency",
            "client"
          ],
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "type",
        "email"
      ],
      "type": "object"
    },
    "RetrieveStaff": {
      "properties": {
        "country": {
          "enum": [
            "af",
            "al",
            "dz",
            "ad",
            "ao",
            "ag",
            "ar",
            "am",
            "au",
            "at",
            "az",
            "bs",
            "bh",
            "bd",
            "bb",
            "by",
            "be",
            "bz",
            "bj",
            "bt",
            "bo",
            "ba",
            "bw",
            "br",
            "bn",
            "bg",
            "bf",
            "bi",
            "cv",
            "kh",
            "cm",
            "ca",
            "cf",
            "td",
            "cl",
            "cn",
            "co",
            "km",
            "cg",
            "cd",
            "cr",
            "ci",
            "hr",
            "cu",
            "cy",
            "cz",
            "dk",
            "dj",
            "dm",
            "do",
            "ec",
            "eg",
            "sv",
            "gq",
            "er",
            "ee",
            "sz",
            "et",
            "fj",
            "fi",
            "fr",
            "ga",
            "gm",
            "ge",
            "de",
            "gh",
            "gr",
            "gd",
            "gt",
            "gn",
            "gw",
            "gy",
            "ht",
            "hn",
            "hu",
            "is",
            "in",
            "id",
            "ir",
            "iq",
            "ie",
            "il",
            "it",
            "jm",
            "jp",
            "jo",
            "kz",
            "ke",
            "ki",
            "kp",
            "kr",
            "kw",
            "kg",
            "la",
            "lv",
            "lb",
            "ls",
            "lr",
            "ly",
            "li",
            "lt",
            "lu",
            "mg",
            "mw",
            "my",
            "mv",
            "ml",
            "mt",
            "mh",
            "mr",
            "mu",
            "mx",
            "fm",
            "md",
            "mc",
            "mn",
            "me",
            "ma",
            "mz",
            "mm",
            "na",
            "nr",
            "np",
            "nl",
            "nz",
            "ni",
            "ne",
            "ng",
            "mk",
            "no",
            "om",
            "pk",
            "pw",
            "pa",
            "pg",
            "py",
            "pe",
            "ph",
            "pl",
            "pt",
            "qa",
            "ro",
            "ru",
            "rw",
            "kn",
            "lc",
            "vc",
            "ws",
            "sm",
            "st",
            "sa",
            "sn",
            "rs",
            "sc",
            "sl",
            "sg",
            "sk",
            "si",
            "sb",
            "so",
            "za",
            "ss",
            "es",
            "lk",
            "sd",
            "sr",
            "se",
            "ch",
            "sy",
            "tj",
            "tz",
            "th",
            "tl",
            "tg",
            "to",
            "tt",
            "tn",
            "tr",
            "tm",
            "tv",
            "ug",
            "ua",
            "ae",
            "gb",
            "us",
            "uy",
            "uz",
            "vu",
            "ve",
            "vn",
            "ye",
            "zm",
            "zw"
          ],
          "title": "Country",
          "type": "string"
        },
        "dateJoined": {
          "format": "date-time",
          "title": "Date joined",
          "type": "string"
        },
        "email": {
          "format": "email",
          "maxLength": 254,
          "minLength": 1,
          "title": "Email address",
          "type": "string"
        },
        "firstName": {
          "maxLength": 30,
          "minLength": 1,
          "title": "First name",
          "type": "string"
        },
        "group": {
          "minLength": 1,
          "readOnly": true,
          "title": "Group",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "isActive": {
          "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
          "title": "Active",
          "type": "boolean"
        },
        "lastLogin": {
          "format": "date-time",
          "title": "Last login",
          "type": "string",
          "x-nullable": true
        },
        "lastName": {
          "maxLength": 150,
          "minLength": 1,
          "title": "Last name",
          "type": "string"
        },
        "locale": {
          "enum": [
            "en",
            "ja"
          ],
          "title": "Locale",
          "type": "string"
        },
        "photo": {
          "format": "uri",
          "readOnly": true,
          "title": "Photo",
          "type": "string"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "email"
      ],
      "type": "object"
    },
    "Staff": {
      "properties": {
        "email": {
          "format": "email",
          "maxLength": 254,
          "minLength": 1,
          "title": "Email address",
          "type": "string"
        },
        "firstName": {
          "maxLength": 30,
          "minLength": 1,
          "title": "First name",
          "type": "string"
        },
        "group": {
          "minLength": 1,
          "readOnly": true,
          "title": "Group",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "isActive": {
          "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
          "title": "Active",
          "type": "boolean"
        },
        "lastName": {
          "maxLength": 150,
          "minLength": 1,
          "title": "Last name",
          "type": "string"
        },
        "photo": {
          "format": "uri",
          "readOnly": true,
          "title": "Photo",
          "type": "string"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "email"
      ],
      "type": "object"
    },
    "StaffWithAvatar": {
      "properties": {
        "email": {
          "format": "email",
          "maxLength": 254,
          "minLength": 1,
          "title": "Email address",
          "type": "string"
        },
        "firstName": {
          "maxLength": 30,
          "minLength": 1,
          "title": "First name",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "isActive": {
          "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
          "title": "Active",
          "type": "boolean"
        },
        "lastName": {
          "maxLength": 150,
          "minLength": 1,
          "title": "Last name",
          "type": "string"
        },
        "photo": {
          "format": "uri",
          "readOnly": true,
          "title": "Photo",
          "type": "string"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "email"
      ],
      "type": "object"
    },
    "Tag": {
      "properties": {
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "name": {
          "maxLength": 64,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "Team": {
      "properties": {
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "readOnly": true,
          "title": "Name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateCandidateFile": {
      "properties": {
        "isShared": {
          "title": "Is shared",
          "type": "boolean"
        },
        "title": {
          "maxLength": 64,
          "title": "Title",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateJobFile": {
      "properties": {
        "title": {
          "maxLength": 64,
          "title": "Title",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateStaff": {
      "properties": {
        "country": {
          "enum": [
            "af",
            "al",
            "dz",
            "ad",
            "ao",
            "ag",
            "ar",
            "am",
            "au",
            "at",
            "az",
            "bs",
            "bh",
            "bd",
            "bb",
            "by",
            "be",
            "bz",
            "bj",
            "bt",
            "bo",
            "ba",
            "bw",
            "br",
            "bn",
            "bg",
            "bf",
            "bi",
            "cv",
            "kh",
            "cm",
            "ca",
            "cf",
            "td",
            "cl",
            "cn",
            "co",
            "km",
            "cg",
            "cd",
            "cr",
            "ci",
            "hr",
            "cu",
            "cy",
            "cz",
            "dk",
            "dj",
            "dm",
            "do",
            "ec",
            "eg",
            "sv",
            "gq",
            "er",
            "ee",
            "sz",
            "et",
            "fj",
            "fi",
            "fr",
            "ga",
            "gm",
            "ge",
            "de",
            "gh",
            "gr",
            "gd",
            "gt",
            "gn",
            "gw",
            "gy",
            "ht",
            "hn",
            "hu",
            "is",
            "in",
            "id",
            "ir",
            "iq",
            "ie",
            "il",
            "it",
            "jm",
            "jp",
            "jo",
            "kz",
            "ke",
            "ki",
            "kp",
            "kr",
            "kw",
            "kg",
            "la",
            "lv",
            "lb",
            "ls",
            "lr",
            "ly",
            "li",
            "lt",
            "lu",
            "mg",
            "mw",
            "my",
            "mv",
            "ml",
            "mt",
            "mh",
            "mr",
            "mu",
            "mx",
            "fm",
            "md",
            "mc",
            "mn",
            "me",
            "ma",
            "mz",
            "mm",
            "na",
            "nr",
            "np",
            "nl",
            "nz",
            "ni",
            "ne",
            "ng",
            "mk",
            "no",
            "om",
            "pk",
            "pw",
            "pa",
            "pg",
            "py",
            "pe",
            "ph",
            "pl",
            "pt",
            "qa",
            "ro",
            "ru",
            "rw",
            "kn",
            "lc",
            "vc",
            "ws",
            "sm",
            "st",
            "sa",
            "sn",
            "rs",
            "sc",
            "sl",
            "sg",
            "sk",
            "si",
            "sb",
            "so",
            "za",
            "ss",
            "es",
            "lk",
            "sd",
            "sr",
            "se",
            "ch",
            "sy",
            "tj",
            "tz",
            "th",
            "tl",
            "tg",
            "to",
            "tt",
            "tn",
            "tr",
            "tm",
            "tv",
            "ug",
            "ua",
            "ae",
            "gb",
            "us",
            "uy",
            "uz",
            "vu",
            "ve",
            "vn",
            "ye",
            "zm",
            "zw"
          ],
          "title": "Country",
          "type": "string"
        },
        "firstName": {
          "maxLength": 30,
          "minLength": 1,
          "title": "First name",
          "type": "string"
        },
        "lastName": {
          "maxLength": 150,
          "minLength": 1,
          "title": "Last name",
          "type": "string"
        },
        "locale": {
          "enum": [
            "en",
            "ja"
          ],
          "title": "Locale",
          "type": "string"
        }
      },
      "required": [
        "firstName",
        "lastName"
      ],
      "type": "object"
    },
    "UpdateUserLegal": {
      "properties": {
        "isLegalAgreed": {
          "title": "Is legal agreed",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "User": {
      "properties": {
        "country": {
          "enum": [
            "af",
            "al",
            "dz",
            "ad",
            "ao",
            "ag",
            "ar",
            "am",
            "au",
            "at",
            "az",
            "bs",
            "bh",
            "bd",
            "bb",
            "by",
            "be",
            "bz",
            "bj",
            "bt",
            "bo",
            "ba",
            "bw",
            "br",
            "bn",
            "bg",
            "bf",
            "bi",
            "cv",
            "kh",
            "cm",
            "ca",
            "cf",
            "td",
            "cl",
            "cn",
            "co",
            "km",
            "cg",
            "cd",
            "cr",
            "ci",
            "hr",
            "cu",
            "cy",
            "cz",
            "dk",
            "dj",
            "dm",
            "do",
            "ec",
            "eg",
            "sv",
            "gq",
            "er",
            "ee",
            "sz",
            "et",
            "fj",
            "fi",
            "fr",
            "ga",
            "gm",
            "ge",
            "de",
            "gh",
            "gr",
            "gd",
            "gt",
            "gn",
            "gw",
            "gy",
            "ht",
            "hn",
            "hu",
            "is",
            "in",
            "id",
            "ir",
            "iq",
            "ie",
            "il",
            "it",
            "jm",
            "jp",
            "jo",
            "kz",
            "ke",
            "ki",
            "kp",
            "kr",
            "kw",
            "kg",
            "la",
            "lv",
            "lb",
            "ls",
            "lr",
            "ly",
            "li",
            "lt",
            "lu",
            "mg",
            "mw",
            "my",
            "mv",
            "ml",
            "mt",
            "mh",
            "mr",
            "mu",
            "mx",
            "fm",
            "md",
            "mc",
            "mn",
            "me",
            "ma",
            "mz",
            "mm",
            "na",
            "nr",
            "np",
            "nl",
            "nz",
            "ni",
            "ne",
            "ng",
            "mk",
            "no",
            "om",
            "pk",
            "pw",
            "pa",
            "pg",
            "py",
            "pe",
            "ph",
            "pl",
            "pt",
            "qa",
            "ro",
            "ru",
            "rw",
            "kn",
            "lc",
            "vc",
            "ws",
            "sm",
            "st",
            "sa",
            "sn",
            "rs",
            "sc",
            "sl",
            "sg",
            "sk",
            "si",
            "sb",
            "so",
            "za",
            "ss",
            "es",
            "lk",
            "sd",
            "sr",
            "se",
            "ch",
            "sy",
            "tj",
            "tz",
            "th",
            "tl",
            "tg",
            "to",
            "tt",
            "tn",
            "tr",
            "tm",
            "tv",
            "ug",
            "ua",
            "ae",
            "gb",
            "us",
            "uy",
            "uz",
            "vu",
            "ve",
            "vn",
            "ye",
            "zm",
            "zw"
          ],
          "title": "Country",
          "type": "string"
        },
        "email": {
          "format": "email",
          "maxLength": 254,
          "minLength": 1,
          "title": "Email address",
          "type": "string"
        },
        "firstName": {
          "maxLength": 30,
          "minLength": 1,
          "title": "First name",
          "type": "string"
        },
        "frontendSettings": {
          "title": "Frontend settings",
          "type": "object"
        },
        "groups": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "uniqueItems": true
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "isActivated": {
          "readOnly": true,
          "title": "Is activated",
          "type": "boolean"
        },
        "isActive": {
          "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
          "title": "Active",
          "type": "boolean"
        },
        "isLegalAgreed": {
          "title": "Is legal agreed",
          "type": "boolean"
        },
        "isResearcher": {
          "readOnly": true,
          "title": "Is researcher",
          "type": "string"
        },
        "isStaff": {
          "description": "Designates whether the user can log into this admin site.",
          "title": "Staff status",
          "type": "boolean"
        },
        "lastName": {
          "maxLength": 150,
          "minLength": 1,
          "title": "Last name",
          "type": "string"
        },
        "locale": {
          "enum": [
            "en",
            "ja"
          ],
          "title": "Locale",
          "type": "string"
        },
        "notificationSettings": {
          "items": {
            "$ref": "#/definitions/NotificationSetting"
          },
          "readOnly": true,
          "type": "array"
        },
        "photo": {
          "format": "uri",
          "readOnly": true,
          "title": "Photo",
          "type": "string"
        },
        "profile": {
          "$ref": "#/definitions/UserProfile"
        }
      },
      "required": [
        "email",
        "firstName",
        "lastName"
      ],
      "type": "object"
    },
    "UserActivationForm": {
      "properties": {
        "token": {
          "minLength": 1,
          "title": "Token",
          "type": "string"
        }
      },
      "required": [
        "token"
      ],
      "type": "object"
    },
    "UserChangePassword": {
      "properties": {
        "newPassword1": {
          "minLength": 1,
          "title": "New password1",
          "type": "string"
        },
        "newPassword2": {
          "minLength": 1,
          "title": "New password2",
          "type": "string"
        },
        "oldPassword": {
          "minLength": 1,
          "title": "Old password",
          "type": "string"
        }
      },
      "required": [
        "oldPassword",
        "newPassword1",
        "newPassword2"
      ],
      "type": "object"
    },
    "UserLogin": {
      "properties": {
        "email": {
          "minLength": 1,
          "title": "Email",
          "type": "string"
        },
        "password": {
          "minLength": 1,
          "title": "Password",
          "type": "string"
        }
      },
      "required": [
        "email",
        "password"
      ],
      "type": "object"
    },
    "UserProfile": {
      "properties": {
        "org": {
          "$ref": "#/definitions/UserProfileOrg"
        }
      },
      "type": "object"
    },
    "UserProfileOrg": {
      "properties": {
        "careerSiteSlug": {
          "minLength": 1,
          "readOnly": true,
          "title": "Career site slug",
          "type": "string"
        },
        "hasZohoIntegration": {
          "readOnly": true,
          "title": "Has zoho integration",
          "type": "boolean"
        },
        "id": {
          "readOnly": true,
          "title": "Id",
          "type": "integer"
        },
        "isCareerSiteEnabled": {
          "readOnly": true,
          "title": "Is career site enabled",
          "type": "boolean"
        },
        "name": {
          "minLength": 1,
          "readOnly": true,
          "title": "Name",
          "type": "string"
        },
        "type": {
          "minLength": 1,
          "readOnly": true,
          "title": "Type",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserRegistrationRequest": {
      "properties": {
        "country": {
          "enum": [
            "af",
            "al",
            "dz",
            "ad",
            "ao",
            "ag",
            "ar",
            "am",
            "au",
            "at",
            "az",
            "bs",
            "bh",
            "bd",
            "bb",
            "by",
            "be",
            "bz",
            "bj",
            "bt",
            "bo",
            "ba",
            "bw",
            "br",
            "bn",
            "bg",
            "bf",
            "bi",
            "cv",
            "kh",
            "cm",
            "ca",
            "cf",
            "td",
            "cl",
            "cn",
            "co",
            "km",
            "cg",
            "cd",
            "cr",
            "ci",
            "hr",
            "cu",
            "cy",
            "cz",
            "dk",
            "dj",
            "dm",
            "do",
            "ec",
            "eg",
            "sv",
            "gq",
            "er",
            "ee",
            "sz",
            "et",
            "fj",
            "fi",
            "fr",
            "ga",
            "gm",
            "ge",
            "de",
            "gh",
            "gr",
            "gd",
            "gt",
            "gn",
            "gw",
            "gy",
            "ht",
            "hn",
            "hu",
            "is",
            "in",
            "id",
            "ir",
            "iq",
            "ie",
            "il",
            "it",
            "jm",
            "jp",
            "jo",
            "kz",
            "ke",
            "ki",
            "kp",
            "kr",
            "kw",
            "kg",
            "la",
            "lv",
            "lb",
            "ls",
            "lr",
            "ly",
            "li",
            "lt",
            "lu",
            "mg",
            "mw",
            "my",
            "mv",
            "ml",
            "mt",
            "mh",
            "mr",
            "mu",
            "mx",
            "fm",
            "md",
            "mc",
            "mn",
            "me",
            "ma",
            "mz",
            "mm",
            "na",
            "nr",
            "np",
            "nl",
            "nz",
            "ni",
            "ne",
            "ng",
            "mk",
            "no",
            "om",
            "pk",
            "pw",
            "pa",
            "pg",
            "py",
            "pe",
            "ph",
            "pl",
            "pt",
            "qa",
            "ro",
            "ru",
            "rw",
            "kn",
            "lc",
            "vc",
            "ws",
            "sm",
            "st",
            "sa",
            "sn",
            "rs",
            "sc",
            "sl",
            "sg",
            "sk",
            "si",
            "sb",
            "so",
            "za",
            "ss",
            "es",
            "lk",
            "sd",
            "sr",
            "se",
            "ch",
            "sy",
            "tj",
            "tz",
            "th",
            "tl",
            "tg",
            "to",
            "tt",
            "tn",
            "tr",
            "tm",
            "tv",
            "ug",
            "ua",
            "ae",
            "gb",
            "us",
            "uy",
            "uz",
            "vu",
            "ve",
            "vn",
            "ye",
            "zm",
            "zw"
          ],
          "title": "Country",
          "type": "string"
        },
        "email": {
          "format": "email",
          "maxLength": 254,
          "minLength": 1,
          "title": "Email address",
          "type": "string"
        },
        "firstName": {
          "maxLength": 30,
          "minLength": 1,
          "title": "First name",
          "type": "string"
        },
        "lastName": {
          "maxLength": 150,
          "minLength": 1,
          "title": "Last name",
          "type": "string"
        },
        "password": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Password",
          "type": "string"
        }
      },
      "required": [
        "email",
        "firstName",
        "lastName",
        "password"
      ],
      "type": "object"
    },
    "UserResetPassword": {
      "properties": {
        "email": {
          "minLength": 1,
          "title": "Email",
          "type": "string"
        }
      },
      "required": [
        "email"
      ],
      "type": "object"
    },
    "UserSetPassword": {
      "properties": {
        "newPassword1": {
          "minLength": 1,
          "title": "New password1",
          "type": "string"
        },
        "newPassword2": {
          "minLength": 1,
          "title": "New password2",
          "type": "string"
        },
        "token": {
          "minLength": 1,
          "title": "Token",
          "type": "string"
        },
        "uidb64": {
          "minLength": 1,
          "title": "Uidb64",
          "type": "string"
        }
      },
      "required": [
        "uidb64",
        "token",
        "newPassword1",
        "newPassword2"
      ],
      "type": "object"
    },
    "UserUpdate": {
      "properties": {
        "country": {
          "enum": [
            "af",
            "al",
            "dz",
            "ad",
            "ao",
            "ag",
            "ar",
            "am",
            "au",
            "at",
            "az",
            "bs",
            "bh",
            "bd",
            "bb",
            "by",
            "be",
            "bz",
            "bj",
            "bt",
            "bo",
            "ba",
            "bw",
            "br",
            "bn",
            "bg",
            "bf",
            "bi",
            "cv",
            "kh",
            "cm",
            "ca",
            "cf",
            "td",
            "cl",
            "cn",
            "co",
            "km",
            "cg",
            "cd",
            "cr",
            "ci",
            "hr",
            "cu",
            "cy",
            "cz",
            "dk",
            "dj",
            "dm",
            "do",
            "ec",
            "eg",
            "sv",
            "gq",
            "er",
            "ee",
            "sz",
            "et",
            "fj",
            "fi",
            "fr",
            "ga",
            "gm",
            "ge",
            "de",
            "gh",
            "gr",
            "gd",
            "gt",
            "gn",
            "gw",
            "gy",
            "ht",
            "hn",
            "hu",
            "is",
            "in",
            "id",
            "ir",
            "iq",
            "ie",
            "il",
            "it",
            "jm",
            "jp",
            "jo",
            "kz",
            "ke",
            "ki",
            "kp",
            "kr",
            "kw",
            "kg",
            "la",
            "lv",
            "lb",
            "ls",
            "lr",
            "ly",
            "li",
            "lt",
            "lu",
            "mg",
            "mw",
            "my",
            "mv",
            "ml",
            "mt",
            "mh",
            "mr",
            "mu",
            "mx",
            "fm",
            "md",
            "mc",
            "mn",
            "me",
            "ma",
            "mz",
            "mm",
            "na",
            "nr",
            "np",
            "nl",
            "nz",
            "ni",
            "ne",
            "ng",
            "mk",
            "no",
            "om",
            "pk",
            "pw",
            "pa",
            "pg",
            "py",
            "pe",
            "ph",
            "pl",
            "pt",
            "qa",
            "ro",
            "ru",
            "rw",
            "kn",
            "lc",
            "vc",
            "ws",
            "sm",
            "st",
            "sa",
            "sn",
            "rs",
            "sc",
            "sl",
            "sg",
            "sk",
            "si",
            "sb",
            "so",
            "za",
            "ss",
            "es",
            "lk",
            "sd",
            "sr",
            "se",
            "ch",
            "sy",
            "tj",
            "tz",
            "th",
            "tl",
            "tg",
            "to",
            "tt",
            "tn",
            "tr",
            "tm",
            "tv",
            "ug",
            "ua",
            "ae",
            "gb",
            "us",
            "uy",
            "uz",
            "vu",
            "ve",
            "vn",
            "ye",
            "zm",
            "zw"
          ],
          "title": "Country",
          "type": "string"
        },
        "email": {
          "format": "email",
          "maxLength": 254,
          "minLength": 1,
          "title": "Email address",
          "type": "string"
        },
        "firstName": {
          "maxLength": 30,
          "minLength": 1,
          "title": "First name",
          "type": "string"
        },
        "frontendSettings": {
          "$ref": "#/definitions/FrontendSettings"
        },
        "isLegalAgreed": {
          "title": "Is legal agreed",
          "type": "boolean"
        },
        "lastName": {
          "maxLength": 150,
          "minLength": 1,
          "title": "Last name",
          "type": "string"
        },
        "locale": {
          "enum": [
            "en",
            "ja"
          ],
          "title": "Locale",
          "type": "string"
        },
        "newPassword": {
          "title": "New password",
          "type": "string"
        },
        "notificationSettings": {
          "items": {
            "$ref": "#/definitions/NotificationSetting"
          },
          "type": "array"
        },
        "oldPassword": {
          "title": "Old password",
          "type": "string"
        }
      },
      "required": [
        "email",
        "firstName",
        "lastName",
        "frontendSettings"
      ],
      "type": "object"
    },
    "ValidateCandidateSplitAllocation": {
      "properties": {
        "activator": {
          "title": "Activator",
          "type": "integer",
          "x-nullable": true
        },
        "activatorSplit": {
          "format": "decimal",
          "title": "Activator split",
          "type": "string"
        },
        "candidateOwner": {
          "title": "Candidate owner",
          "type": "integer",
          "x-nullable": true
        },
        "candidateOwnerSplit": {
          "format": "decimal",
          "title": "Candidate owner split",
          "type": "string"
        },
        "clientOriginator": {
          "title": "Client originator",
          "type": "integer",
          "x-nullable": true
        },
        "clientOriginatorSplit": {
          "format": "decimal",
          "title": "Client originator split",
          "type": "string"
        },
        "file": {
          "format": "uri",
          "readOnly": true,
          "title": "File",
          "type": "string",
          "x-nullable": true
        },
        "leadBdConsultant": {
          "title": "Lead bd consultant",
          "type": "integer",
          "x-nullable": true
        },
        "leadBdConsultantSplit": {
          "format": "decimal",
          "title": "Lead bd consultant split",
          "type": "string"
        },
        "leadCandidateConsultant": {
          "title": "Lead candidate consultant",
          "type": "integer",
          "x-nullable": true
        },
        "leadCandidateConsultantSplit": {
          "format": "decimal",
          "title": "Lead candidate consultant split",
          "type": "string"
        },
        "placementStatus": {
          "enum": [
            "draft",
            "pending",
            "approved",
            "needs_revision"
          ],
          "title": "Placement status",
          "type": "string"
        },
        "supportConsultant": {
          "title": "Support consultant",
          "type": "integer",
          "x-nullable": true
        },
        "supportConsultantSplit": {
          "format": "decimal",
          "title": "Support consultant split",
          "type": "string"
        }
      },
      "required": [
        "candidateOwnerSplit",
        "leadCandidateConsultantSplit",
        "supportConsultantSplit",
        "clientOriginatorSplit",
        "leadBdConsultantSplit",
        "activatorSplit"
      ],
      "type": "object"
    },
    "ValidateCreateUpdateCandidate": {
      "properties": {
        "activator": {
          "title": "Activator",
          "type": "integer",
          "x-nullable": true
        },
        "address": {
          "minLength": 1,
          "readOnly": true,
          "title": "Address",
          "type": "string"
        },
        "age": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Age",
          "type": "integer",
          "x-nullable": true
        },
        "archived": {
          "readOnly": true,
          "title": "Archived",
          "type": "boolean"
        },
        "birthdate": {
          "format": "date",
          "title": "Birthdate",
          "type": "string",
          "x-nullable": true
        },
        "certifications": {
          "items": {
            "$ref": "#/definitions/CandidateCertification"
          },
          "type": "array"
        },
        "clientBrief": {
          "title": "Client brief",
          "type": "string"
        },
        "clientExpertise": {
          "title": "Client expertise",
          "type": "string"
        },
        "companiesAlreadyAppliedTo": {
          "title": "Companies already applied to",
          "type": "string"
        },
        "companiesAppliedTo": {
          "title": "Companies applied to",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created at",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/OrgMember"
        },
        "currentCity": {
          "maxLength": 128,
          "title": "Current city",
          "type": "string"
        },
        "currentCompany": {
          "maxLength": 128,
          "title": "Current company",
          "type": "string"
        },
        "currentCountry": {
          "enum": [
            "af",
            "al",
            "dz",
            "ad",
            "ao",
            "ag",
            "ar",
            "am",
            "au",
            "at",
            "az",
            "bs",
            "bh",
            "bd",
            "bb",
            "by",
            "be",
            "bz",
            "bj",
            "bt",
            "bo",
            "ba",
            "bw",
            "br",
            "bn",
            "bg",
            "bf",
            "bi",
            "cv",
            "kh",
            "cm",
            "ca",
            "cf",
            "td",
            "cl",
            "cn",
            "co",
            "km",
            "cg",
            "cd",
            "cr",
            "ci",
            "hr",
            "cu",
            "cy",
            "cz",
            "dk",
            "dj",
            "dm",
            "do",
            "ec",
            "eg",
            "sv",
            "gq",
            "er",
            "ee",
            "sz",
            "et",
            "fj",
            "fi",
            "fr",
            "ga",
            "gm",
            "ge",
            "de",
            "gh",
            "gr",
            "gd",
            "gt",
            "gn",
            "gw",
            "gy",
            "ht",
            "hn",
            "hu",
            "is",
            "in",
            "id",
            "ir",
            "iq",
            "ie",
            "il",
            "it",
            "jm",
            "jp",
            "jo",
            "kz",
            "ke",
            "ki",
            "kp",
            "kr",
            "kw",
            "kg",
            "la",
            "lv",
            "lb",
            "ls",
            "lr",
            "ly",
            "li",
            "lt",
            "lu",
            "mg",
            "mw",
            "my",
            "mv",
            "ml",
            "mt",
            "mh",
            "mr",
            "mu",
            "mx",
            "fm",
            "md",
            "mc",
            "mn",
            "me",
            "ma",
            "mz",
            "mm",
            "na",
            "nr",
            "np",
            "nl",
            "nz",
            "ni",
            "ne",
            "ng",
            "mk",
            "no",
            "om",
            "pk",
            "pw",
            "pa",
            "pg",
            "py",
            "pe",
            "ph",
            "pl",
            "pt",
            "qa",
            "ro",
            "ru",
            "rw",
            "kn",
            "lc",
            "vc",
            "ws",
            "sm",
            "st",
            "sa",
            "sn",
            "rs",
            "sc",
            "sl",
            "sg",
            "sk",
            "si",
            "sb",
            "so",
            "za",
            "ss",
            "es",
            "lk",
            "sd",
            "sr",
            "se",
            "ch",
            "sy",
            "tj",
            "tz",
            "th",
            "tl",
            "tg",
            "to",
            "tt",
            "tn",
            "tr",
            "tm",
            "tv",
            "ug",
            "ua",
            "ae",
            "gb",
            "us",
            "uy",
            "uz",
            "vu",
            "ve",
            "vn",
            "ye",
            "zm",
            "zw"
          ],
          "title": "Current country",
          "type": "string"
        },
        "currentPosition": {
          "maxLength": 256,
          "title": "Current position",
          "type": "string"
        },
        "currentPostalCode": {
          "maxLength": 128,
          "title": "Current postal code",
          "type": "string"
        },
        "currentPrefecture": {
          "maxLength": 128,
          "title": "Current prefecture",
          "type": "string"
        },
        "currentSalary": {
          "format": "decimal",
          "title": "Current salary",
          "type": "string",
          "x-nullable": true
        },
        "currentSalaryBreakdown": {
          "title": "Current salary breakdown",
          "type": "string"
        },
        "currentSalaryCurrency": {
          "minLength": 1,
          "readOnly": true,
          "title": "Current salary currency",
          "type": "string"
        },
        "currentSalaryVariable": {
          "format": "decimal",
          "title": "Current salary variable",
          "type": "string",
          "x-nullable": true
        },
        "currentStreet": {
          "maxLength": 128,
          "title": "Current street",
          "type": "string"
        },
        "cvJa": {
          "format": "uri",
          "readOnly": true,
          "title": "Cv ja",
          "type": "string"
        },
        "cvJaThumbnail": {
          "format": "uri",
          "readOnly": true,
          "title": "Cv ja thumbnail",
          "type": "string"
        },
        "department": {
          "title": "Department",
          "type": "string"
        },
        "educationDetails": {
          "items": {
            "$ref": "#/definitions/FormEducationDetail"
          },
          "type": "array"
        },
        "email": {
          "format": "email",
          "maxLength": 254,
          "title": "Email",
          "type": "string"
        },
        "employmentStatus": {
          "enum": [
            "notemployed",
            "fulltime",
            "fixedterm",
            "temporary",
            "businessowner",
            "dispatched",
            "freelance"
          ],
          "title": "Employment status",
          "type": "string"
        },
        "expectationsDetails": {
          "title": "Expectations details",
          "type": "string"
        },
        "experienceDetails": {
          "items": {
            "$ref": "#/definitions/FormExperienceDetail"
          },
          "type": "array"
        },
        "files": {
          "items": {
            "$ref": "#/definitions/CandidateFileCandidate"
          },
          "type": "array"
        },
        "firstName": {
          "maxLength": 128,
          "minLength": 1,
          "title": "First name",
          "type": "string"
        },
        "firstNameKanji": {
          "maxLength": 128,
          "title": "First name kanji",
          "type": "string"
        },
        "firstNameKatakana": {
          "maxLength": 128,
          "title": "First name katakana",
          "type": "string"
        },
        "fulltime": {
          "title": "Fulltime",
          "type": "boolean"
        },
        "gender": {
          "enum": [
            "male",
            "female",
            "other"
          ],
          "title": "Gender",
          "type": "string"
        },
        "githubUrl": {
          "format": "uri",
          "maxLength": 200,
          "title": "Github url",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "industry": {
          "enum": [
            "architecture_and_construction",
            "automobile_or_aviation_and_aerospace",
            "banking_and_financial_services",
            "consulting",
            "education_or_training_or_coaching",
            "electronic_goods",
            "energy_and_natural_resources",
            "fintech",
            "food_and_beverage_or_fmcg",
            "hardware",
            "healthcare_or_pharmaceutical_or_life_sciences",
            "it_or_technology_or__digital_and_telecom",
            "insurance",
            "legal_and_compliance",
            "leisure_or_hospitality_or_restaurants_or_travel_and_tourism",
            "manufacturing_or_industrial",
            "media_or_art_and_entertaiment_or_communication_or_agency",
            "public_sector",
            "real_estate_or_property_and_construction",
            "recruitment",
            "retail_or_fashion_or_luxury_or_consumer_goods",
            "services",
            "software",
            "transportation_or_shipping_or_logistics"
          ],
          "title": "Industry",
          "type": "string"
        },
        "internalStatus": {
          "enum": [
            "not_contacted",
            "contacted",
            "generally_unqualified",
            "active"
          ],
          "title": "Internal status",
          "type": "string"
        },
        "isClientContact": {
          "title": "Is client contact",
          "type": "boolean"
        },
        "isMet": {
          "title": "Is met",
          "type": "boolean"
        },
        "isMissingRequiredFields": {
          "readOnly": true,
          "title": "Is missing required fields",
          "type": "string"
        },
        "jobChangeUrgency": {
          "enum": [
            "urgent",
            "actively_looking",
            "passively_looking",
            "not_looking"
          ],
          "title": "Job change urgency",
          "type": "string"
        },
        "languages": {
          "items": {
            "$ref": "#/definitions/Language"
          },
          "type": "array"
        },
        "lastName": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Last name",
          "type": "string"
        },
        "lastNameKanji": {
          "maxLength": 128,
          "title": "Last name kanji",
          "type": "string"
        },
        "lastNameKatakana": {
          "maxLength": 128,
          "title": "Last name katakana",
          "type": "string"
        },
        "leadConsultant": {
          "title": "Lead consultant",
          "type": "integer",
          "x-nullable": true
        },
        "linkedinData": {
          "description": "Return linkedin data if User has permission.",
          "readOnly": true,
          "title": "Linkedin data",
          "type": "object"
        },
        "linkedinUrl": {
          "format": "uri",
          "title": "Linkedin url",
          "type": "string"
        },
        "local": {
          "title": "Local",
          "type": "boolean"
        },
        "maxNumPeopleManaged": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Max num people managed",
          "type": "integer",
          "x-nullable": true
        },
        "middleName": {
          "maxLength": 128,
          "title": "Middle name",
          "type": "string"
        },
        "mobileCollect": {
          "title": "Mobile collect",
          "type": "integer",
          "x-nullable": true
        },
        "name": {
          "readOnly": true,
          "title": "Name",
          "type": "string"
        },
        "nameCollect": {
          "title": "Name collect",
          "type": "integer",
          "x-nullable": true
        },
        "nameJa": {
          "readOnly": true,
          "title": "Name ja",
          "type": "string"
        },
        "nationality": {
          "maxLength": 128,
          "title": "Nationality",
          "type": "string"
        },
        "note": {
          "readOnly": true,
          "title": "Note",
          "type": "string"
        },
        "noticePeriod": {
          "enum": [
            "immediate",
            "two_weeks",
            "one_month",
            "two_months",
            "three_months"
          ],
          "title": "Notice period",
          "type": "string"
        },
        "original": {
          "title": "Original",
          "type": "integer",
          "x-nullable": true
        },
        "otherDesiredBenefits": {
          "items": {
            "enum": [
              "sign_on_bonus",
              "relocation",
              "holidays",
              "schooling",
              "company_car",
              "training",
              "housing",
              "equity",
              "tax_equalization",
              "special_insurance",
              "other"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "otherDesiredBenefitsOthersDetail": {
          "maxLength": 128,
          "title": "Other desired benefits others detail",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "type": "integer",
          "x-nullable": true
        },
        "parttime": {
          "title": "Parttime",
          "type": "boolean"
        },
        "phone": {
          "title": "Phone",
          "type": "string"
        },
        "photo": {
          "format": "uri",
          "readOnly": true,
          "title": "Photo",
          "type": "string"
        },
        "placementApprovedAt": {
          "format": "date",
          "readOnly": true,
          "title": "Placement approved at",
          "type": "string"
        },
        "platform": {
          "enum": [
            "linkedin",
            "facebook",
            "biz_reach",
            "github",
            "careercross",
            "corporate_site",
            "other"
          ],
          "title": "Platform",
          "type": "string"
        },
        "platformOtherDetails": {
          "maxLength": 128,
          "title": "Platform other details",
          "type": "string"
        },
        "potentialLocations": {
          "maxLength": 256,
          "title": "Potential locations",
          "type": "string"
        },
        "proposals": {
          "items": {
            "$ref": "#/definitions/CandidateProposal"
          },
          "readOnly": true,
          "type": "array"
        },
        "proposed": {
          "description": "Return True if was proposed to job passed via parameter.",
          "readOnly": true,
          "title": "Proposed",
          "type": "boolean"
        },
        "proposedToJob": {
          "title": "Proposed to job",
          "type": "boolean"
        },
        "pullFactors": {
          "title": "Pull factors",
          "type": "string"
        },
        "pushFactors": {
          "title": "Push factors",
          "type": "string"
        },
        "reasonForJobChanges": {
          "title": "Reason for job changes",
          "type": "string"
        },
        "referredBy": {
          "title": "Referred by",
          "type": "integer",
          "x-nullable": true
        },
        "remote": {
          "title": "Remote",
          "type": "boolean"
        },
        "resume": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume",
          "type": "string"
        },
        "resumeJa": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume ja",
          "type": "string"
        },
        "resumeJaThumbnail": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume ja thumbnail",
          "type": "string"
        },
        "resumeThumbnail": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume thumbnail",
          "type": "string"
        },
        "salary": {
          "format": "decimal",
          "title": "Salary",
          "type": "string",
          "x-nullable": true
        },
        "salaryCurrency": {
          "minLength": 1,
          "readOnly": true,
          "title": "Salary currency",
          "type": "string"
        },
        "secondaryEmail": {
          "format": "email",
          "title": "Secondary email",
          "type": "string"
        },
        "secondaryPhone": {
          "title": "Secondary phone",
          "type": "string"
        },
        "skillDomain": {
          "title": "Skill domain",
          "type": "integer",
          "x-nullable": true
        },
        "source": {
          "maxLength": 128,
          "title": "Source",
          "type": "string"
        },
        "sourceDetails": {
          "maxLength": 128,
          "title": "Source details",
          "type": "string"
        },
        "summary": {
          "title": "Summary",
          "type": "string"
        },
        "supportConsultant": {
          "title": "Support consultant",
          "type": "integer",
          "x-nullable": true
        },
        "tags": {
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "type": "array"
        },
        "taxEqualization": {
          "title": "Tax equalization",
          "type": "boolean",
          "x-nullable": true
        },
        "totalAnnualSalary": {
          "minLength": 1,
          "readOnly": true,
          "title": "Total annual salary",
          "type": "string"
        },
        "twitterUrl": {
          "format": "uri",
          "maxLength": 200,
          "title": "Twitter url",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated at",
          "type": "string"
        },
        "updatedBy": {
          "$ref": "#/definitions/OrgMember"
        },
        "websiteUrl": {
          "format": "uri",
          "maxLength": 200,
          "title": "Website url",
          "type": "string"
        },
        "zohoId": {
          "minLength": 1,
          "readOnly": true,
          "title": "Zoho id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "YasgClient": {
      "properties": {
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "name": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "openJobsCount": {
          "readOnly": true,
          "title": "Open jobs count",
          "type": "string"
        },
        "ownerAgencyId": {
          "readOnly": true,
          "title": "Owner agency id",
          "type": "string"
        },
        "proposalsCount": {
          "readOnly": true,
          "title": "Proposals count",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "YasgUpdateContract": {
      "properties": {
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "inviteDurationDays": {
          "maximum": 2147483647,
          "minimum": -2147483648,
          "title": "Invite duration days",
          "type": "integer"
        },
        "isAgencySigned": {
          "title": "Is agency signed",
          "type": "boolean"
        },
        "isClientSigned": {
          "title": "Is client signed",
          "type": "boolean"
        },
        "status": {
          "enum": [
            "agency_invited",
            "pending",
            "initiated",
            "rejected",
            "expired"
          ],
          "title": "Status",
          "type": "string"
        }
      },
      "type": "object"
    },
    "YasgUpdateProposal": {
      "properties": {
        "declineReasons": {
          "items": {
            "type": "integer"
          },
          "type": "array",
          "uniqueItems": true
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "isRejected": {
          "title": "Is rejected",
          "type": "boolean"
        },
        "reasonDeclinedDescription": {
          "maxLength": 255,
          "title": "Reason declined description",
          "type": "string"
        },
        "reasonNotInterestedDescription": {
          "maxLength": 255,
          "title": "Reason not interested description",
          "type": "string"
        },
        "reasonsNotInterested": {
          "items": {
            "type": "integer"
          },
          "type": "array",
          "uniqueItems": true
        },
        "status": {
          "title": "Status",
          "type": "integer"
        },
        "suitability": {
          "maximum": 5,
          "minimum": 1,
          "title": "Suitability",
          "type": "integer",
          "x-nullable": true
        }
      },
      "required": [
        "status"
      ],
      "type": "object"
    },
    "ZendeskJWT": {
      "properties": {
        "token": {
          "minLength": 1,
          "readOnly": true,
          "title": "Token",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ZohoCandidate": {
      "properties": {
        "activator": {
          "title": "Activator",
          "type": "integer",
          "x-nullable": true
        },
        "address": {
          "minLength": 1,
          "readOnly": true,
          "title": "Address",
          "type": "string"
        },
        "age": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Age",
          "type": "integer",
          "x-nullable": true
        },
        "archived": {
          "readOnly": true,
          "title": "Archived",
          "type": "boolean"
        },
        "birthdate": {
          "format": "date",
          "title": "Birthdate",
          "type": "string",
          "x-nullable": true
        },
        "certifications": {
          "items": {
            "$ref": "#/definitions/CandidateCertification"
          },
          "type": "array"
        },
        "clientBrief": {
          "title": "Client brief",
          "type": "string"
        },
        "clientExpertise": {
          "title": "Client expertise",
          "type": "string"
        },
        "companiesAlreadyAppliedTo": {
          "title": "Companies already applied to",
          "type": "string"
        },
        "companiesAppliedTo": {
          "title": "Companies applied to",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created at",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/OrgMember"
        },
        "currentCity": {
          "maxLength": 128,
          "title": "Current city",
          "type": "string"
        },
        "currentCompany": {
          "maxLength": 128,
          "title": "Current company",
          "type": "string"
        },
        "currentPosition": {
          "maxLength": 256,
          "title": "Current position",
          "type": "string"
        },
        "currentPostalCode": {
          "maxLength": 128,
          "title": "Current postal code",
          "type": "string"
        },
        "currentPrefecture": {
          "maxLength": 128,
          "title": "Current prefecture",
          "type": "string"
        },
        "currentSalaryBreakdown": {
          "title": "Current salary breakdown",
          "type": "string"
        },
        "currentSalaryCurrency": {
          "minLength": 1,
          "readOnly": true,
          "title": "Current salary currency",
          "type": "string"
        },
        "currentSalaryVariable": {
          "format": "decimal",
          "title": "Current salary variable",
          "type": "string",
          "x-nullable": true
        },
        "currentStreet": {
          "maxLength": 128,
          "title": "Current street",
          "type": "string"
        },
        "cvJa": {
          "format": "uri",
          "readOnly": true,
          "title": "Cv ja",
          "type": "string"
        },
        "cvJaThumbnail": {
          "format": "uri",
          "readOnly": true,
          "title": "Cv ja thumbnail",
          "type": "string"
        },
        "department": {
          "title": "Department",
          "type": "string"
        },
        "educationDetails": {
          "items": {
            "$ref": "#/definitions/EducationDetail"
          },
          "type": "array"
        },
        "email": {
          "format": "email",
          "maxLength": 254,
          "title": "Email",
          "type": "string",
          "x-nullable": true
        },
        "employmentStatus": {
          "enum": [
            "notemployed",
            "fulltime",
            "fixedterm",
            "temporary",
            "businessowner",
            "dispatched",
            "freelance"
          ],
          "title": "Employment status",
          "type": "string"
        },
        "expectationsDetails": {
          "title": "Expectations details",
          "type": "string"
        },
        "experienceDetails": {
          "items": {
            "$ref": "#/definitions/ExperienceDetail"
          },
          "type": "array"
        },
        "firstName": {
          "maxLength": 128,
          "title": "First name",
          "type": "string"
        },
        "firstNameKanji": {
          "maxLength": 128,
          "title": "First name kanji",
          "type": "string"
        },
        "firstNameKatakana": {
          "maxLength": 128,
          "title": "First name katakana",
          "type": "string"
        },
        "fulltime": {
          "title": "Fulltime",
          "type": "boolean"
        },
        "gender": {
          "enum": [
            "male",
            "female",
            "other"
          ],
          "title": "Gender",
          "type": "string"
        },
        "githubUrl": {
          "format": "uri",
          "maxLength": 200,
          "title": "Github url",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "industry": {
          "enum": [
            "architecture_and_construction",
            "automobile_or_aviation_and_aerospace",
            "banking_and_financial_services",
            "consulting",
            "education_or_training_or_coaching",
            "electronic_goods",
            "energy_and_natural_resources",
            "fintech",
            "food_and_beverage_or_fmcg",
            "hardware",
            "healthcare_or_pharmaceutical_or_life_sciences",
            "it_or_technology_or__digital_and_telecom",
            "insurance",
            "legal_and_compliance",
            "leisure_or_hospitality_or_restaurants_or_travel_and_tourism",
            "manufacturing_or_industrial",
            "media_or_art_and_entertaiment_or_communication_or_agency",
            "public_sector",
            "real_estate_or_property_and_construction",
            "recruitment",
            "retail_or_fashion_or_luxury_or_consumer_goods",
            "services",
            "software",
            "transportation_or_shipping_or_logistics"
          ],
          "title": "Industry",
          "type": "string"
        },
        "internalStatus": {
          "enum": [
            "not_contacted",
            "contacted",
            "generally_unqualified",
            "active"
          ],
          "title": "Internal status",
          "type": "string"
        },
        "isClientContact": {
          "title": "Is client contact",
          "type": "boolean"
        },
        "isMet": {
          "title": "Is met",
          "type": "boolean"
        },
        "isMissingRequiredFields": {
          "readOnly": true,
          "title": "Is missing required fields",
          "type": "string"
        },
        "jobChangeUrgency": {
          "enum": [
            "urgent",
            "actively_looking",
            "passively_looking",
            "not_looking"
          ],
          "title": "Job change urgency",
          "type": "string"
        },
        "languages": {
          "items": {
            "$ref": "#/definitions/Language"
          },
          "type": "array"
        },
        "lastName": {
          "maxLength": 128,
          "title": "Last name",
          "type": "string"
        },
        "lastNameKanji": {
          "maxLength": 128,
          "title": "Last name kanji",
          "type": "string"
        },
        "lastNameKatakana": {
          "maxLength": 128,
          "title": "Last name katakana",
          "type": "string"
        },
        "leadConsultant": {
          "title": "Lead consultant",
          "type": "integer",
          "x-nullable": true
        },
        "linkedinData": {
          "description": "Return linkedin data if User has permission.",
          "readOnly": true,
          "title": "Linkedin data",
          "type": "object"
        },
        "linkedinUrl": {
          "format": "uri",
          "title": "Linkedin url",
          "type": "string"
        },
        "local": {
          "title": "Local",
          "type": "boolean"
        },
        "maxNumPeopleManaged": {
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Max num people managed",
          "type": "integer",
          "x-nullable": true
        },
        "middleName": {
          "maxLength": 128,
          "title": "Middle name",
          "type": "string"
        },
        "mobileCollect": {
          "title": "Mobile collect",
          "type": "integer",
          "x-nullable": true
        },
        "name": {
          "readOnly": true,
          "title": "Name",
          "type": "string"
        },
        "nameCollect": {
          "title": "Name collect",
          "type": "integer",
          "x-nullable": true
        },
        "nameJa": {
          "readOnly": true,
          "title": "Name ja",
          "type": "string"
        },
        "nationality": {
          "maxLength": 128,
          "title": "Nationality",
          "type": "string"
        },
        "note": {
          "readOnly": true,
          "title": "Note",
          "type": "string"
        },
        "noticePeriod": {
          "enum": [
            "immediate",
            "two_weeks",
            "one_month",
            "two_months",
            "three_months"
          ],
          "title": "Notice period",
          "type": "string"
        },
        "original": {
          "title": "Original",
          "type": "integer",
          "x-nullable": true
        },
        "otherDesiredBenefits": {
          "items": {
            "enum": [
              "sign_on_bonus",
              "relocation",
              "holidays",
              "schooling",
              "company_car",
              "training",
              "housing",
              "equity",
              "tax_equalization",
              "special_insurance",
              "other"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "otherDesiredBenefitsOthersDetail": {
          "maxLength": 128,
          "title": "Other desired benefits others detail",
          "type": "string"
        },
        "parttime": {
          "title": "Parttime",
          "type": "boolean"
        },
        "phone": {
          "title": "Phone",
          "type": "string"
        },
        "photo": {
          "format": "uri",
          "readOnly": true,
          "title": "Photo",
          "type": "string"
        },
        "placementApprovedAt": {
          "format": "date",
          "readOnly": true,
          "title": "Placement approved at",
          "type": "string"
        },
        "platform": {
          "enum": [
            "linkedin",
            "facebook",
            "biz_reach",
            "github",
            "careercross",
            "corporate_site",
            "other"
          ],
          "title": "Platform",
          "type": "string"
        },
        "platformOtherDetails": {
          "maxLength": 128,
          "title": "Platform other details",
          "type": "string"
        },
        "potentialLocations": {
          "maxLength": 256,
          "title": "Potential locations",
          "type": "string"
        },
        "proposals": {
          "items": {
            "$ref": "#/definitions/CandidateProposal"
          },
          "readOnly": true,
          "type": "array"
        },
        "proposed": {
          "description": "Return True if was proposed to job passed via parameter.",
          "readOnly": true,
          "title": "Proposed",
          "type": "boolean"
        },
        "proposedToJob": {
          "title": "Proposed to job",
          "type": "boolean"
        },
        "pullFactors": {
          "title": "Pull factors",
          "type": "string"
        },
        "pushFactors": {
          "title": "Push factors",
          "type": "string"
        },
        "reasonForJobChanges": {
          "title": "Reason for job changes",
          "type": "string"
        },
        "referredBy": {
          "title": "Referred by",
          "type": "integer",
          "x-nullable": true
        },
        "remote": {
          "title": "Remote",
          "type": "boolean"
        },
        "resume": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume",
          "type": "string"
        },
        "resumeJa": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume ja",
          "type": "string"
        },
        "resumeJaThumbnail": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume ja thumbnail",
          "type": "string"
        },
        "resumeThumbnail": {
          "format": "uri",
          "readOnly": true,
          "title": "Resume thumbnail",
          "type": "string"
        },
        "salary": {
          "format": "decimal",
          "title": "Salary",
          "type": "string",
          "x-nullable": true
        },
        "salaryCurrency": {
          "minLength": 1,
          "readOnly": true,
          "title": "Salary currency",
          "type": "string"
        },
        "secondaryEmail": {
          "format": "email",
          "title": "Secondary email",
          "type": "string"
        },
        "secondaryPhone": {
          "title": "Secondary phone",
          "type": "string"
        },
        "skillDomain": {
          "title": "Skill domain",
          "type": "integer",
          "x-nullable": true
        },
        "source": {
          "maxLength": 128,
          "title": "Source",
          "type": "string"
        },
        "sourceDetails": {
          "maxLength": 128,
          "title": "Source details",
          "type": "string"
        },
        "summary": {
          "title": "Summary",
          "type": "string"
        },
        "supportConsultant": {
          "title": "Support consultant",
          "type": "integer",
          "x-nullable": true
        },
        "tags": {
          "items": {
            "$ref": "#/definitions/CandidateTag"
          },
          "type": "array"
        },
        "taxEqualization": {
          "title": "Tax equalization",
          "type": "boolean",
          "x-nullable": true
        },
        "totalAnnualSalary": {
          "minLength": 1,
          "readOnly": true,
          "title": "Total annual salary",
          "type": "string"
        },
        "twitterUrl": {
          "format": "uri",
          "maxLength": 200,
          "title": "Twitter url",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated at",
          "type": "string"
        },
        "updatedBy": {
          "$ref": "#/definitions/OrgMember"
        },
        "websiteUrl": {
          "format": "uri",
          "maxLength": 200,
          "title": "Website url",
          "type": "string"
        },
        "zohoData": {
          "title": "Zoho data",
          "type": "object"
        },
        "zohoId": {
          "minLength": 1,
          "title": "Zoho id",
          "type": "string"
        }
      },
      "required": [
        "zohoId"
      ],
      "type": "object"
    },
    "ZohoGet": {
      "properties": {
        "url": {
          "format": "uri",
          "minLength": 1,
          "title": "Url",
          "type": "string"
        }
      },
      "required": [
        "url"
      ],
      "type": "object"
    },
    "_Agency": {
      "properties": {
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "name": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "_BasicContactInfo": {
      "properties": {
        "email": {
          "minLength": 1,
          "title": "Email",
          "type": "string"
        },
        "linkedIn": {
          "minLength": 1,
          "title": "Linked in",
          "type": "string"
        }
      },
      "required": [
        "linkedIn"
      ],
      "type": "object"
    },
    "_Client": {
      "properties": {
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "name": {
          "maxLength": 128,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "_ContactInfo": {
      "properties": {
        "email": {
          "default": "",
          "title": "Email",
          "type": "string",
          "x-nullable": true
        },
        "linkedIn": {
          "default": "",
          "title": "Linked in",
          "type": "string",
          "x-nullable": true
        },
        "twitter": {
          "items": {
            "minLength": 1,
            "type": "string"
          },
          "type": "array"
        },
        "website": {
          "items": {
            "minLength": 1,
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "_Education": {
      "properties": {
        "currentlyPursuing": {
          "default": false,
          "title": "Currently pursuing",
          "type": "boolean",
          "x-nullable": true
        },
        "dateEnd": {
          "format": "date",
          "title": "Date end",
          "type": "string",
          "x-nullable": true
        },
        "dateStart": {
          "format": "date",
          "title": "Date start",
          "type": "string",
          "x-nullable": true
        },
        "degree": {
          "default": "",
          "title": "Degree",
          "type": "string",
          "x-nullable": true
        },
        "desc": {
          "default": "",
          "title": "Desc",
          "type": "string",
          "x-nullable": true
        },
        "duration": {
          "minLength": 1,
          "title": "Duration",
          "type": "string"
        },
        "fos": {
          "default": "",
          "title": "Fos",
          "type": "string",
          "x-nullable": true
        },
        "school": {
          "default": "",
          "title": "School",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "_Experience": {
      "properties": {
        "currentlyPursuing": {
          "default": false,
          "title": "Currently pursuing",
          "type": "boolean",
          "x-nullable": true
        },
        "dateEnd": {
          "format": "date",
          "title": "Date end",
          "type": "string",
          "x-nullable": true
        },
        "dateStart": {
          "format": "date",
          "title": "Date start",
          "type": "string",
          "x-nullable": true
        },
        "desc": {
          "default": "",
          "title": "Desc",
          "type": "string",
          "x-nullable": true
        },
        "duration": {
          "minLength": 1,
          "title": "Duration",
          "type": "string"
        },
        "location": {
          "default": "",
          "title": "Location",
          "type": "string",
          "x-nullable": true
        },
        "org": {
          "default": "",
          "title": "Org",
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "default": "",
          "title": "Title",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "_InvitedUser": {
      "properties": {
        "email": {
          "format": "email",
          "maxLength": 254,
          "title": "Email",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "user": {
          "title": "User",
          "type": "integer",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "_Job": {
      "properties": {
        "clientName": {
          "minLength": 1,
          "readOnly": true,
          "title": "Client name",
          "type": "string"
        },
        "country": {
          "enum": [
            "af",
            "al",
            "dz",
            "ad",
            "ao",
            "ag",
            "ar",
            "am",
            "au",
            "at",
            "az",
            "bs",
            "bh",
            "bd",
            "bb",
            "by",
            "be",
            "bz",
            "bj",
            "bt",
            "bo",
            "ba",
            "bw",
            "br",
            "bn",
            "bg",
            "bf",
            "bi",
            "cv",
            "kh",
            "cm",
            "ca",
            "cf",
            "td",
            "cl",
            "cn",
            "co",
            "km",
            "cg",
            "cd",
            "cr",
            "ci",
            "hr",
            "cu",
            "cy",
            "cz",
            "dk",
            "dj",
            "dm",
            "do",
            "ec",
            "eg",
            "sv",
            "gq",
            "er",
            "ee",
            "sz",
            "et",
            "fj",
            "fi",
            "fr",
            "ga",
            "gm",
            "ge",
            "de",
            "gh",
            "gr",
            "gd",
            "gt",
            "gn",
            "gw",
            "gy",
            "ht",
            "hn",
            "hu",
            "is",
            "in",
            "id",
            "ir",
            "iq",
            "ie",
            "il",
            "it",
            "jm",
            "jp",
            "jo",
            "kz",
            "ke",
            "ki",
            "kp",
            "kr",
            "kw",
            "kg",
            "la",
            "lv",
            "lb",
            "ls",
            "lr",
            "ly",
            "li",
            "lt",
            "lu",
            "mg",
            "mw",
            "my",
            "mv",
            "ml",
            "mt",
            "mh",
            "mr",
            "mu",
            "mx",
            "fm",
            "md",
            "mc",
            "mn",
            "me",
            "ma",
            "mz",
            "mm",
            "na",
            "nr",
            "np",
            "nl",
            "nz",
            "ni",
            "ne",
            "ng",
            "mk",
            "no",
            "om",
            "pk",
            "pw",
            "pa",
            "pg",
            "py",
            "pe",
            "ph",
            "pl",
            "pt",
            "qa",
            "ro",
            "ru",
            "rw",
            "kn",
            "lc",
            "vc",
            "ws",
            "sm",
            "st",
            "sa",
            "sn",
            "rs",
            "sc",
            "sl",
            "sg",
            "sk",
            "si",
            "sb",
            "so",
            "za",
            "ss",
            "es",
            "lk",
            "sd",
            "sr",
            "se",
            "ch",
            "sy",
            "tj",
            "tz",
            "th",
            "tl",
            "tg",
            "to",
            "tt",
            "tn",
            "tr",
            "tm",
            "tv",
            "ug",
            "ua",
            "ae",
            "gb",
            "us",
            "uy",
            "uz",
            "vu",
            "ve",
            "vn",
            "ye",
            "zm",
            "zw"
          ],
          "readOnly": true,
          "title": "Country",
          "type": "string"
        },
        "employmentType": {
          "enum": [
            "permanent",
            "parttime",
            "fixedterm",
            "dispatch",
            "freelance"
          ],
          "readOnly": true,
          "title": "Employment type",
          "type": "string"
        },
        "employmentTypeDisplay": {
          "minLength": 1,
          "readOnly": true,
          "title": "Employment type display",
          "type": "string"
        },
        "function": {
          "$ref": "#/definitions/JobFunction"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "salaryCurrency": {
          "minLength": 1,
          "readOnly": true,
          "title": "Salary currency",
          "type": "string"
        },
        "salaryFrom": {
          "format": "decimal",
          "readOnly": true,
          "title": "Salary from",
          "type": "string"
        },
        "salaryPer": {
          "enum": [
            "year",
            "month",
            "week",
            "day",
            "hour"
          ],
          "readOnly": true,
          "title": "Salary per",
          "type": "string"
        },
        "salaryTo": {
          "format": "decimal",
          "readOnly": true,
          "title": "Salary to",
          "type": "string"
        },
        "title": {
          "minLength": 1,
          "readOnly": true,
          "title": "Title",
          "type": "string"
        },
        "workLocation": {
          "minLength": 1,
          "readOnly": true,
          "title": "Work location",
          "type": "string"
        }
      },
      "type": "object"
    },
    "_QuestionAnswers": {
      "properties": {
        "answer": {
          "title": "Answer",
          "type": "string"
        },
        "jobQuestionId": {
          "title": "Job question id",
          "type": "integer"
        }
      },
      "required": [
        "jobQuestionId",
        "answer"
      ],
      "type": "object"
    }
  },
  "host": "127.0.0.1:9009",
  "info": {
    "title": "ZooKeep API",
    "version": "v1"
  },
  "paths": {
    "/agencies/": {
      "get": {
        "description": "Viewset for the Agency model.",
        "operationId": "agencies_list",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "working_with",
            "required": false,
            "type": "string"
          },
          {
            "description": "Multiple values may be separated by commas.",
            "in": "query",
            "name": "categories_filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Multiple values may be separated by commas.",
            "in": "query",
            "name": "function_focus__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/AgencyList"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "agencies"
        ]
      },
      "parameters": [],
      "post": {
        "description": "Viewset for the Agency model.",
        "operationId": "agencies_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Agency"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Agency"
            }
          }
        },
        "tags": [
          "agencies"
        ]
      }
    },
    "/agencies/{id}/": {
      "delete": {
        "description": "Viewset for the Agency model.",
        "operationId": "agencies_delete",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "agencies"
        ]
      },
      "get": {
        "description": "Viewset for the Agency model.",
        "operationId": "agencies_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Agency"
            }
          }
        },
        "tags": [
          "agencies"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this agency.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "description": "Viewset for the Agency model.",
        "operationId": "agencies_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Agency"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Agency"
            }
          }
        },
        "tags": [
          "agencies"
        ]
      },
      "put": {
        "description": "Viewset for the Agency model.",
        "operationId": "agencies_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Agency"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Agency"
            }
          }
        },
        "tags": [
          "agencies"
        ]
      }
    },
    "/agency_category/": {
      "get": {
        "description": "",
        "operationId": "agency_category_list",
        "parameters": [
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "items": {
                "$ref": "#/definitions/AgencyCategory"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "agency_category"
        ]
      },
      "parameters": []
    },
    "/agency_client_info/{client}/": {
      "get": {
        "description": "",
        "operationId": "agency_client_info_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AgencyClientInfo"
            }
          }
        },
        "tags": [
          "agency_client_info"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "client",
          "required": true,
          "type": "string"
        }
      ],
      "patch": {
        "description": "",
        "operationId": "agency_client_info_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgencyClientInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AgencyClientInfo"
            }
          }
        },
        "tags": [
          "agency_client_info"
        ]
      },
      "put": {
        "description": "",
        "operationId": "agency_client_info_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgencyClientInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AgencyClientInfo"
            }
          }
        },
        "tags": [
          "agency_client_info"
        ]
      }
    },
    "/agency_registration_request/": {
      "parameters": [],
      "post": {
        "description": "Viewset for the AgencyRegistrationRequestSerializer model.",
        "operationId": "agency_registration_request_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgencyRegistrationRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AgencyRegistrationRequest"
            }
          }
        },
        "tags": [
          "agency_registration_request"
        ]
      }
    },
    "/approval/": {
      "get": {
        "description": "",
        "operationId": "approval_list",
        "parameters": [
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "enum": [
              "fee",
              "placement",
              "proposal"
            ],
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Approval"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "approval"
        ]
      },
      "parameters": []
    },
    "/candidate_client_brief/{id}/": {
      "get": {
        "description": "Viewset for the Candidate client_brief.",
        "operationId": "candidate_client_brief_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CandidateClientBriefUpdate"
            }
          }
        },
        "tags": [
          "candidate_client_brief"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this candidate.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "description": "Viewset for the Candidate client_brief.",
        "operationId": "candidate_client_brief_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CandidateClientBriefUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CandidateClientBriefUpdate"
            }
          }
        },
        "tags": [
          "candidate_client_brief"
        ]
      },
      "put": {
        "description": "Viewset for the Candidate client_brief.",
        "operationId": "candidate_client_brief_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CandidateClientBriefUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CandidateClientBriefUpdate"
            }
          }
        },
        "tags": [
          "candidate_client_brief"
        ]
      }
    },
    "/candidate_comment/": {
      "get": {
        "description": "Viewset for the CandidateComment and (for list) ProposalComment model.\nFlatMultipleModelMixin is used to query and display both models\nin a flat way.",
        "operationId": "candidate_comment_list",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "candidate",
            "required": false,
            "type": "string"
          },
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/CandidateComment"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "candidate_comment"
        ]
      },
      "parameters": [],
      "post": {
        "description": "Viewset for the CandidateComment and (for list) ProposalComment model.\nFlatMultipleModelMixin is used to query and display both models\nin a flat way.",
        "operationId": "candidate_comment_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCandidateComment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateCandidateComment"
            }
          }
        },
        "tags": [
          "candidate_comment"
        ]
      }
    },
    "/candidate_comment/{id}/": {
      "delete": {
        "description": "Viewset for the CandidateComment and (for list) ProposalComment model.\nFlatMultipleModelMixin is used to query and display both models\nin a flat way.",
        "operationId": "candidate_comment_delete",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "candidate_comment"
        ]
      },
      "get": {
        "description": "Viewset for the CandidateComment and (for list) ProposalComment model.\nFlatMultipleModelMixin is used to query and display both models\nin a flat way.",
        "operationId": "candidate_comment_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CandidateComment"
            }
          }
        },
        "tags": [
          "candidate_comment"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this candidate comment.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/candidate_files/{ftype}/{id}/delete/": {
      "delete": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Delete Candidate file.",
        "operationId": "candidates_delete_file",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "candidate_files"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "ftype",
          "required": true,
          "type": "string"
        },
        {
          "description": "A unique integer value identifying this candidate.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/candidate_files/{ftype}/{id}/get/": {
      "get": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Download Candidate file.",
        "operationId": "candidates_get_file",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        },
        "tags": [
          "candidate_files"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "ftype",
          "required": true,
          "type": "string"
        },
        {
          "description": "A unique integer value identifying this candidate.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/candidate_files/{ftype}/{id}/public_upload/": {
      "parameters": [
        {
          "in": "path",
          "name": "ftype",
          "required": true,
          "type": "string"
        },
        {
          "description": "A unique integer value identifying this candidate.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Upload Candidate file.",
        "operationId": "candidates_public_upload_file",
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "candidate_files"
        ]
      }
    },
    "/candidate_files/{ftype}/{id}/upload/": {
      "parameters": [
        {
          "in": "path",
          "name": "ftype",
          "required": true,
          "type": "string"
        },
        {
          "description": "A unique integer value identifying this candidate.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Upload Candidate file.",
        "operationId": "candidates_upload_file",
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "candidate_files"
        ]
      }
    },
    "/candidate_logs/": {
      "get": {
        "description": "",
        "operationId": "candidate_logs_list",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "candidate",
            "required": true,
            "type": "string"
          },
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/CandidateVersion"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "candidate_logs"
        ]
      },
      "parameters": []
    },
    "/candidate_misc_file/": {
      "parameters": [],
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "",
        "operationId": "candidate_misc_file_create",
        "parameters": [
          {
            "in": "formData",
            "maxLength": 64,
            "name": "title",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          },
          {
            "in": "formData",
            "name": "is_shared",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "candidate",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CandidateFile"
            }
          }
        },
        "tags": [
          "candidate_misc_file"
        ]
      }
    },
    "/candidate_misc_file/public_upload/": {
      "parameters": [],
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "",
        "operationId": "candidate_misc_file_public_upload",
        "parameters": [
          {
            "in": "formData",
            "maxLength": 64,
            "name": "title",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          },
          {
            "in": "formData",
            "name": "is_shared",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "candidate",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PublicCandidateFile"
            }
          }
        },
        "tags": [
          "candidate_misc_file"
        ]
      }
    },
    "/candidate_misc_file/{id}/": {
      "delete": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "",
        "operationId": "candidate_misc_file_delete",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "candidate_misc_file"
        ]
      },
      "get": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "",
        "operationId": "candidate_misc_file_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CandidateFile"
            }
          }
        },
        "tags": [
          "candidate_misc_file"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this candidate file.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "",
        "operationId": "candidate_misc_file_partial_update",
        "parameters": [
          {
            "in": "formData",
            "name": "is_shared",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "maxLength": 64,
            "name": "title",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateCandidateFile"
            }
          }
        },
        "tags": [
          "candidate_misc_file"
        ]
      },
      "put": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "",
        "operationId": "candidate_misc_file_update",
        "parameters": [
          {
            "in": "formData",
            "name": "is_shared",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "maxLength": 64,
            "name": "title",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateCandidateFile"
            }
          }
        },
        "tags": [
          "candidate_misc_file"
        ]
      }
    },
    "/candidate_misc_file/{id}/preview/": {
      "get": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "",
        "operationId": "candidate_misc_file_preview",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CandidateFile"
            }
          }
        },
        "tags": [
          "candidate_misc_file"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this candidate file.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/candidate_notes/{id}/": {
      "get": {
        "description": "Viewset for the Candidate note.",
        "operationId": "candidate_notes_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CandidateNoteUpdate"
            }
          }
        },
        "tags": [
          "candidate_notes"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this candidate.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "description": "Viewset for the Candidate note.",
        "operationId": "candidate_notes_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CandidateNoteUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CandidateNoteUpdate"
            }
          }
        },
        "tags": [
          "candidate_notes"
        ]
      },
      "put": {
        "description": "Viewset for the Candidate note.",
        "operationId": "candidate_notes_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CandidateNoteUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CandidateNoteUpdate"
            }
          }
        },
        "tags": [
          "candidate_notes"
        ]
      }
    },
    "/candidates/": {
      "get": {
        "description": "Viewset for the Candidate model.",
        "operationId": "candidates_list",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "string"
          },
          {
            "description": "Multiple values may be separated by commas.",
            "in": "query",
            "name": "tags__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "include_archived",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "ID of job to check if Candidate is proposed",
            "in": "query",
            "name": "check_proposed_to",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "candidates"
        ]
      },
      "parameters": [],
      "post": {
        "description": "Viewset for the Candidate model.",
        "operationId": "candidates_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUpdateCandidate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateUpdateCandidate"
            }
          }
        },
        "tags": [
          "candidates"
        ]
      }
    },
    "/candidates/check_duplication/": {
      "parameters": [],
      "post": {
        "description": "Viewset for the Candidate model.",
        "operationId": "candidate_check_duplication",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PossibleDuplicateCandidate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PossibleDuplicateCandidate"
            }
          }
        },
        "tags": [
          "candidates"
        ]
      }
    },
    "/candidates/linkedin_data_check_duplication/": {
      "parameters": [],
      "post": {
        "description": "Viewset for the Candidate model.",
        "operationId": "candidate_linkedin_data_check_duplication",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PossibleDuplicateLinkedInCandidate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PossibleDuplicateLinkedInCandidate"
            }
          }
        },
        "tags": [
          "candidates"
        ]
      }
    },
    "/candidates/linkedin_url_check_proposed/": {
      "parameters": [],
      "patch": {
        "description": "Viewset for the Candidate model.",
        "operationId": "candidates_linkedin_url_check_proposed",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckIfLinkedinSubmittedToJob"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CheckIfLinkedinSubmittedToJob"
            }
          }
        },
        "tags": [
          "candidates"
        ]
      }
    },
    "/candidates/validate_create/": {
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "candidates_validate_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateCreateUpdateCandidate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidateCreateUpdateCandidate"
            }
          }
        },
        "tags": [
          "candidates"
        ]
      }
    },
    "/candidates/validate_partial_create/": {
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "candidates_validate_partial_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateCreateUpdateCandidate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidateCreateUpdateCandidate"
            }
          }
        },
        "tags": [
          "candidates"
        ]
      }
    },
    "/candidates/{id}/": {
      "delete": {
        "description": "Viewset for the Candidate model.",
        "operationId": "candidates_delete",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "candidates"
        ]
      },
      "get": {
        "description": "Viewset for the Candidate model.",
        "operationId": "candidates_read",
        "parameters": [
          {
            "in": "query",
            "minLength": 1,
            "name": "extra_fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "candidates"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this candidate.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "description": "Viewset for the Candidate model.",
        "operationId": "candidates_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUpdateCandidate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateUpdateCandidate"
            }
          }
        },
        "tags": [
          "candidates"
        ]
      },
      "put": {
        "description": "Viewset for the Candidate model.",
        "operationId": "candidates_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUpdateCandidate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateUpdateCandidate"
            }
          }
        },
        "tags": [
          "candidates"
        ]
      }
    },
    "/candidates/{id}/archive_candidate/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this candidate.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "description": "Archive candidates instead of deleting them",
        "operationId": "candidate_archive",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "candidates"
        ]
      }
    },
    "/candidates/{id}/restore_candidate/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this candidate.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "description": "Viewset for the Candidate model.",
        "operationId": "candidate_restore",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "candidates"
        ]
      }
    },
    "/candidates/{id}/validate_partial_update/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this candidate.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "description": "",
        "operationId": "candidates_validate_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateCreateUpdateCandidate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidateCreateUpdateCandidate"
            }
          }
        },
        "tags": [
          "candidates"
        ]
      }
    },
    "/candidates/{id}/validate_update/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this candidate.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "description": "",
        "operationId": "candidates_validate_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateCreateUpdateCandidate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidateCreateUpdateCandidate"
            }
          }
        },
        "tags": [
          "candidates"
        ]
      }
    },
    "/candidates_linkedin_data/{id}/get_candidate_data/": {
      "get": {
        "description": "Get Candidate fields data.",
        "operationId": "candidates_linkedin_data_get_candidate_data",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "candidates_linkedin_data"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this candidate linkedin data.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/client_registration_request/": {
      "parameters": [],
      "post": {
        "description": "Viewset for the ClientRegistrationRequest model.",
        "operationId": "client_registration_request_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientRegistrationRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClientRegistrationRequest"
            }
          }
        },
        "tags": [
          "client_registration_request"
        ]
      }
    },
    "/clients/": {
      "get": {
        "description": "Viewset for the Client model.",
        "operationId": "clients_list",
        "parameters": [
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/YasgClient"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "clients"
        ]
      },
      "parameters": [],
      "post": {
        "description": "Viewset for the Client model.",
        "operationId": "clients_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/YasgClient"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/YasgClient"
            }
          }
        },
        "tags": [
          "clients"
        ]
      }
    },
    "/clients/settings/": {
      "get": {
        "description": "",
        "operationId": "clients_settings_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClientSettings"
            }
          }
        },
        "tags": [
          "clients"
        ]
      },
      "parameters": [],
      "patch": {
        "description": "",
        "operationId": "clients_settings_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClientSettings"
            }
          }
        },
        "tags": [
          "clients"
        ]
      }
    },
    "/clients/settings/logo": {
      "delete": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "",
        "operationId": "client_settings_delete_logo",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "clients"
        ]
      },
      "get": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "",
        "operationId": "client_settings_download_logo",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "clients"
        ]
      },
      "parameters": [],
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "",
        "operationId": "client_settings_upload_logo",
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "clients"
        ]
      }
    },
    "/clients/settings/validate_partial_update/": {
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "clients_settings_validate_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientSettings"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClientSettings"
            }
          }
        },
        "tags": [
          "clients"
        ]
      }
    },
    "/clients/{id}/": {
      "delete": {
        "description": "Viewset for the Client model.",
        "operationId": "clients_delete",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "clients"
        ]
      },
      "get": {
        "description": "Viewset for the Client model.",
        "operationId": "clients_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/YasgClient"
            }
          }
        },
        "tags": [
          "clients"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this client.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "description": "Viewset for the Client model.",
        "operationId": "clients_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/YasgClient"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/YasgClient"
            }
          }
        },
        "tags": [
          "clients"
        ]
      },
      "put": {
        "description": "Viewset for the Client model.",
        "operationId": "clients_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/YasgClient"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/YasgClient"
            }
          }
        },
        "tags": [
          "clients"
        ]
      }
    },
    "/contracts/": {
      "get": {
        "description": "Viewset for the Contract model.",
        "operationId": "contracts_list",
        "parameters": [
          {
            "description": "Multiple values may be separated by commas.",
            "in": "query",
            "name": "status__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Contract"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "contracts"
        ]
      },
      "parameters": [],
      "post": {
        "description": "Viewset for the Contract model.",
        "operationId": "contracts_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateContract"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateContract"
            }
          }
        },
        "tags": [
          "contracts"
        ]
      }
    },
    "/contracts/invite_multiple_agencies/": {
      "parameters": [],
      "post": {
        "description": "Find all agencies by filter and invite them",
        "operationId": "contracts_invite_multiple_agencies",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "contracts"
        ]
      }
    },
    "/contracts/{id}/": {
      "delete": {
        "description": "Viewset for the Contract model.",
        "operationId": "contracts_delete",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "contracts"
        ]
      },
      "get": {
        "description": "Viewset for the Contract model.",
        "operationId": "contracts_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Contract"
            }
          }
        },
        "tags": [
          "contracts"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this contract.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "description": "Viewset for the Contract model.",
        "operationId": "contracts_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/YasgUpdateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/YasgUpdateContract"
            }
          }
        },
        "tags": [
          "contracts"
        ]
      },
      "put": {
        "description": "Viewset for the Contract model.",
        "operationId": "contracts_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/YasgUpdateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/YasgUpdateContract"
            }
          }
        },
        "tags": [
          "contracts"
        ]
      }
    },
    "/dashboard/get_statistics/": {
      "get": {
        "description": "Viewset for dashboard data.",
        "operationId": "dashboard_get_statistics",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "dashboard"
        ]
      },
      "parameters": []
    },
    "/data/get_org_proposal_statuses/": {
      "get": {
        "description": "",
        "operationId": "data_get_org_proposal_statuses",
        "parameters": [
          {
            "in": "query",
            "name": "org_id",
            "required": true,
            "type": "integer"
          },
          {
            "enum": [
              "agency",
              "client"
            ],
            "in": "query",
            "name": "org_type",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "data"
        ]
      },
      "parameters": []
    },
    "/deal_pipeline/": {
      "get": {
        "description": "",
        "operationId": "deal_pipeline_list",
        "parameters": [
          {
            "description": "Multiple values may be separated by commas.",
            "in": "query",
            "name": "deal_stage__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "status_last_updated_by",
            "required": false,
            "type": "string"
          },
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/DealPipelineProposal"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "deal_pipeline"
        ]
      },
      "parameters": []
    },
    "/deal_pipeline/predicted_values/": {
      "get": {
        "description": "",
        "operationId": "get_deal_pipeline_metrics",
        "parameters": [
          {
            "description": "Multiple values may be separated by commas.",
            "in": "query",
            "name": "deal_stage__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "status_last_updated_by",
            "required": false,
            "type": "string"
          },
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DealPipelineMetrics"
            }
          }
        },
        "tags": [
          "deal_pipeline"
        ]
      },
      "parameters": []
    },
    "/ext_api/add_linkedin_candidate/": {
      "parameters": [],
      "post": {
        "description": "Endpoints for the browser extension.",
        "operationId": "add_linkedin_candidate",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddLinkedInCandidate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddLinkedInCandidate"
            }
          }
        },
        "tags": [
          "ext_api"
        ]
      }
    },
    "/ext_api/check_linkedin_candidate_exists/": {
      "parameters": [],
      "post": {
        "description": "Endpoints for the browser extension.",
        "operationId": "check_linkedin_candidate_exists",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckLinkedinCandidateExists"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CheckLinkedinCandidateExists"
            }
          }
        },
        "tags": [
          "ext_api"
        ]
      }
    },
    "/ext_api/job_list/": {
      "get": {
        "description": "Endpoints for the browser extension.",
        "operationId": "ext_api_job_list",
        "parameters": [
          {
            "in": "query",
            "minLength": 1,
            "name": "title",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "items": {
                "$ref": "#/definitions/AgencyUserExtJob"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ext_api"
        ]
      },
      "parameters": []
    },
    "/ext_api/job_search/": {
      "get": {
        "description": "",
        "operationId": "ext_api_job_search_list",
        "parameters": [
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/ExtJob"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "ext_api"
        ]
      },
      "parameters": []
    },
    "/fee/": {
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "fee_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Fee"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Fee"
            }
          }
        },
        "tags": [
          "fee"
        ]
      }
    },
    "/fee/{id}/": {
      "delete": {
        "description": "",
        "operationId": "fee_delete",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "fee"
        ]
      },
      "get": {
        "description": "",
        "operationId": "fee_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Fee"
            }
          }
        },
        "tags": [
          "fee"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this fee.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "description": "",
        "operationId": "fee_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Fee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Fee"
            }
          }
        },
        "tags": [
          "fee"
        ]
      },
      "put": {
        "description": "",
        "operationId": "fee_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Fee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Fee"
            }
          }
        },
        "tags": [
          "fee"
        ]
      }
    },
    "/fee_split_allocation/": {
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "fee_split_allocation_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeeSplitAllocation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FeeSplitAllocation"
            }
          }
        },
        "tags": [
          "fee_split_allocation"
        ]
      }
    },
    "/fee_split_allocation/validate_create/": {
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "fee_split_allocation_validate_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateCandidateSplitAllocation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidateCandidateSplitAllocation"
            }
          }
        },
        "tags": [
          "fee_split_allocation"
        ]
      }
    },
    "/fee_split_allocation/validate_partial_create/": {
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "fee_split_allocation_validate_partial_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateCandidateSplitAllocation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidateCandidateSplitAllocation"
            }
          }
        },
        "tags": [
          "fee_split_allocation"
        ]
      }
    },
    "/fee_split_allocation/{id}/": {
      "delete": {
        "description": "",
        "operationId": "fee_split_allocation_delete",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "fee_split_allocation"
        ]
      },
      "get": {
        "description": "",
        "operationId": "fee_split_allocation_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FeeSplitAllocation"
            }
          }
        },
        "tags": [
          "fee_split_allocation"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this fee split allocation.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "description": "",
        "operationId": "fee_split_allocation_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeeSplitAllocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FeeSplitAllocation"
            }
          }
        },
        "tags": [
          "fee_split_allocation"
        ]
      },
      "put": {
        "description": "",
        "operationId": "fee_split_allocation_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeeSplitAllocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FeeSplitAllocation"
            }
          }
        },
        "tags": [
          "fee_split_allocation"
        ]
      }
    },
    "/fee_split_allocation/{id}/delete_file/": {
      "delete": {
        "description": "",
        "operationId": "fee_split_allocation_delete_file",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "fee_split_allocation"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this fee split allocation.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/fee_split_allocation/{id}/get_file/": {
      "get": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "",
        "operationId": "fee_split_allocation_get_file",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FeeSplitAllocation"
            }
          }
        },
        "tags": [
          "fee_split_allocation"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this fee split allocation.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/fee_split_allocation/{id}/upload_file/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this fee split allocation.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "",
        "operationId": "fee_split_allocation_upload_file",
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CandidateSplitAllocationFile"
            }
          }
        },
        "tags": [
          "fee_split_allocation"
        ]
      }
    },
    "/fee_split_allocation/{id}/validate_partial_update/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this fee split allocation.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "description": "",
        "operationId": "fee_split_allocation_validate_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateCandidateSplitAllocation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidateCandidateSplitAllocation"
            }
          }
        },
        "tags": [
          "fee_split_allocation"
        ]
      }
    },
    "/fee_split_allocation/{id}/validate_update/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this fee split allocation.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "description": "",
        "operationId": "fee_split_allocation_validate_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateCandidateSplitAllocation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidateCandidateSplitAllocation"
            }
          }
        },
        "tags": [
          "fee_split_allocation"
        ]
      }
    },
    "/feedback/": {
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "feedback_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Feedback"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Feedback"
            }
          }
        },
        "tags": [
          "feedback"
        ]
      }
    },
    "/function/": {
      "get": {
        "description": "",
        "operationId": "function_list",
        "parameters": [
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "items": {
                "$ref": "#/definitions/Function"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "function"
        ]
      },
      "parameters": []
    },
    "/interview_templates/": {
      "get": {
        "description": "",
        "operationId": "interview_templates_list",
        "parameters": [
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/InterviewTemplate"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "interview_templates"
        ]
      },
      "parameters": []
    },
    "/job_agency_contracts/{id}/": {
      "get": {
        "description": "",
        "operationId": "job_agency_contracts_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JobAgencyContract"
            }
          }
        },
        "tags": [
          "job_agency_contracts"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this job agency contract.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "description": "",
        "operationId": "job_agency_contracts_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobAgencyContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JobAgencyContract"
            }
          }
        },
        "tags": [
          "job_agency_contracts"
        ]
      },
      "put": {
        "description": "",
        "operationId": "job_agency_contracts_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobAgencyContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JobAgencyContract"
            }
          }
        },
        "tags": [
          "job_agency_contracts"
        ]
      }
    },
    "/job_files/": {
      "parameters": [],
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Viewset for the CandidateFile model.",
        "operationId": "job_files_create",
        "parameters": [
          {
            "in": "formData",
            "maxLength": 64,
            "name": "title",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          },
          {
            "in": "formData",
            "name": "job",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JobFile"
            }
          }
        },
        "tags": [
          "job_files"
        ]
      }
    },
    "/job_files/{id}/": {
      "delete": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Viewset for the CandidateFile model.",
        "operationId": "job_files_delete",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "job_files"
        ]
      },
      "get": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Viewset for the CandidateFile model.",
        "operationId": "job_files_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JobFile"
            }
          }
        },
        "tags": [
          "job_files"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this job file.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Viewset for the CandidateFile model.",
        "operationId": "job_files_partial_update",
        "parameters": [
          {
            "in": "formData",
            "maxLength": 64,
            "name": "title",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateJobFile"
            }
          }
        },
        "tags": [
          "job_files"
        ]
      },
      "put": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Viewset for the CandidateFile model.",
        "operationId": "job_files_update",
        "parameters": [
          {
            "in": "formData",
            "maxLength": 64,
            "name": "title",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateJobFile"
            }
          }
        },
        "tags": [
          "job_files"
        ]
      }
    },
    "/job_postings/career/": {
      "get": {
        "description": "",
        "operationId": "job_postings_career_list",
        "parameters": [
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/CareerSiteJobPosting"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "job_postings"
        ]
      },
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "job_postings_career_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CareerSiteJobPosting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CareerSiteJobPosting"
            }
          }
        },
        "tags": [
          "job_postings"
        ]
      }
    },
    "/job_postings/career/{job_id}/": {
      "get": {
        "description": "",
        "operationId": "job_postings_career_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CareerSiteJobPosting"
            }
          }
        },
        "tags": [
          "job_postings"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "job_id",
          "required": true,
          "type": "string"
        }
      ],
      "patch": {
        "description": "",
        "operationId": "job_postings_career_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CareerSiteJobPosting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CareerSiteJobPosting"
            }
          }
        },
        "tags": [
          "job_postings"
        ]
      },
      "put": {
        "description": "",
        "operationId": "job_postings_career_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CareerSiteJobPosting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CareerSiteJobPosting"
            }
          }
        },
        "tags": [
          "job_postings"
        ]
      }
    },
    "/job_postings/career_validation/validate_create/": {
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "job_postings_career_validation_validate_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CareerSiteJobPosting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CareerSiteJobPosting"
            }
          }
        },
        "tags": [
          "job_postings"
        ]
      }
    },
    "/job_postings/career_validation/validate_partial_create/": {
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "job_postings_career_validation_validate_partial_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CareerSiteJobPosting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CareerSiteJobPosting"
            }
          }
        },
        "tags": [
          "job_postings"
        ]
      }
    },
    "/job_postings/career_validation/{id}/validate_partial_update/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this career site job posting.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "description": "",
        "operationId": "job_postings_career_validation_validate_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CareerSiteJobPosting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CareerSiteJobPosting"
            }
          }
        },
        "tags": [
          "job_postings"
        ]
      }
    },
    "/job_postings/career_validation/{id}/validate_update/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this career site job posting.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "description": "",
        "operationId": "job_postings_career_validation_validate_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CareerSiteJobPosting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CareerSiteJobPosting"
            }
          }
        },
        "tags": [
          "job_postings"
        ]
      }
    },
    "/job_postings/private/": {
      "get": {
        "description": "",
        "operationId": "job_postings_private_list",
        "parameters": [
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/PrivateJobPosting"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "job_postings"
        ]
      },
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "job_postings_private_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateJobPosting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PrivateJobPosting"
            }
          }
        },
        "tags": [
          "job_postings"
        ]
      }
    },
    "/job_postings/private/{job_id}/": {
      "get": {
        "description": "",
        "operationId": "job_postings_private_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PrivateJobPosting"
            }
          }
        },
        "tags": [
          "job_postings"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "job_id",
          "required": true,
          "type": "string"
        }
      ],
      "patch": {
        "description": "",
        "operationId": "job_postings_private_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateJobPosting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PrivateJobPosting"
            }
          }
        },
        "tags": [
          "job_postings"
        ]
      },
      "put": {
        "description": "",
        "operationId": "job_postings_private_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateJobPosting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PrivateJobPosting"
            }
          }
        },
        "tags": [
          "job_postings"
        ]
      }
    },
    "/job_postings/private_public/{uuid}/": {
      "get": {
        "description": "Viewset for the public Job objects.",
        "operationId": "job_postings_private_public_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PrivateJobPostingPublic"
            }
          }
        },
        "tags": [
          "job_postings"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "uuid",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/job_postings/private_validation/validate_create/": {
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "job_postings_private_validation_validate_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateJobPosting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PrivateJobPosting"
            }
          }
        },
        "tags": [
          "job_postings"
        ]
      }
    },
    "/job_postings/private_validation/validate_partial_create/": {
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "job_postings_private_validation_validate_partial_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateJobPosting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PrivateJobPosting"
            }
          }
        },
        "tags": [
          "job_postings"
        ]
      }
    },
    "/job_postings/private_validation/{id}/validate_partial_update/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this private job posting.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "description": "",
        "operationId": "job_postings_private_validation_validate_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateJobPosting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PrivateJobPosting"
            }
          }
        },
        "tags": [
          "job_postings"
        ]
      }
    },
    "/job_postings/private_validation/{id}/validate_update/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this private job posting.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "description": "",
        "operationId": "job_postings_private_validation_validate_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateJobPosting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PrivateJobPosting"
            }
          }
        },
        "tags": [
          "job_postings"
        ]
      }
    },
    "/jobs/": {
      "get": {
        "description": "Viewset for the Job model.",
        "operationId": "jobs_list",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "client",
            "required": false,
            "type": "number"
          },
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "description": "Multiple values may be separated by commas.",
            "in": "query",
            "name": "status__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "managers",
            "required": false,
            "type": "string"
          },
          {
            "description": "Multiple values may be separated by commas.",
            "in": "query",
            "name": "client__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "only_my_jobs",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "is_belong_to_user_org",
            "required": false,
            "type": "string"
          },
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "ID of Candidate to check proposed to Job",
            "in": "query",
            "name": "check_candidate_proposed",
            "required": false,
            "type": "string"
          },
          {
            "description": "ID of User to check access to Job",
            "in": "query",
            "name": "check_user_has_access",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "show_pipeline",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "show_live_proposal_count",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/JobList"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "jobs"
        ]
      },
      "parameters": [],
      "post": {
        "description": "Viewset for the Job model.",
        "operationId": "jobs_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUpdateJob"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateUpdateJob"
            }
          }
        },
        "tags": [
          "jobs"
        ]
      }
    },
    "/jobs/public/{uuid}/files/{id}": {
      "get": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Viewset for sharing public JobFiles",
        "operationId": "jobs_public_files_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "jobs"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "uuid",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/jobs/{id}/": {
      "delete": {
        "description": "Viewset for the Job model.",
        "operationId": "jobs_delete",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "jobs"
        ]
      },
      "get": {
        "description": "Viewset for the Job model.",
        "operationId": "jobs_read",
        "parameters": [
          {
            "in": "query",
            "name": "show_pipeline",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "tags": [
          "jobs"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this job.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "description": "Viewset for the Job model.",
        "operationId": "jobs_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUpdateJob"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JobUpdateResponse"
            }
          }
        },
        "tags": [
          "jobs"
        ]
      },
      "put": {
        "description": "Viewset for the Job model.",
        "operationId": "jobs_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUpdateJob"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JobUpdateResponse"
            }
          }
        },
        "tags": [
          "jobs"
        ]
      }
    },
    "/jobs/{id}/assign_member/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this job.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "description": "Viewset for the Job model.",
        "operationId": "assign_job_member",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "tags": [
          "jobs"
        ]
      }
    },
    "/jobs/{id}/import_longlist/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this job.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "description": "Viewset for the Job model.",
        "operationId": "job_import_longlist",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "tags": [
          "jobs"
        ]
      }
    },
    "/jobs/{id}/withdraw_member/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this job.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "description": "Viewset for the Job model.",
        "operationId": "withdraw_job_member",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "tags": [
          "jobs"
        ]
      }
    },
    "/jobs_validation/validate_create/": {
      "parameters": [],
      "post": {
        "description": "Viewset for validating Job model.",
        "operationId": "jobs_validation_validate_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUpdateJob"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateUpdateJob"
            }
          }
        },
        "tags": [
          "jobs_validation"
        ]
      }
    },
    "/jobs_validation/validate_partial_create/": {
      "parameters": [],
      "post": {
        "description": "Viewset for validating Job model.",
        "operationId": "jobs_validation_validate_partial_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUpdateJob"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateUpdateJob"
            }
          }
        },
        "tags": [
          "jobs_validation"
        ]
      }
    },
    "/jobs_validation/{id}/validate_partial_update/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this job.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "description": "Viewset for validating Job model.",
        "operationId": "jobs_validation_validate_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUpdateJob"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateUpdateJob"
            }
          }
        },
        "tags": [
          "jobs_validation"
        ]
      }
    },
    "/jobs_validation/{id}/validate_update/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this job.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "description": "Viewset for validating Job model.",
        "operationId": "jobs_validation_validate_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUpdateJob"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateUpdateJob"
            }
          }
        },
        "tags": [
          "jobs_validation"
        ]
      }
    },
    "/legal_agreements/": {
      "get": {
        "description": "",
        "operationId": "legal_agreements_list",
        "parameters": [
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/LegalAgreement"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "legal_agreements"
        ]
      },
      "parameters": []
    },
    "/legal_agreements/{document_type}/": {
      "get": {
        "description": "",
        "operationId": "legal_agreements_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LegalAgreement"
            }
          }
        },
        "tags": [
          "legal_agreements"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "document_type",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/legal_agreements/{document_type}/file/": {
      "get": {
        "description": "",
        "operationId": "legal_agreements_file",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "legal_agreements"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "document_type",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/locale/get_locale/": {
      "get": {
        "description": "",
        "operationId": "locale_data_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "locale"
        ]
      },
      "parameters": []
    },
    "/managers/": {
      "get": {
        "description": "Viewset to retrieve, assign and remove Job Managers.",
        "operationId": "managers_list",
        "parameters": [
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/User"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "managers"
        ]
      },
      "parameters": []
    },
    "/managers/assign/": {
      "parameters": [],
      "post": {
        "description": "Assign the User as the Manager for the Job.",
        "operationId": "managers_assign",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagerAssignRemoveFromJob"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "managers"
        ]
      }
    },
    "/managers/invite/": {
      "parameters": [],
      "post": {
        "description": "Create a User, assign as Hiring Manager, send a restore link.",
        "operationId": "managers_invite",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagerInvite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "managers"
        ]
      }
    },
    "/managers/remove_from_job/": {
      "parameters": [],
      "post": {
        "description": "Dismiss the User from Managers of the Job.",
        "operationId": "managers_remove_from_job",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagerAssignRemoveFromJob"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "managers"
        ]
      }
    },
    "/note_activities/": {
      "get": {
        "description": "",
        "operationId": "note_activities_list",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "proposal",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "candidate",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "job",
            "required": false,
            "type": "string"
          },
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/NoteActivity"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "note_activities"
        ]
      },
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "note_activities_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteActivity"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NoteActivity"
            }
          }
        },
        "tags": [
          "note_activities"
        ]
      }
    },
    "/note_activities/{id}/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this note activity.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "description": "",
        "operationId": "note_activities_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteActivity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NoteActivity"
            }
          }
        },
        "tags": [
          "note_activities"
        ]
      },
      "put": {
        "description": "",
        "operationId": "note_activities_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteActivity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NoteActivity"
            }
          }
        },
        "tags": [
          "note_activities"
        ]
      }
    },
    "/notifications/": {
      "get": {
        "description": "Viewset for Notification model.",
        "operationId": "notifications_list",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "unread",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "verb",
            "required": false,
            "type": "string"
          },
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Notification"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "notifications"
        ]
      },
      "parameters": [],
      "post": {
        "description": "Viewset for Notification model.",
        "operationId": "notifications_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        },
        "tags": [
          "notifications"
        ]
      }
    },
    "/notifications/mark_all_as_read/": {
      "parameters": [],
      "post": {
        "description": "Mark all User notifications as read.",
        "operationId": "notifications_mark_all_as_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "notifications"
        ]
      }
    },
    "/notifications/{id}/": {
      "delete": {
        "description": "Viewset for Notification model.",
        "operationId": "notifications_delete",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "notifications"
        ]
      },
      "get": {
        "description": "Viewset for Notification model.",
        "operationId": "notifications_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        },
        "tags": [
          "notifications"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this notification.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "description": "Viewset for Notification model.",
        "operationId": "notifications_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        },
        "tags": [
          "notifications"
        ]
      },
      "put": {
        "description": "Viewset for Notification model.",
        "operationId": "notifications_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        },
        "tags": [
          "notifications"
        ]
      }
    },
    "/notifications/{id}/mark_as_read/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this notification.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "description": "Mark the given Notification as read.",
        "operationId": "notifications_mark_as_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "notifications"
        ]
      }
    },
    "/proposal_comment/": {
      "get": {
        "description": "Viewset for the ProposalComment model.",
        "operationId": "proposal_comment_list",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "proposal",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "public",
            "required": false,
            "type": "string"
          },
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/ProposalComment"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "proposal_comment"
        ]
      },
      "parameters": [],
      "post": {
        "description": "Viewset for the ProposalComment model.",
        "operationId": "proposal_comment_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProposalComment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateProposalComment"
            }
          }
        },
        "tags": [
          "proposal_comment"
        ]
      }
    },
    "/proposal_comment/{id}/": {
      "get": {
        "description": "Viewset for the ProposalComment model.",
        "operationId": "proposal_comment_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProposalComment"
            }
          }
        },
        "tags": [
          "proposal_comment"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this proposal comment.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/proposal_interviews/": {
      "get": {
        "description": "",
        "operationId": "proposal_interviews_list",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "proposal",
            "required": false,
            "type": "string"
          },
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/ProposalInterview"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "proposal_interviews"
        ]
      },
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "proposal_interviews_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUpdateProposalInterview"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateUpdateProposalInterview"
            }
          }
        },
        "tags": [
          "proposal_interviews"
        ]
      }
    },
    "/proposal_interviews/public/{public_uuid}/": {
      "get": {
        "description": "",
        "operationId": "proposal_interviews_public_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProposalInterviewPublic"
            }
          }
        },
        "tags": [
          "proposal_interviews"
        ]
      },
      "parameters": [
        {
          "format": "uuid",
          "in": "path",
          "name": "public_uuid",
          "required": true,
          "type": "string"
        }
      ],
      "patch": {
        "description": "",
        "operationId": "proposal_interviews_public_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProposalInterviewPublic"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProposalInterviewPublic"
            }
          }
        },
        "tags": [
          "proposal_interviews"
        ]
      },
      "put": {
        "description": "",
        "operationId": "proposal_interviews_public_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProposalInterviewPublic"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProposalInterviewPublic"
            }
          }
        },
        "tags": [
          "proposal_interviews"
        ]
      }
    },
    "/proposal_interviews/{id}/": {
      "delete": {
        "description": "",
        "operationId": "proposal_interviews_delete",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "proposal_interviews"
        ]
      },
      "get": {
        "description": "",
        "operationId": "proposal_interviews_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProposalInterview"
            }
          }
        },
        "tags": [
          "proposal_interviews"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this proposal interview.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "description": "",
        "operationId": "proposal_interviews_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUpdateProposalInterview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateUpdateProposalInterview"
            }
          }
        },
        "tags": [
          "proposal_interviews"
        ]
      },
      "put": {
        "description": "",
        "operationId": "proposal_interviews_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUpdateProposalInterview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateUpdateProposalInterview"
            }
          }
        },
        "tags": [
          "proposal_interviews"
        ]
      }
    },
    "/proposal_interviews/{id}/assessment/": {
      "get": {
        "description": "",
        "operationId": "proposal_interview_assessment_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProposalInterviewAssessment"
            }
          }
        },
        "tags": [
          "proposal_interviews"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this proposal interview.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "description": "",
        "operationId": "proposal_interview_assessment_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProposalInterviewAssessment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED"
          }
        },
        "tags": [
          "proposal_interviews"
        ]
      }
    },
    "/proposal_question/": {
      "get": {
        "description": "",
        "operationId": "proposal_question_list",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "proposal",
            "required": false,
            "type": "string"
          },
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/ProposalQuestion"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "proposal_question"
        ]
      },
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "proposal_question_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProposalQuestion"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProposalQuestion"
            }
          }
        },
        "tags": [
          "proposal_question"
        ]
      }
    },
    "/proposal_question/{id}/": {
      "delete": {
        "description": "",
        "operationId": "proposal_question_delete",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "proposal_question"
        ]
      },
      "get": {
        "description": "",
        "operationId": "proposal_question_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProposalQuestion"
            }
          }
        },
        "tags": [
          "proposal_question"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this proposal question.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "description": "",
        "operationId": "proposal_question_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProposalQuestion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProposalQuestion"
            }
          }
        },
        "tags": [
          "proposal_question"
        ]
      },
      "put": {
        "description": "",
        "operationId": "proposal_question_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProposalQuestion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProposalQuestion"
            }
          }
        },
        "tags": [
          "proposal_question"
        ]
      }
    },
    "/proposals/": {
      "get": {
        "description": "Viewset for the Proposal model.",
        "operationId": "proposals_list",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "job",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "candidate__agency",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "stage",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "status__group",
            "required": false,
            "type": "string"
          },
          {
            "description": "Multiple values may be separated by commas.",
            "in": "query",
            "name": "status__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "Multiple values may be separated by commas.",
            "in": "query",
            "name": "status_group_category__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "job_contract",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "extra_fields",
            "required": false,
            "type": "string"
          },
          {
            "description": "Multiple values may be separated by commas.",
            "in": "query",
            "name": "client__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "is_placement_available",
            "required": false,
            "type": "string"
          },
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "proposals"
        ]
      },
      "parameters": [],
      "post": {
        "description": "Viewset for the Proposal model.",
        "operationId": "proposals_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProposal"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateProposal"
            }
          }
        },
        "tags": [
          "proposals"
        ]
      }
    },
    "/proposals/batch_create/": {
      "parameters": [],
      "post": {
        "description": "Viewset for the Proposal model.",
        "operationId": "proposals_batch_create",
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED"
          }
        },
        "tags": [
          "proposals"
        ]
      }
    },
    "/proposals/public_application/": {
      "parameters": [],
      "post": {
        "description": "Viewset for the Proposal model.",
        "operationId": "proposals_public_application",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublicCreateProposal"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED"
          }
        },
        "tags": [
          "proposals"
        ]
      }
    },
    "/proposals/validate_public_application/": {
      "parameters": [],
      "post": {
        "description": "Viewset for the Proposal model.",
        "operationId": "proposals_validate_public_application",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublicCreateProposal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "proposals"
        ]
      }
    },
    "/proposals/{id}/": {
      "delete": {
        "description": "Viewset for the Proposal model.",
        "operationId": "proposals_delete",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "proposals"
        ]
      },
      "get": {
        "description": "Viewset for the Proposal model.",
        "operationId": "proposals_read",
        "parameters": [
          {
            "in": "query",
            "minLength": 1,
            "name": "extra_fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "proposals"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this proposal.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "description": "Viewset for the Proposal model.",
        "operationId": "proposals_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/YasgUpdateProposal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/YasgUpdateProposal"
            }
          }
        },
        "tags": [
          "proposals"
        ]
      },
      "put": {
        "description": "Viewset for the Proposal model.",
        "operationId": "proposals_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/YasgUpdateProposal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/YasgUpdateProposal"
            }
          }
        },
        "tags": [
          "proposals"
        ]
      }
    },
    "/proposals/{id}/move_to_job/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this proposal.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "description": "Move proposal to other job.",
        "operationId": "proposals_move_to_job",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProposalMoveBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProposalMoveBody"
            }
          }
        },
        "tags": [
          "proposals"
        ]
      }
    },
    "/proposals/{id}/quick_actions/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this proposal.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "description": "Viewset for the Proposal model.",
        "operationId": "proposal_quick_actions",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuickActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "proposals"
        ]
      }
    },
    "/proposals_snapshot_diff/": {
      "get": {
        "description": "",
        "operationId": "proposals_snapshot_diff_list",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "description": "Multiple values may be separated by commas.",
            "in": "query",
            "name": "status__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "format": "date",
            "in": "query",
            "name": "date",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "job",
            "required": true,
            "type": "string"
          },
          {
            "format": "date",
            "in": "query",
            "name": "date_start",
            "required": true,
            "type": "string"
          },
          {
            "format": "date",
            "in": "query",
            "name": "date_end",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "day",
              "week",
              "month"
            ],
            "in": "query",
            "name": "granularity",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/ProposalsSnapshot"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "proposals_snapshot_diff"
        ]
      },
      "parameters": []
    },
    "/proposals_snapshot_diff/hidden_proposals/": {
      "get": {
        "description": "",
        "operationId": "proposals_snapshot_diff_hidden_proposals",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "description": "Multiple values may be separated by commas.",
            "in": "query",
            "name": "status__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "format": "date",
            "in": "query",
            "name": "date",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "job",
            "required": true,
            "type": "string"
          },
          {
            "format": "date",
            "in": "query",
            "name": "date_start",
            "required": true,
            "type": "string"
          },
          {
            "format": "date",
            "in": "query",
            "name": "date_end",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "day",
              "week",
              "month"
            ],
            "in": "query",
            "name": "granularity",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/ProposalsSnapshot"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "proposals_snapshot_diff"
        ]
      },
      "parameters": []
    },
    "/proposals_snapshot_state/": {
      "get": {
        "description": "",
        "operationId": "proposals_snapshot_state_list",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "description": "Multiple values may be separated by commas.",
            "in": "query",
            "name": "status__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "format": "date",
            "in": "query",
            "name": "date",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "job",
            "required": true,
            "type": "string"
          },
          {
            "format": "date",
            "in": "query",
            "name": "date_start",
            "required": true,
            "type": "string"
          },
          {
            "format": "date",
            "in": "query",
            "name": "date_end",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "day",
              "week",
              "month"
            ],
            "in": "query",
            "name": "granularity",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/ProposalsSnapshot"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "proposals_snapshot_state"
        ]
      },
      "parameters": []
    },
    "/proposals_snapshot_state/hidden_proposals/": {
      "get": {
        "description": "",
        "operationId": "proposals_snapshot_state_hidden_proposals",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "description": "Multiple values may be separated by commas.",
            "in": "query",
            "name": "status__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "format": "date",
            "in": "query",
            "name": "date",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "job",
            "required": true,
            "type": "string"
          },
          {
            "format": "date",
            "in": "query",
            "name": "date_start",
            "required": true,
            "type": "string"
          },
          {
            "format": "date",
            "in": "query",
            "name": "date_end",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "day",
              "week",
              "month"
            ],
            "in": "query",
            "name": "granularity",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/ProposalsSnapshot"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "proposals_snapshot_state"
        ]
      },
      "parameters": []
    },
    "/public/career_site/organization/{slug}/": {
      "get": {
        "description": "",
        "operationId": "public_career_site_organization_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CareerSiteOrganization"
            }
          }
        },
        "tags": [
          "public"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/public/career_site/{slug}/job_postings/": {
      "get": {
        "description": "",
        "operationId": "public_career_site_job_postings_list",
        "parameters": [
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/CareerSiteJobPostingPublic"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "public"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/public/career_site/{slug}/job_postings/{job_slug}/": {
      "get": {
        "description": "",
        "operationId": "public_career_site_job_postings_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CareerSiteJobPostingPublic"
            }
          }
        },
        "tags": [
          "public"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "job_slug",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "slug",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/recruiter_registration/register/": {
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "recruiter_sign_up_register",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecruiterRegistration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RecruiterRegistration"
            }
          }
        },
        "tags": [
          "recruiter_registration"
        ]
      }
    },
    "/registration/check_email/": {
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "registration_check_email",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegistrationCheckEmail"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RegistrationCheckEmail"
            }
          }
        },
        "tags": [
          "registration"
        ]
      }
    },
    "/staff/": {
      "get": {
        "description": "",
        "operationId": "staff_list",
        "parameters": [
          {
            "description": "Multiple values may be separated by commas.",
            "in": "query",
            "name": "is_active__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "group",
            "required": false,
            "type": "string"
          },
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Staff"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "staff"
        ]
      },
      "parameters": []
    },
    "/staff/avatar_list/": {
      "get": {
        "description": "",
        "operationId": "staff_avatar_list",
        "parameters": [
          {
            "description": "Multiple values may be separated by commas.",
            "in": "query",
            "name": "is_active__in",
            "required": false,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "group",
            "required": false,
            "type": "string"
          },
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The initial index from which to return the results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/StaffWithAvatar"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "staff"
        ]
      },
      "parameters": []
    },
    "/staff/validate_create/": {
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "staff_validate_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateStaff"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateStaff"
            }
          }
        },
        "tags": [
          "staff"
        ]
      }
    },
    "/staff/validate_partial_create/": {
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "staff_validate_partial_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateStaff"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateStaff"
            }
          }
        },
        "tags": [
          "staff"
        ]
      }
    },
    "/staff/{id}/": {
      "get": {
        "description": "",
        "operationId": "staff_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RetrieveStaff"
            }
          }
        },
        "tags": [
          "staff"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this user.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "patch": {
        "description": "",
        "operationId": "staff_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateStaff"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateStaff"
            }
          }
        },
        "tags": [
          "staff"
        ]
      },
      "put": {
        "description": "",
        "operationId": "staff_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateStaff"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateStaff"
            }
          }
        },
        "tags": [
          "staff"
        ]
      }
    },
    "/staff/{id}/photo/": {
      "delete": {
        "description": "",
        "operationId": "staff_photo_delete",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "staff"
        ]
      },
      "get": {
        "description": "",
        "operationId": "staff_photo_read",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Staff"
            }
          }
        },
        "tags": [
          "staff"
        ]
      },
      "parameters": [
        {
          "description": "A unique integer value identifying this user.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/staff/{id}/upload_photo/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this user.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "",
        "operationId": "staff_upload_photo",
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "staff"
        ]
      }
    },
    "/staff/{id}/validate_partial_update/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this user.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "description": "",
        "operationId": "staff_validate_partial_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateStaff"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateStaff"
            }
          }
        },
        "tags": [
          "staff"
        ]
      }
    },
    "/staff/{id}/validate_update/": {
      "parameters": [
        {
          "description": "A unique integer value identifying this user.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "description": "",
        "operationId": "staff_validate_update",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateStaff"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateStaff"
            }
          }
        },
        "tags": [
          "staff"
        ]
      }
    },
    "/stats/candidate_decline_reason/": {
      "get": {
        "description": "",
        "operationId": "stats_candidate_decline_reason",
        "parameters": [
          {
            "format": "date",
            "in": "query",
            "name": "date_start",
            "required": true,
            "type": "string"
          },
          {
            "format": "date",
            "in": "query",
            "name": "date_end",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "team",
              "function",
              "owner"
            ],
            "in": "query",
            "name": "filter_type",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter_value",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "stats"
        ]
      },
      "parameters": []
    },
    "/stats/candidates_hired/": {
      "get": {
        "description": "",
        "operationId": "stats_candidates_hired",
        "parameters": [
          {
            "format": "date",
            "in": "query",
            "name": "date_start",
            "required": true,
            "type": "string"
          },
          {
            "format": "date",
            "in": "query",
            "name": "date_end",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "team",
              "function",
              "owner"
            ],
            "in": "query",
            "name": "filter_type",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter_value",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "day",
              "week",
              "month"
            ],
            "in": "query",
            "name": "granularity",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "stats"
        ]
      },
      "parameters": []
    },
    "/stats/candidates_statuses/": {
      "get": {
        "description": "",
        "operationId": "stats_candidates_statuses",
        "parameters": [
          {
            "enum": [
              "day",
              "week",
              "month"
            ],
            "in": "query",
            "name": "granularity",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "job",
            "required": true,
            "type": "string"
          },
          {
            "format": "date",
            "in": "query",
            "name": "date_start",
            "required": true,
            "type": "string"
          },
          {
            "format": "date",
            "in": "query",
            "name": "date_end",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "stats"
        ]
      },
      "parameters": []
    },
    "/stats/contracts/": {
      "get": {
        "description": "",
        "operationId": "stats_contracts",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "stats"
        ]
      },
      "parameters": []
    },
    "/stats/conversion_ratio/": {
      "get": {
        "description": "",
        "operationId": "stats_conversion_ratio",
        "parameters": [
          {
            "format": "date",
            "in": "query",
            "name": "date_start",
            "required": true,
            "type": "string"
          },
          {
            "format": "date",
            "in": "query",
            "name": "date_end",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "team",
              "function",
              "owner"
            ],
            "in": "query",
            "name": "filter_type",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter_value",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "stats"
        ]
      },
      "parameters": []
    },
    "/stats/job_average_open/": {
      "get": {
        "description": "",
        "operationId": "stats_job_average_open",
        "parameters": [
          {
            "format": "date",
            "in": "query",
            "name": "date_start",
            "required": true,
            "type": "string"
          },
          {
            "format": "date",
            "in": "query",
            "name": "date_end",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "team",
              "function",
              "owner"
            ],
            "in": "query",
            "name": "filter_type",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter_value",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "stats"
        ]
      },
      "parameters": []
    },
    "/stats/job_average_open_kpi/": {
      "get": {
        "description": "",
        "operationId": "stats_job_average_open_kpi",
        "parameters": [
          {
            "format": "date",
            "in": "query",
            "name": "date_start",
            "required": true,
            "type": "string"
          },
          {
            "format": "date",
            "in": "query",
            "name": "date_end",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "stats"
        ]
      },
      "parameters": []
    },
    "/stats/open_jobs/": {
      "get": {
        "description": "",
        "operationId": "stats_open_jobs",
        "parameters": [
          {
            "format": "date",
            "in": "query",
            "name": "date_start",
            "required": true,
            "type": "string"
          },
          {
            "format": "date",
            "in": "query",
            "name": "date_end",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "team",
              "function",
              "owner"
            ],
            "in": "query",
            "name": "filter_type",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter_value",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "day",
              "week",
              "month"
            ],
            "in": "query",
            "name": "granularity",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "stats"
        ]
      },
      "parameters": []
    },
    "/stats/proposal_status_count/": {
      "get": {
        "description": "",
        "operationId": "stats_proposal_status_count",
        "parameters": [
          {
            "format": "date",
            "in": "query",
            "name": "date_start",
            "required": true,
            "type": "string"
          },
          {
            "format": "date",
            "in": "query",
            "name": "date_end",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "team",
              "function",
              "owner"
            ],
            "in": "query",
            "name": "filter_type",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter_value",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "stats"
        ]
      },
      "parameters": []
    },
    "/stats/sources/": {
      "get": {
        "description": "",
        "operationId": "stats_sources",
        "parameters": [
          {
            "format": "date",
            "in": "query",
            "name": "date_start",
            "required": true,
            "type": "string"
          },
          {
            "format": "date",
            "in": "query",
            "name": "date_end",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "team",
              "function",
              "owner"
            ],
            "in": "query",
            "name": "filter_type",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter_value",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "hired",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "stats"
        ]
      },
      "parameters": []
    },
    "/tags/": {
      "get": {
        "description": "",
        "operationId": "tags_list",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          },
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "items": {
                "$ref": "#/definitions/Tag"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "tags"
        ]
      },
      "parameters": []
    },
    "/team/": {
      "get": {
        "description": "",
        "operationId": "team_list",
        "parameters": [
          {
            "description": "A search term.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "items": {
                "$ref": "#/definitions/Team"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "team"
        ]
      },
      "parameters": []
    },
    "/user/": {
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "user_create",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/user/activate/": {
      "parameters": [],
      "post": {
        "description": "Endpoint for activating account via link.",
        "operationId": "user_activate",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserActivationForm"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserActivationForm"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/user/change_password/": {
      "parameters": [],
      "post": {
        "description": "Based on django.contrib.auth.views.PasswordChangeView",
        "operationId": "user_change_password",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserChangePassword"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserChangePassword"
            }
          }
        },
        "summary": "Endpoint for changing password of logged in user.",
        "tags": [
          "user"
        ]
      }
    },
    "/user/confirm_password_reset/": {
      "parameters": [],
      "post": {
        "description": "Based on django.contrib.auth.views.PasswordResetConfirmView",
        "operationId": "user_confirm_password_reset",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserSetPassword"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserSetPassword"
            }
          }
        },
        "summary": "Endpoint for changing password via reset link.",
        "tags": [
          "user"
        ]
      }
    },
    "/user/delete_photo/": {
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "user_delete_photo",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/user/download_photo/": {
      "get": {
        "description": "",
        "operationId": "user_download_photo",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "user"
        ]
      },
      "parameters": []
    },
    "/user/login/": {
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "user_login",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/user/logout/": {
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "user_logout",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/user/notifications_count/": {
      "get": {
        "description": "",
        "operationId": "user_notifications_count",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NotificationsCount"
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "parameters": []
    },
    "/user/read_current/": {
      "get": {
        "description": "",
        "operationId": "user_read_current",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "parameters": []
    },
    "/user/reset_password/": {
      "parameters": [],
      "post": {
        "description": "Based on django.contrib.auth.views.PasswordResetView",
        "operationId": "user_reset_password",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserResetPassword"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserResetPassword"
            }
          }
        },
        "summary": "Endpoint for sending password reset link.",
        "tags": [
          "user"
        ]
      }
    },
    "/user/update_legal/": {
      "parameters": [],
      "patch": {
        "description": "",
        "operationId": "user_update_legal",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserLegal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateUserLegal"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/user/update_settings/": {
      "parameters": [],
      "patch": {
        "description": "",
        "operationId": "user_update_settings",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/user/upload_photo/": {
      "parameters": [],
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "",
        "operationId": "user_upload_photo",
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/zendesk/sso": {
      "get": {
        "description": "",
        "operationId": "zendesk_sso_jwt_token_retrieve",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ZendeskJWT"
            }
          }
        },
        "tags": [
          "zendesk"
        ]
      },
      "parameters": []
    },
    "/zoho/get_candidate/": {
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "zoho_get_candidate",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ZohoGet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ZohoCandidate"
            }
          }
        },
        "tags": [
          "zoho"
        ]
      }
    },
    "/zoho/save_candidate/": {
      "parameters": [],
      "post": {
        "description": "",
        "operationId": "zoho_save_candidate",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ZohoCandidate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Candidate"
            }
          }
        },
        "tags": [
          "zoho"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "security": [
    {
      "Basic": []
    }
  ],
  "securityDefinitions": {
    "Basic": {
      "type": "basic"
    }
  },
  "swagger": "2.0"
}